{"version":3,"sources":["../../../node_modules/@gmod/ucsc-hub/dist/raFile.js","../../../node_modules/@gmod/ucsc-hub/dist/raStanza.js","../../../node_modules/@babel/runtime/helpers/get.js","../../../node_modules/@babel/runtime/helpers/superPropBase.js","../../../node_modules/@gmod/ucsc-hub/dist/trimStartEndPolyfills.js","../../../node_modules/@gmod/ucsc-hub/dist/trackDbFile.js","../../../node_modules/@gmod/ucsc-hub/dist/hubFile.js","../../../node_modules/@gmod/ucsc-hub/dist/genomesFile.js","../../../node_modules/@gmod/ucsc-hub/dist/index.js","../../../node_modules/@material-ui/icons/Email.js","../../../plugins/trackhub-registry/src/trackhub-registry/HubDetails.js","../../../plugins/trackhub-registry/src/trackhub-registry/SelectBox.js","../../../plugins/trackhub-registry/src/trackhub-registry/TrackHubRegistrySelect.js"],"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_wrapNativeSuper2","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","RaStanza","RaFile","_Map","default","Derived","_super","result","Super","NewTarget","this","constructor","arguments","apply","raFile","_this","options","length","undefined","checkIndent","stanzas","_checkIndent","trimEnd","split","_stanzaAndCommentOrder","forEach","stanza","add","key","value","Error","trim","startsWith","stanzaLines","map","line","every","push","join","raStanza","nameKey","concat","has","name","includes","filter","_this2","size","entry","get","Map","module","exports","_typeof2","_slicedToArray2","_keyAndCommentOrder","endsWith","_trimmedLine","slice","_continuedLine","trimStart","combinedLine","indent","match","_indent","trimmedLine","sep","indexOf","lines","superPropBase","_get","__esModule","target","property","receiver","base","desc","Object","getOwnPropertyDescriptor","getPrototypeOf","object","hasOwnProperty","String","trimLeft","replace","trimRight","TrackDbFile","_RaFile","trackDbFile","track","trackName","trackKeys","Array","from","keys","missingKeys","parentTrackKeys","some","settings","currentTrackName","_currentTrackName$spl","currentTrack","set","parentTracks","reverse","parentTrack","HubFile","_RaStanza","hubFile","hubTxtFields","extraFields","missingFields","field","GenomesFile","genomesFile","requiredFields","genome","genomeName","_interopRequireWildcard","defineProperty","React","_default","createElement","d","HubDetails","props","useState","setHubFile","errorMessage","setErrorMessage","hub","hubUrl","url","longLabel","shortLabel","useEffect","_getHubTxt","a","_context","hubHandle","openLocation","uri","locationType","readFile","hubTxt","message","newHubFile","error","getHubTxt","Card","CardContent","Typography","color","CardHeader","title","__dangerouslySetInnerHTML","DOMPurify","sanitize","CardActions","IconButton","href","rel","EmailIcon","URL","OpenInNewIcon","LinearProgress","variant","useStyles","makeStyles","theme","formControl","minWidth","marginLeft","spacing","marginRight","SelectBox","selectList","selectedItem","handleSelect","label","helpText","classes","FormControl","className","InputLabel","Select","onChange","item","description","synonyms","MenuItem","FormHelperText","QueryStatus","status","Wire","children","hubList","maxHeight","overflowY","genomeSelector","marginTop","TrackHubRegistrySelect","model","setModelReady","assemblies","setAssemblies","selectedSpecies","setSelectedSpecies","selectedAssembly","setSelectedAssembly","hubs","setHubs","allHubsRetrieved","setAllHubsRetrieved","selectedHub","setSelectedHub","getHubs","_getHubs","signal","reset","newHubs","page","Math","floor","_context2","doPost","entries_per_page","body","JSON","stringify","assembly","response","_iterator","items","stat","id","total_entries","doGet","_doGet","params","urlParams","param","_context3","fetch","rawResponse","isAbortException","ok","statusText","json","_doPost","_context4","method","controller","AbortController","_getAssemblies","pingResponse","ping","assembliesResponse","getAssemblies","abort","renderItems","speciesList","sort","toLowerCase","event","ret","s","FormLabel","RadioGroup","newHub","assemblyNames","trackDbId","values","formControlProps","Tooltip","SanitizedHTML","html","placement","interactive","FormControlLabel","disabled","Boolean","control","Radio"],"mappings":"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","file":"16.aa3f117980c15500c977.worker.js","sourcesContent":["\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaStanza = require('./raStanza');\n\n/**\nlass representing an ra file. Each file is composed of multiple stanzas, and\neach stanza is separated by one or more blank lines. Each stanza is stored in\na Map with the key being the value of the first key-value pair in the stanza.\nhe usual Map methods can be used on the file. An additional method `add()`\nis available to take a raw line of text and break it up into a key and value\nand add them to the class. This should be favored over `set()` when possible,\nas it performs more validity checks than using `set()`.\nextends Map\nproperty {undefined|string} nameKey - The key of the first line of all the\nstanzas (`undefined` if the stanza has no lines yet).\nthrows {Error} Throws if an empty stanza is added, if the key in the first\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * key-value pair of each stanze isn't the same, or if two stanzas have the same\nvalue for the key-value pair in their first lines.\nparam {(string|string[])} [raFile=[]] - An ra file, either as a single\nstring or an array of strings with one stanza per entry. Supports both LF\nand CRLF line terminators.\nparam {object} options\nparam {boolean} options.checkIndent [true] - Check if a the stanzas within\nthe file are indented consistently and keep track of the indentation\nvar\nRaFile = /*#__PURE__*/function (_Map) {(0, _inherits2.default)(RaFile, _Map);var _super = _createSuper(RaFile);\n  function RaFile(raFile) {var _this;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { checkIndent: true };(0, _classCallCheck2.default)(this, RaFile);\n    _this = _super.call(this);var\n    checkIndent = options.checkIndent;\n    _this._checkIndent = checkIndent;\n    var stanzas;\n    if (typeof raFile === 'string') {\n      stanzas = raFile.trimEnd().split(/(?:[\\t ]*\\r?\\n){2,}/);\n    } else if (!raFile) {\n      stanzas = [];\n    } else {\n      stanzas = raFile;\n    }\n    _this._stanzaAndCommentOrder = [];\n    stanzas.forEach(function (stanza) {\n      _this.add(stanza);\n    });return _this;\n  }\n\n  /**\n     * Add a single stanza to the file\n     * @param {string} stanza A single stanza\n     * @returns {RaFile} The RaFile object\n     */(0, _createClass2.default)(RaFile, [{ key: \"add\", value: function add(\n    stanza) {\n      if (stanza === '') throw new Error('Invalid stanza, was empty');\n      if (stanza.trim().startsWith('#')) {\n        var stanzaLines = stanza.\n        trimEnd().\n        split(/\\r?\\n/).\n        map(function (line) {return line.trim();});\n        if (stanzaLines.every(function (line) {return line.startsWith('#');})) {\n          this._stanzaAndCommentOrder.push(stanzaLines.join('\\n'));\n          return this;\n        }\n      }\n      var raStanza = new RaStanza(stanza, { checkIndent: this._checkIndent });\n      if (!this.nameKey) this.nameKey = raStanza.nameKey;else\n      if (raStanza.nameKey !== this.nameKey)\n      throw new Error(\n      'The first line in each stanza must have the same key. ' + \"Saw both \".concat(\n      this.nameKey, \" and \").concat(raStanza.nameKey));\n\n      if (this.has(raStanza.name))\n      throw new Error(\"Got duplicate stanza name: \".concat(raStanza.name));\n      this._stanzaAndCommentOrder.push(raStanza.name);\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"set\", this).call(this, raStanza.name, raStanza);\n    }\n\n    /**\n       * Use `add()` if possible instead of this method. If using this, be aware\n       * that no checks are made for comments, empty stanzas, duplicate keys, etc.\n       * @param {string} key The key of the RaFile stanza\n       * @param {RaStanza} value The RaFile stanza used to replace the prior one\n       */ }, { key: \"update\", value: function update(\n    key, value) {\n      if (!(value instanceof RaStanza))\n      throw new Error(\"Value of \".concat(key, \" is not an RaStanza\"));\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"set\", this).call(this, key, value);\n    }\n\n    /**\n       * Delete a stanza\n       * @param {string} stanza The name of the stanza to delete (the value in its\n       * first key-value pair)\n       * @returns {boolean} true if the deleted stanza existed, false if it did not\n       */ }, { key: \"delete\", value: function _delete(\n    stanza) {\n      if (this._stanzaAndCommentOrder.includes(stanza))\n      this._stanzaAndCommentOrder = this._stanzaAndCommentOrder.filter(\n      function (value) {return value !== stanza;});\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"delete\", this).call(this, stanza);\n    }\n\n    /**\n       * Clear all stanzas and comments\n       */ }, { key: \"clear\", value: function clear()\n    {\n      this._stanzaAndCommentOrder.length = 0;\n      this.nameKey = undefined;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n       * @returns {string} Returns the stanza as a string fit for writing to a ra\n       * file. Original leading indent is preserved. It may not be the same as the\n       * input stanza as lines that were joined with `\\` in the input will be output\n       *  as a single line and all comments will have the same indentations as the\n       * rest of the stanza. Comments between joined lines will move before that\n       * line.\n       */ }, { key: \"toString\", value: function toString()\n    {var _this2 = this;\n      if (this.size === 0) return '';\n      var stanzas = [];\n      this._stanzaAndCommentOrder.forEach(function (entry) {\n        if (entry.startsWith('#')) stanzas.push(\"\".concat(entry, \"\\n\"));else\n        stanzas.push(_this2.get(entry).toString());\n      });\n      return stanzas.join('\\n');\n    } }]);return RaFile;}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Map));\n\n\nmodule.exports = RaFile;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}require('./trimStartEndPolyfills');\n\n/**\nlass representing an ra file stanza. Each stanza line is split into its key\nand value and stored as a Map, so the usual Map methods can be used on the\nstanza. An additional method `add()` is available to take a raw line of text\nand break it up into a key and value and add them to the class. This should\nbe favored over `set()` when possible, as it performs more validity checks\nthan using `set()`.\nextends Map\nproperty {undefined|string} nameKey - The key of the first line of the\nstanza (`undefined` if the stanza has no lines yet).\nproperty {undefined|string} name - The value of the first line of the\nstanza, by which it is identified in an ra file  (`undefined` if the stanza\nhas no lines yet).\nproperty {undefined|string} indent - The leading indent of the stanza,\nwhich is the same for every line (`undefined` if the stanza has no lines\nyet, `''` if there is no indent).\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       * @throws {Error} Throws if the stanza has blank lines, if the first line\ndoesn't have both a key and a value, if a key in the stanza is\nduplicated, or if lines in the stanza have inconsistent indentation.\nparam {(string|string[])} [stanza=[]] - An ra file stanza, either as a\nstring or a array of strings with one line per entry. Supports both LF and\nline terminators.\nparam {object} options\nparam {boolean} options.checkIndent [true] - Check if a stanza is indented\nconsistently and keep track of the indentation\nvar\nRaStanza = /*#__PURE__*/function (_Map) {(0, _inherits2.default)(RaStanza, _Map);var _super = _createSuper(RaStanza);\n  function RaStanza(stanza) {var _this;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { checkIndent: true };(0, _classCallCheck2.default)(this, RaStanza);\n    _this = _super.call(this);var\n    checkIndent = options.checkIndent;\n    _this._checkIndent = checkIndent;\n    var stanzaLines;\n    if (typeof stanza === 'string') {\n      stanzaLines = stanza.trimEnd().split(/\\r?\\n/);\n    } else if (!stanza) {\n      stanzaLines = [];\n    } else {\n      stanzaLines = stanza;\n    }\n    _this._keyAndCommentOrder = [];\n    stanzaLines.forEach(function (line) {\n      _this.add(line);\n    });return _this;\n  }\n\n  /**\n     * Add a single line to the stanza. If the exact line already exists, does\n     * nothing.\n     * @param {string} line A stanza line\n     * @returns {RaStanza} The RaStanza object\n     */(0, _createClass2.default)(RaStanza, [{ key: \"add\", value: function add(\n    line) {\n      if (line === '') throw new Error('Invalid stanza, contained blank lines');\n      if (line.trim().startsWith('#')) {\n        this._keyAndCommentOrder.push(line.trim());\n        return this;\n      }\n      if (line.trimEnd().endsWith('\\\\')) {\n        var _trimmedLine = line.trimEnd().slice(0, -1);\n        if (this._continuedLine) this._continuedLine += _trimmedLine.trimStart();else\n        this._continuedLine = _trimmedLine;\n        return this;\n      }\n      var combinedLine = line;\n      if (this._continuedLine) {\n        combinedLine = this._continuedLine + combinedLine.trimStart();\n        this._continuedLine = undefined;\n      }\n      if (this.indent || this._checkIndent) {\n        var indent = combinedLine.match(/^([ \\t]+)/);\n        if (this.indent === undefined) {\n          if (indent) {var _indent = (0, _slicedToArray2.default)(indent, 2);this.indent = _indent[1];} else\n          this.indent = '';\n        } else if (\n        this.indent === '' && indent !== null ||\n        this.indent && this.indent !== indent[1])\n        {\n          throw new Error('Inconsistent indentation of stanza');\n        }\n      } else {\n        this.indent = '';\n      }\n      var trimmedLine = combinedLine.trim();\n      var sep = trimmedLine.indexOf(' ');\n      if (sep === -1) {\n        if (!this.nameKey)\n        throw new Error(\n        'First line in a stanza must have both a key and a value');\n\n        // Adding a key that already exists and has no value is a no-op\n        if (this.has(trimmedLine)) return this;\n        this._keyAndCommentOrder.push(trimmedLine);\n        return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"set\", this).call(this, trimmedLine, '');\n      }\n      var key = trimmedLine.slice(0, sep);\n      var value = trimmedLine.slice(sep + 1);\n      if (this.has(key) && value !== this.get(key))\n      throw new Error(\n      'Got duplicate key with a different value in stanza: ' + \"\\\"\".concat(\n      key, \"\\\" key has both \").concat(this.get(key), \" and \").concat(value));\n\n      this._keyAndCommentOrder.push(key);\n      if (!this.nameKey) {\n        this.nameKey = key;\n        this.name = trimmedLine.slice(sep + 1);\n      }\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"set\", this).call(this, key, value);\n    }\n\n    /**\n       * Use `add()` if possible instead of this method. If using this, be aware\n       * that no checks are made for comments, indentation, duplicate keys, etc.\n       * @param {string} key The key of the stanza line\n       * @param {string} value The value of the stanza line\n       * @returns {RaStanza} The RaStanza object\n       */ }, { key: \"set\", value: function set(\n    key, value) {\n      if (!(typeof value === 'string'))\n      throw new Error(\"Value of \".concat(key, \" must be a string, got \").concat((0, _typeof2.default)(value)));\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"set\", this).call(this, key, value);\n    }\n\n    /**\n       * Delete a line\n       * @param {string} key The key of the line to delete\n       * @returns {boolean} true if the deleted line existed, false if it did not\n       */ }, { key: \"delete\", value: function _delete(\n    key) {\n      if (key === this.nameKey)\n      throw new Error(\n      'Cannot delete the first line in a stanza (you can still overwrite it with set()).');\n\n      if (this._keyAndCommentOrder.includes(key))\n      this._keyAndCommentOrder = this._keyAndCommentOrder.filter(\n      function (value) {return value !== key;});\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"delete\", this).call(this, key);\n    }\n\n    /**\n       * Clear all lines and comments\n       */ }, { key: \"clear\", value: function clear()\n    {\n      this._keyAndCommentOrder.length = 0;\n      this._continuedLine = undefined;\n      this.indent = undefined;\n      this.name = undefined;\n      this.nameKey = undefined;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n       * @returns {string} Returns the stanza as a string fit for writing to a ra\n       * file. Original leading indent is preserved. It may not be the same as the\n       * input stanza as lines that were joined with `\\` in the input will be output\n       * as a single line and all comments will have the same indentations as the\n       * rest of the stanza. Comments between joined lines will move before that\n       * line.\n       */ }, { key: \"toString\", value: function toString()\n    {var _this2 = this;\n      if (this.size === 0) return '';\n      var lines = [];\n      this._keyAndCommentOrder.forEach(function (entry) {\n        if (entry.startsWith('#')) lines.push(\"\".concat(_this2.indent).concat(entry));else\n        lines.push(\"\".concat(_this2.indent).concat(entry, \" \").concat(_this2.get(entry)).trimEnd());\n      });\n      return \"\".concat(lines.join('\\n'), \"\\n\");\n    } }]);return RaStanza;}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Map));\n\n\nmodule.exports = RaStanza;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\"; /* eslint-disable no-extend-native */\n/* eslint-disable func-names */\nif (!String.prototype.trimStart) {\n  if (String.prototype.trimLeft) {\n    String.prototype.trimStart = String.prototype.trimLeft;\n  } else {\n    String.prototype.trimStart = function () {\n      return this.replace(/^[\\s\\uFEFF\\xA0]+/g, '');\n    };\n  }\n}\n\nif (!String.prototype.trimEnd) {\n  if (String.prototype.trimRight) {\n    String.prototype.trimEnd = String.prototype.trimRight;\n  } else {\n    String.prototype.trimEnd = function () {\n      return this.replace(/[\\s\\uFEFF\\xA0]+$/g, '');\n    };\n  }\n}","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaFile = require('./raFile');\n\n/**\nlass representing a genomes.txt file.\nextends RaFile\nparam {(string|string[])} [trackDbFile=[]] - A trackDb.txt file as a string\nthrows {Error} Throws if \"track\" is not the first key in each track or if a\ntrack is missing required keys\nvar\nTrackDbFile = /*#__PURE__*/function (_RaFile) {(0, _inherits2.default)(TrackDbFile, _RaFile);var _super = _createSuper(TrackDbFile);\n  function TrackDbFile(trackDbFile) {var _this;(0, _classCallCheck2.default)(this, TrackDbFile);\n    _this = _super.call(this, trackDbFile, { checkIndent: false });\n    if (_this.nameKey !== 'track')\n    throw new Error(\"trackDb has \\\"\".concat(\n    _this.nameKey, \"\\\" instead of \\\"track\\\" as the first line in each track\"));\n\n    _this.forEach(function (track, trackName) {\n      var trackKeys = Array.from(track.keys());\n      var missingKeys = [];\n      var requiredKeys = ['track', 'shortLabel'];\n      requiredKeys.forEach(function (key) {\n        if (!trackKeys.includes(key)) missingKeys.push(key);\n      });\n      if (missingKeys.length > 0)\n      throw new Error(\"Track \".concat(\n      trackName, \" is missing required key(s): \").concat(missingKeys.join(\n      ', ')));\n\n\n      var parentTrackKeys = [\n      'superTrack',\n      'compositeTrack',\n      'container',\n      'view'];\n\n      if (!trackKeys.some(function (key) {return parentTrackKeys.includes(key);})) {\n        if (!trackKeys.includes('bigDataUrl'))\n        throw new Error(\"Track \".concat(\n        trackName, \" is missing required key \\\"bigDataUrl\\\"\"));\n\n        if (!trackKeys.includes('type')) {\n          var settings = _this.settings(trackName);\n          var settingsKeys = Array.from(settings.keys());\n          if (!settingsKeys.includes('type'))\n          throw new Error(\"Neither track \".concat(\n          trackName, \" nor any of its parent tracks have the required key \\\"type\\\"\"));\n\n        }\n      }\n      var indent = '';\n      var currentTrackName = trackName;\n      do {\n        currentTrackName = _this.get(currentTrackName).get('parent');\n        if (currentTrackName) {\n          ;var _currentTrackName$spl = currentTrackName.split(' ');var _currentTrackName$spl2 = (0, _slicedToArray2.default)(_currentTrackName$spl, 1);currentTrackName = _currentTrackName$spl2[0];\n          indent += '    ';\n        }\n      } while (currentTrackName);\n      var currentTrack = _this.get(trackName);\n      currentTrack.indent = indent;\n      _this.set(trackName, currentTrack);\n    });return _this;\n  }\n\n  /**\n     * Gets all track entries including those of parent tracks, with closer\n     * entries overriding more distant ones\n     * @param {string} trackName The name of a track\n     * @throws {Error} Throws if track name does not exist in the trackDb\n     */(0, _createClass2.default)(TrackDbFile, [{ key: \"settings\", value: function settings(\n    trackName) {var _this2 = this;\n      if (!this.has(trackName))\n      throw new Error(\"Track \".concat(trackName, \" does not exist\"));\n      var parentTracks = [trackName];\n      var currentTrackName = trackName;\n      do {\n        currentTrackName = this.get(currentTrackName).get('parent');\n        if (currentTrackName) parentTracks.push(currentTrackName);\n      } while (currentTrackName);\n      var settings = new Map();\n      parentTracks.reverse();\n      parentTracks.forEach(function (parentTrack) {\n        _this2.get(parentTrack).forEach(function (value, key) {\n          settings.set(key, value);\n        });\n      });\n      return settings;\n    } }]);return TrackDbFile;}(RaFile);\n\n\nmodule.exports = TrackDbFile;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaStanza = require('./raStanza');\n\n/**\nlass representing a hub.txt file.\nextends RaStanza\nparam {(string|string[])} [hubFile=[]] - A hub.txt file as a string\nthrows {Error} Throws if the first line of the hub.txt file doesn't start\nwith \"hub <hub_name>\", if it has invalid entries, or is missing required\nentries\nvar\nHubFile = /*#__PURE__*/function (_RaStanza) {(0, _inherits2.default)(HubFile, _RaStanza);var _super = _createSuper(HubFile);\n  function HubFile(hubFile) {var _this;(0, _classCallCheck2.default)(this, HubFile);\n    _this = _super.call(this, hubFile);\n    if (_this.nameKey !== 'hub')\n    throw new Error('Hub file must begin with a line like \"hub <hub_name>\"');\n    var hubTxtFields = [\n    'hub',\n    'shortLabel',\n    'longLabel',\n    'genomesFile',\n    'email',\n    'descriptionUrl'];\n\n    var extraFields = [];\n    _this.forEach(function (value, key) {\n      if (!hubTxtFields.includes(key)) extraFields.push(key);\n    });\n    if (extraFields.length > 0)\n    throw new Error(\"Hub file has invalid entr\".concat(\n\n    extraFields.length === 1 ? 'y' : 'ies', \": \").concat(\n    extraFields.join(', ')));\n\n    var missingFields = [];\n    hubTxtFields.forEach(function (field) {\n      if (field !== 'descriptionUrl' && !_this.get(field))\n      missingFields.push(field);\n    });\n    if (missingFields.length > 0)\n    throw new Error(\"Hub file is missing required entr\".concat(\n\n    missingFields.length === 1 ? 'y' : 'ies', \": \").concat(\n    missingFields.join(', ')));return _this;\n\n  }return HubFile;}(RaStanza);\n\n\nmodule.exports = HubFile;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaFile = require('./raFile');\n\n/**\nlass representing a genomes.txt file.\nextends RaFile\nparam {(string|string[])} [genomesFile=[]] - A genomes.txt file as a string\nthrows {Error} Throws if the first line of the hub.txt file doesn't start\nwith \"genome <genome_name>\" or if it has invalid entries\nvar\nGenomesFile = /*#__PURE__*/function (_RaFile) {(0, _inherits2.default)(GenomesFile, _RaFile);var _super = _createSuper(GenomesFile);\n  function GenomesFile(genomesFile) {var _this;(0, _classCallCheck2.default)(this, GenomesFile);\n    _this = _super.call(this, genomesFile);\n    if (_this.nameKey !== 'genome')\n    throw new Error(\n    'Genomes file must begin with a line like \"genome <genome_name>\"');\n\n\n    // TODO: check if genome is hosted by UCSC and if not, require twoBitPath and groups\n    var requiredFields = [\n    'genome',\n    'trackDb'\n    // 'twoBitPath',\n    // 'groups',\n    ];\n    _this.forEach(function (genome, genomeName) {\n      var missingFields = [];\n      requiredFields.forEach(function (field) {\n        if (!genome.get(field)) missingFields.push(field);\n      });\n      if (missingFields.length > 0)\n      throw new Error(\"Genomes file entry \".concat(\n      genomeName, \" is missing required entr\").concat(\n      missingFields.length === 1 ? 'y' : 'ies', \": \").concat(\n      missingFields.join(', ')));\n\n    });return _this;\n  }return GenomesFile;}(RaFile);\n\n\nmodule.exports = GenomesFile;","\"use strict\";var RaFile = require('./raFile');\nvar RaStanza = require('./raStanza');\nvar TrackDbFile = require('./trackDbFile');\nvar HubFile = require('./hubFile');\nvar GenomesFile = require('./genomesFile');\n\nmodule.exports = { RaFile: RaFile, RaStanza: RaStanza, TrackDbFile: TrackDbFile, HubFile: HubFile, GenomesFile: GenomesFile };","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');\n\nexports.default = _default;","import { openLocation } from '@jbrowse/core/util/io'\nimport { HubFile } from '@gmod/ucsc-hub'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Typography from '@material-ui/core/Typography'\nimport EmailIcon from '@material-ui/icons/Email'\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\nimport PropTypes from 'prop-types'\nimport DOMPurify from 'dompurify'\nimport React, { useEffect, useState } from 'react'\n\nfunction HubDetails(props) {\n  const [hubFile, setHubFile] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const { hub } = props\n\n  const { url: hubUrl, longLabel, shortLabel } = hub\n\n  useEffect(() => {\n    async function getHubTxt() {\n      let hubTxt\n      try {\n        const hubHandle = openLocation({\n          uri: hubUrl,\n          locationType: 'UriLocation',\n        })\n        hubTxt = await hubHandle.readFile('utf8')\n      } catch (error) {\n        setErrorMessage(\n          <span>\n            <strong>Error retrieving hub</strong> {error.message} <br />\n            {hubUrl}\n          </span>,\n        )\n        return\n      }\n      try {\n        const newHubFile = new HubFile(hubTxt)\n        setHubFile(newHubFile)\n      } catch (error) {\n        setErrorMessage(\n          <span>\n            <strong>Could not parse genomes file:</strong> <br />\n            {error.message} <br />\n            {hubUrl}\n          </span>,\n        )\n      }\n    }\n\n    getHubTxt()\n  }, [hubUrl])\n  if (errorMessage) {\n    return (\n      <Card>\n        <CardContent>\n          <Typography color=\"error\">{errorMessage}</Typography>\n        </CardContent>\n      </Card>\n    )\n  }\n  if (hubFile) {\n    return (\n      <Card>\n        <CardHeader title={shortLabel} />\n        <CardContent>\n          <div __dangerouslySetInnerHTML={DOMPurify.sanitize(longLabel)} />\n        </CardContent>\n        <CardActions>\n          <IconButton\n            href={`mailto:${hubFile.get('email')}`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            color=\"secondary\"\n          >\n            <EmailIcon />\n          </IconButton>\n          {hubFile.get('descriptionUrl') ? (\n            <IconButton\n              href={\n                new URL(hubFile.get('descriptionUrl'), new URL(hubUrl)).href\n              }\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <OpenInNewIcon color=\"secondary\" />\n            </IconButton>\n          ) : null}\n        </CardActions>\n      </Card>\n    )\n  }\n  return <LinearProgress variant=\"query\" />\n}\n\nHubDetails.propTypes = {\n  hub: PropTypes.shape().isRequired,\n}\n\nexport default HubDetails\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 192,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n}))\n\nfunction SelectBox({\n  selectList,\n  selectedItem,\n  handleSelect,\n  label,\n  helpText,\n}) {\n  const classes = useStyles()\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel>{label}</InputLabel>\n      <Select value={selectedItem} onChange={handleSelect}>\n        {selectList.map(item => {\n          let value\n          let description\n          if (item.name) {\n            value = item.name\n            description = `${item.name} (${item.synonyms.join(' ')})`\n          }\n          return (\n            <MenuItem key={description || item} value={value || item}>\n              {description || item}\n            </MenuItem>\n          )\n        })}\n      </Select>\n      <FormHelperText>{selectedItem ? '' : helpText}</FormHelperText>\n    </FormControl>\n  )\n}\n\nSelectBox.propTypes = {\n  selectList: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.shape()]),\n  ).isRequired,\n  selectedItem: PropTypes.string.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  helpText: PropTypes.string.isRequired,\n}\n\nexport default SelectBox\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  LinearProgress,\n  Radio,\n  RadioGroup,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { isAbortException } from '@jbrowse/core/util'\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML'\nimport PropTypes from 'prop-types'\nimport HubDetails from './HubDetails'\nimport SelectBox from './SelectBox'\n\nfunction QueryStatus(props) {\n  const { status } = props\n  return (\n    <>\n      <LinearProgress variant=\"query\" />\n      <Typography>{status}</Typography>\n    </>\n  )\n}\n\nQueryStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n}\n\n// Need this for FormControlLabel to work with Tooltip\n// https://github.com/mui-org/material-ui/issues/2225#issuecomment-460041878\nfunction Wire({ children, ...props }) {\n  return children(props)\n}\n\nconst useStyles = makeStyles(theme => ({\n  hubList: {\n    maxHeight: 400,\n    overflowY: 'auto',\n  },\n  genomeSelector: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nfunction TrackHubRegistrySelect({ model, setModelReady }) {\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [assemblies, setAssemblies] = useState(null)\n  const [selectedSpecies, setSelectedSpecies] = useState('')\n  const [selectedAssembly, setSelectedAssembly] = useState('')\n  const [hubs, setHubs] = useState(new Map())\n  const [allHubsRetrieved, setAllHubsRetrieved] = useState(false)\n  const [selectedHub, setSelectedHub] = useState('')\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (selectedHub) {\n      setModelReady(true)\n    } else {\n      setModelReady(false)\n    }\n  }, [selectedHub, setModelReady])\n\n  useEffect(() => {\n    const controller = new AbortController()\n    const { signal } = controller\n    async function getAssemblies() {\n      const pingResponse = await doGet(\n        'https://www.trackhubregistry.org/api/info/ping',\n        undefined,\n        { signal },\n      )\n      if (!pingResponse) {\n        return\n      }\n      if (pingResponse.ping !== 1) {\n        setErrorMessage('Registry is not available')\n        return\n      }\n      const assembliesResponse = await doGet(\n        'https://www.trackhubregistry.org/api/info/assemblies',\n        undefined,\n        { signal },\n      )\n      if (assembliesResponse) {\n        setAssemblies(assembliesResponse)\n      }\n    }\n\n    getAssemblies()\n\n    return () => {\n      controller.abort()\n    }\n  }, [])\n\n  useEffect(() => {\n    const controller = new AbortController()\n    const { signal } = controller\n    if (!errorMessage) {\n      if (selectedAssembly && !hubs.size) {\n        getHubs(signal, true)\n      } else if (hubs.size && !allHubsRetrieved) {\n        getHubs(signal)\n      }\n    }\n\n    return () => {\n      controller.abort()\n    }\n  })\n\n  async function getHubs(signal, reset) {\n    const entriesPerPage = 10\n    const newHubs = reset ? new Map() : new Map(hubs)\n    const page = Math.floor(hubs.size / entriesPerPage) + 1\n    const response = await doPost(\n      'https://www.trackhubregistry.org/api/search',\n      { page, entries_per_page: entriesPerPage },\n      { body: JSON.stringify({ assembly: selectedAssembly }), signal },\n    )\n    if (response) {\n      for (const item of response.items) {\n        if (item.hub.url.startsWith('ftp://')) {\n          item.error = 'JBrowse cannot add connections from FTP sources'\n        } else {\n          const hub = openLocation({\n            uri: item.hub.url,\n            locationType: 'UriLocation',\n          })\n          try {\n            await hub.stat()\n          } catch (error) {\n            item.error = error.message\n          }\n        }\n        newHubs.set(item.id, item)\n      }\n      setHubs(newHubs)\n      if (newHubs.size === response.total_entries) {\n        setAllHubsRetrieved(true)\n      }\n    }\n  }\n\n  function handleSelectSpecies(event) {\n    setSelectedSpecies(event.target.value)\n    setSelectedAssembly('')\n    setHubs(new Map())\n    setSelectedHub('')\n    setAllHubsRetrieved(false)\n  }\n\n  function handleSelectAssembly(event) {\n    setSelectedAssembly(event.target.value)\n    setHubs(new Map())\n    setSelectedHub('')\n    setAllHubsRetrieved(false)\n  }\n\n  function handleSelectHub(event) {\n    const newHub = event.target.value\n    setSelectedHub(newHub)\n    model.target.name.set(hubs.get(newHub).hub.shortLabel)\n    model.target.assemblyNames.set([selectedAssembly])\n    model.target.trackDbId.set(newHub)\n  }\n\n  async function doGet(url, params = {}, options = {}) {\n    let rawResponse\n    const urlParams = Object.keys(params)\n      .map(param => `${param}=${params[param]}`)\n      .join(';')\n    try {\n      rawResponse = await fetch(\n        `${url}${urlParams ? `?${urlParams}` : ''}`,\n        options,\n      )\n    } catch (error) {\n      if (!isAbortException(error)) {\n        setErrorMessage(\n          <span>\n            <strong>Network connection error.</strong> <br />\n            {error.message} <br />\n            {url}\n          </span>,\n        )\n      }\n      return null\n    }\n    if (!rawResponse.ok) {\n      setErrorMessage(\n        <span>\n          <strong>Error connecting to the URL.</strong> <br />\n          {rawResponse.status}: {rawResponse.statusText} <br />\n          {url}\n        </span>,\n      )\n      return null\n    }\n    return rawResponse.json()\n  }\n\n  async function doPost(url, params = {}, options = {}) {\n    let rawResponse\n    const urlParams = Object.keys(params)\n      .map(param => `${param}=${params[param]}`)\n      .join(';')\n    try {\n      rawResponse = await fetch(`${url}${urlParams ? `?${urlParams}` : ''}`, {\n        ...options,\n        method: 'POST',\n      })\n    } catch (error) {\n      if (!isAbortException(error)) {\n        setErrorMessage(\n          <span>\n            <strong>Network connection error.</strong> <br />\n            {error.message} <br />\n            {url}\n          </span>,\n        )\n      }\n      return null\n    }\n    if (!rawResponse.ok) {\n      setErrorMessage(\n        <span>\n          <strong>Error connecting to the URL.</strong> <br />\n          {rawResponse.status}: {rawResponse.statusText} <br />\n          {url}\n        </span>,\n      )\n      return null\n    }\n    return rawResponse.json()\n  }\n\n  const renderItems = [\n    <Typography key=\"heading\" variant=\"h6\">\n      The Track Hub Registry\n    </Typography>,\n  ]\n\n  if (errorMessage) {\n    renderItems.push(\n      <Typography key=\"errorMessage\" color=\"error\">\n        {errorMessage}\n      </Typography>,\n    )\n    return <div>{renderItems}</div>\n  }\n\n  if (!assemblies) {\n    renderItems.push(\n      <QueryStatus key=\"queryStatus\" status=\"Connecting to registry...\" />,\n    )\n    return <div>{renderItems}</div>\n  }\n\n  const speciesList = Object.keys(assemblies)\n    .sort()\n    .filter(item => item.toLowerCase().includes('sapiens'))\n\n  renderItems.push(\n    <SelectBox\n      key=\"speciesSelect\"\n      selectList={speciesList}\n      selectedItem={selectedSpecies}\n      handleSelect={handleSelectSpecies}\n      label=\"Species\"\n      helpText=\"Select a species\"\n    />,\n  )\n\n  if (selectedSpecies) {\n    const ret = assemblies[selectedSpecies].filter(\n      s => !(s.name === 'GRCh37' && s.synonyms[0] === 'hg38'),\n    )\n    renderItems.push(\n      <SelectBox\n        key=\"assemblySelect\"\n        selectList={ret}\n        selectedItem={selectedAssembly}\n        handleSelect={handleSelectAssembly}\n        label=\"Assembly\"\n        helpText=\"Select an assembly\"\n      />,\n    )\n  }\n\n  if (selectedAssembly) {\n    renderItems.push(\n      <div key=\"hubSelect\">\n        <FormControl>\n          <FormLabel>Hubs:</FormLabel>\n          <div className={classes.hubList}>\n            <RadioGroup value={selectedHub} onChange={handleSelectHub}>\n              {Array.from(hubs.values())\n                .filter(\n                  hub =>\n                    hub.assembly.name === selectedAssembly ||\n                    hub.assembly.synonyms.includes(selectedAssembly),\n                )\n                .map(hub => {\n                  const {\n                    error,\n                    id,\n                    hub: { shortLabel, longLabel },\n                  } = hub\n                  return (\n                    <Wire key={id} value={id}>\n                      {formControlProps => (\n                        <Tooltip\n                          title={error || <SanitizedHTML html={longLabel} />}\n                          placement=\"left\"\n                          interactive\n                        >\n                          <FormControlLabel\n                            key={id}\n                            value={id}\n                            label={<SanitizedHTML html={shortLabel} />}\n                            disabled={Boolean(error)}\n                            control={<Radio />}\n                            {...formControlProps}\n                          />\n                        </Tooltip>\n                      )}\n                    </Wire>\n                  )\n                })}\n            </RadioGroup>\n          </div>\n        </FormControl>\n      </div>,\n    )\n    if (!allHubsRetrieved) {\n      renderItems.push(<QueryStatus key=\"hubStatus\" status=\"Retrieving hubs\" />)\n    }\n  }\n\n  if (selectedHub) {\n    renderItems.push(\n      <HubDetails key=\"hubDetails\" hub={hubs.get(selectedHub).hub} />,\n    )\n  }\n\n  return <>{renderItems}</>\n}\n\nexport default TrackHubRegistrySelect\n"],"sourceRoot":""}