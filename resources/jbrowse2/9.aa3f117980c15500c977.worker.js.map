{"version":3,"sources":["../../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../../src/util.ts","../../../node_modules/@gmod/tabix/esm/index.js","../../../node_modules/@gmod/tabix/esm/tabixIndexedFile.js","../../../node_modules/stream-browserify/index.js","../../../node_modules/readable-stream/writable-browser.js","../../../node_modules/readable-stream/duplex-browser.js","../../../node_modules/readable-stream/transform.js","../../../node_modules/readable-stream/passthrough.js","../../src/index.ts","../../src/api.ts","../../src/parse.ts","../../../plugins/gff3/src/Gff3TabixAdapter/Gff3TabixAdapter.ts","../../../node_modules/abortable-promise-cache/esm/abortcontroller-ponyfill.js","../../../node_modules/abortable-promise-cache/esm/index.js","../../../node_modules/long/src/long.js","../../../node_modules/abortable-promise-cache/esm/AbortablePromiseCache.js","../../../node_modules/abortable-promise-cache/esm/AggregateAbortController.js","../../../node_modules/abortable-promise-cache/esm/AggregateStatusReporter.js","../../../node_modules/quick-lru/index.js","../../../node_modules/@gmod/tabix/esm/util.js","../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../../../node_modules/@gmod/tabix/esm/tbi.js","../../../node_modules/@gmod/tabix/esm/virtualOffset.js","../../../node_modules/@gmod/tabix/esm/chunk.js","../../../node_modules/@gmod/tabix/esm/indexFile.js","../../../node_modules/@gmod/tabix/esm/csi.js"],"names":["objectWithoutPropertiesLoose","module","exports","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","__esModule","unescape","stringVal","replace","_match","seq","String","fromCharCode","parseInt","_escape","regex","s","ch","hex","charCodeAt","toString","toUpperCase","padStart","escape","rawVal","escapeColumn","parseAttributes","attrString","attrs","split","forEach","a","nv","trim","arec","push","map","parseFeature","line","f","seq_id","type","start","end","score","parseFloat","strand","phase","attributes","parseDirective","match","exec","name","contents","parsed","directive","value","c","buildName","formatAttributes","attrOrder","entries","valstring","tag","val","hasOwnProperty","Array","isArray","join","_formatSingleFeature","seenFeature","undefined","fields","formattedString","_formatFeature","feature","featureLine","strings","child_features","derived_features","formatFeature","featureOrFeatures","formatDirective","str","formatComment","comment","formatSequence","id","description","sequence","formatItem","itemOrItems","formatSingleItem","item","__importDefault","this","mod","defineProperty","CSI","TBI","TabixIndexedFile","tabixIndexedFile_1","require","default","tbi_1","csi_1","abortable_promise_cache_1","quick_lru_1","generic_filehandle_1","bgzf_filehandle_1","util_1","timeout","time","Promise","resolve","setTimeout","path","filehandle","tbiPath","tbiFilehandle","csiPath","csiFilehandle","chunkSizeLimit","renameRefSeqs","n","chunkCacheSize","TypeError","LocalFile","index","renameRefSeq","chunkCache","cache","maxSize","Math","floor","fill","readChunk","bind","refName","opts","options","callback","lineCallback","getMetadata","metadata","checkAbortSignal","signal","maxRefLength","blocksForRange","chunks","size","fetchedSize","Error","toLocaleString","last","Date","now","chunkNum","previousStartCoordinate","get","buffer","cpositions","dpositions","lines","TextDecoder","decode","pop","blockStart","minv","dataPosition","pos","checkLine","startCoordinate","overlaps","firstDataLine","metaChar","maxBlockSize","maxFetch","blockPosition","_readRegion","bytes","unzip","console","error","code","lastNewline","newlineByte","metaByte","slice","getHeaderBuffer","refIdToName","regionRefName","regionStart","regionEnd","columnNumbers","coordinateType","format","charAt","ref","maxColumn","max","currentColumnNumber","currentColumnStart","refSeq","Infinity","_getVcfEnd","info","endCoordinate","isTRA","prevChar","j","valueEnd","lineCount","position","compressedSize","read","Buffer","alloc","bytesRead","chunk","compressedData","unzipChunkSlice","Stream","EE","EventEmitter","inherits","Readable","Writable","Duplex","Transform","PassThrough","pipe","dest","ondata","writable","write","pause","ondrain","readable","resume","on","_isStdio","onend","onclose","didOnEnd","destroy","onerror","er","cleanup","listenerCount","removeListener","emit","parseStream","parseStringSync","formatSync","formatStream","formatFile","util","_callback","process","nextTick","_processParseOptions","out","encoding","parseFeatures","parseDirectives","parseSequences","parseComments","bufferSize","parseAll","GFFTransform","inputOptions","objectMode","decoder","Decoder","parser","Parser","featureCallback","directiveCallback","commentCallback","sequenceCallback","errorCallback","err","data","addLine","pieces","textBuffer","piece","_addLine","_encoding","_nextText","finish","items","other","sequences","FormattingTransform","assign","minLinesBetweenSyncMarks","minSyncLines","insertVersionDirective","haveWeEmittedData","thisChunk","fastaMode","linesSinceLastSyncMark","count","stream","writeStream","newOptions","reject","containerAttributes","FASTAParser","seqCallback","currentSequence","defMatch","_flush","test","args","nullFunc","endCallback","fastaParser","eof","lineNumber","_bufferLine","hashsigns","_emitAllUnderConstructionFeatures","GFF3","_emitItem","errLine","additionalItemCount","_unbufferItem","ID","_underConstructionById","_completedReferences","d","_underConstructionTopLevel","shift","from","values","_underConstructionOrphans","JSON","stringify","rawFeatureLine","ids","_a","parents","_b","Parent","derives","_c","Derives_from","existing","_parseError","_enforceBufferSizeLimit","_resolveReferencesTo","_resolveReferencesFrom","references","loc","message","postSet","obj","slot1","slot2","subObj","returnVal","toId","otherFeature","pname","filter","location","config","getSubAdapter","pluginManager","gff","dontRedispatch","gffGzLocation","readConfObject","indexType","openLocation","getReferenceSequenceNames","getHeader","query","ObservableCreate","observer","getFeaturesHelper","allowRedispatch","originalQuery","getLines","fileOffset","parseLine","minStart","maxEnd","featureType","includes","gff3","lineRecord","lineHash","featureLocs","formatFeatures","doesIntersect2","next","complete","featureLoc","SimpleFeature","featureData","_lineHash","Number","defaultFields","dataAttributes","keys","b","toLowerCase","attr","subfeatures","childLocs","childLoc","flat","_linehash","BaseFeatureDataAdapter","AbortSignal","AbortController","cjs_ponyfill_1","getGlobal","self","window","global","AbortablePromiseCache_1","Long","wasm","WebAssembly","Instance","Module","Uint8Array","e","low","high","unsigned","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","pow","fromString","radix","RangeError","p","substring","radixToPower","result","min","power","mul","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","ceil","log","LN2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","hi","lo","fromBytes","fromBytesLE","fromBytesBE","abortcontroller_ponyfill_1","AggregateAbortController_1","AggregateStatusReporter_1","AbortablePromiseCache","set","delete","fillCallback","entry","statusCallback","aborter","statusReporter","addCallback","newEntry","promise","settled","aborted","addSignal","addEventListener","evict","then","catch","has","cacheEntry","checkSinglePromise","cachedEntry","abort","keyIter","deleteCount","done","exception","checkForSingleAbort","NullSignal","AggregateAbortController","signals","Set","abortController","handleAborted","AggregateStatusReporter","callbacks","currentMessage","elt","QuickLRU","Map","oldCache","_size","_set","deleted","clear","oldCacheSize","Symbol","iterator","optimizeChunks","canMergeBlocks","abortBreakPoint","longToNumber","long","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","AbortError","DOMException","chunk1","chunk2","maxv","lowest","mergedChunks","lastChunk","sort","c0","c1","dif","compareTo","sourceKeys","__createBinding","create","o","m","k","k2","enumerable","__setModuleDefault","v","__importStar","long_1","virtualOffset_1","chunk_1","indexFile_1","TBI_MAGIC","reg2bins","beg","TabixIndex","parse","indexData","refId","refNameToId","indices","stats","readFile","readUInt32LE","refCount","readInt32LE","formatFlags","metaValue","maxBinNumber","depth","skipLines","nameSectionLength","_parseNameBytes","currOffset","binCount","binIndex","bin","chunkCount","parsePseudoBin","u","_findFirstData","linearCount","linearIndex","offset","namesBytes","currRefId","currNameStart","ba","warn","overlappingBins","binChunks","nintv","minLin","maxLin","vp","VirtualOffset","bigendian","Chunk","_fetchedSize","toUniqueString","IndexFile","rest","currentFdl","virtualOffset","_parseCache","_parse","seqId","CSI1_MAGIC","CSI2_MAGIC","rshift","num","bits","minShift","auxLength","csiVersion","aux","parseAuxData","loffset","csi","l","t","bins"],"mappings":"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","file":"9.aa3f117980c15500c977.worker.js","sourcesContent":["var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",null,"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CSI = exports.TBI = exports.TabixIndexedFile = void 0;\nconst tabixIndexedFile_1 = __importDefault(require(\"./tabixIndexedFile\"));\nexports.TabixIndexedFile = tabixIndexedFile_1.default;\nconst tbi_1 = __importDefault(require(\"./tbi\"));\nexports.TBI = tbi_1.default;\nconst csi_1 = __importDefault(require(\"./csi\"));\nexports.CSI = csi_1.default;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortable_promise_cache_1 = __importDefault(require(\"abortable-promise-cache\"));\nconst quick_lru_1 = __importDefault(require(\"quick-lru\"));\nconst generic_filehandle_1 = require(\"generic-filehandle\");\nconst bgzf_filehandle_1 = require(\"@gmod/bgzf-filehandle\");\nconst util_1 = require(\"./util\");\nconst tbi_1 = __importDefault(require(\"./tbi\"));\nconst csi_1 = __importDefault(require(\"./csi\"));\nfunction timeout(time) {\n    return new Promise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\nclass TabixIndexedFile {\n    /**\n     * @param {object} args\n     * @param {string} [args.path]\n     * @param {filehandle} [args.filehandle]\n     * @param {string} [args.tbiPath]\n     * @param {filehandle} [args.tbiFilehandle]\n     * @param {string} [args.csiPath]\n     * @param {filehandle} [args.csiFilehandle]\n     * @param {chunkSizeLimit} default 50MiB\n     * @param {function} [args.renameRefSeqs] optional function with sig `string => string` to transform\n     * reference sequence names for the purpose of indexing and querying. note that the data that is returned is\n     * not altered, just the names of the reference sequences that are used for querying.\n     * @param {number} [args.chunkCacheSize] maximum size in bytes of the chunk cache. default 5MB\n     * @param {number} [args.blockCacheSize] maximum size in bytes of the block cache. default 5MB\n     */\n    constructor({ path, filehandle, tbiPath, tbiFilehandle, csiPath, csiFilehandle, chunkSizeLimit = 50000000, renameRefSeqs = n => n, chunkCacheSize = 5 * 2 ** 20, }) {\n        if (filehandle) {\n            this.filehandle = filehandle;\n        }\n        else if (path) {\n            this.filehandle = new generic_filehandle_1.LocalFile(path);\n        }\n        else {\n            throw new TypeError('must provide either filehandle or path');\n        }\n        if (tbiFilehandle) {\n            this.index = new tbi_1.default({\n                filehandle: tbiFilehandle,\n                renameRefSeqs,\n            });\n        }\n        else if (csiFilehandle) {\n            this.index = new csi_1.default({\n                filehandle: csiFilehandle,\n                renameRefSeqs,\n            });\n        }\n        else if (tbiPath) {\n            this.index = new tbi_1.default({\n                filehandle: new generic_filehandle_1.LocalFile(tbiPath),\n                renameRefSeqs,\n            });\n        }\n        else if (csiPath) {\n            this.index = new csi_1.default({\n                filehandle: new generic_filehandle_1.LocalFile(csiPath),\n                renameRefSeqs,\n            });\n        }\n        else if (path) {\n            this.index = new tbi_1.default({\n                filehandle: new generic_filehandle_1.LocalFile(`${path}.tbi`),\n                renameRefSeqs,\n            });\n        }\n        else {\n            throw new TypeError('must provide one of tbiFilehandle, tbiPath, csiFilehandle, or csiPath');\n        }\n        this.chunkSizeLimit = chunkSizeLimit;\n        this.renameRefSeq = renameRefSeqs;\n        this.chunkCache = new abortable_promise_cache_1.default({\n            cache: new quick_lru_1.default({\n                maxSize: Math.floor(chunkCacheSize / (1 << 16)),\n            }),\n            fill: this.readChunk.bind(this),\n        });\n    }\n    /**\n     * @param {string} refName name of the reference sequence\n     * @param {number} start start of the region (in 0-based half-open coordinates)\n     * @param {number} end end of the region (in 0-based half-open coordinates)\n     * @param {function|object} lineCallback callback called for each line in the region. can also pass a object param containing obj.lineCallback, obj.signal, etc\n     * @returns {Promise} resolved when the whole read is finished, rejected on error\n     */\n    async getLines(refName, start, end, opts) {\n        let signal;\n        let options = {};\n        let callback;\n        if (typeof opts === 'undefined') {\n            throw new TypeError('line callback must be provided');\n        }\n        if (typeof opts === 'function') {\n            callback = opts;\n        }\n        else {\n            options = opts;\n            callback = opts.lineCallback;\n        }\n        if (refName === undefined) {\n            throw new TypeError('must provide a reference sequence name');\n        }\n        if (!callback) {\n            throw new TypeError('line callback must be provided');\n        }\n        const metadata = await this.index.getMetadata(options);\n        (0, util_1.checkAbortSignal)(signal);\n        if (!start) {\n            start = 0;\n        }\n        if (!end) {\n            end = metadata.maxRefLength;\n        }\n        if (!(start <= end)) {\n            throw new TypeError('invalid start and end coordinates. start must be less than or equal to end');\n        }\n        if (start === end) {\n            return;\n        }\n        const chunks = await this.index.blocksForRange(refName, start, end, options);\n        (0, util_1.checkAbortSignal)(signal);\n        // check the chunks for any that are over the size limit.  if\n        // any are, don't fetch any of them\n        for (let i = 0; i < chunks.length; i += 1) {\n            const size = chunks[i].fetchedSize();\n            if (size > this.chunkSizeLimit) {\n                throw new Error(`Too much data. Chunk size ${size.toLocaleString()} bytes exceeds chunkSizeLimit of ${this.chunkSizeLimit.toLocaleString()}.`);\n            }\n        }\n        // now go through each chunk and parse and filter the lines out of it\n        let last = Date.now();\n        for (let chunkNum = 0; chunkNum < chunks.length; chunkNum += 1) {\n            let previousStartCoordinate;\n            const c = chunks[chunkNum];\n            const { buffer, cpositions, dpositions } = await this.chunkCache.get(c.toString(), c, signal);\n            const lines = (typeof TextDecoder !== 'undefined'\n                ? new TextDecoder('utf-8').decode(buffer)\n                : buffer.toString()).split('\\n');\n            lines.pop();\n            (0, util_1.checkAbortSignal)(signal);\n            let blockStart = c.minv.dataPosition;\n            let pos;\n            for (let i = 0; i < lines.length; i += 1) {\n                const line = lines[i];\n                for (pos = 0; blockStart >= dpositions[pos]; pos += 1) { }\n                // filter the line for whether it is within the requested range\n                const { startCoordinate, overlaps } = this.checkLine(metadata, refName, start, end, line);\n                // do a small check just to make sure that the lines are really sorted by start coordinate\n                if (previousStartCoordinate !== undefined &&\n                    startCoordinate !== undefined &&\n                    previousStartCoordinate > startCoordinate) {\n                    throw new Error(`Lines not sorted by start coordinate (${previousStartCoordinate} > ${startCoordinate}), this file is not usable with Tabix.`);\n                }\n                previousStartCoordinate = startCoordinate;\n                if (overlaps) {\n                    callback(line.trim(), \n                    // cpositions[pos] refers to actual file offset of a bgzip block boundaries\n                    //\n                    // we multiply by (1 <<8) in order to make sure each block has a \"unique\"\n                    // address space so that data in that block could never overlap\n                    //\n                    // then the blockStart-dpositions is an uncompressed file offset from\n                    // that bgzip block boundary, and since the cpositions are multiplied by\n                    // (1 << 8) these uncompressed offsets get a unique space\n                    cpositions[pos] * (1 << 8) + (blockStart - dpositions[pos]));\n                }\n                else if (startCoordinate !== undefined && startCoordinate >= end) {\n                    // the lines were overlapping the region, but now have stopped, so\n                    // we must be at the end of the relevant data and we can stop\n                    // processing data now\n                    return;\n                }\n                blockStart += line.length + 1;\n                // yield if we have emitted beyond the yield limit\n                if (last - Date.now() > 500) {\n                    last = Date.now();\n                    (0, util_1.checkAbortSignal)(signal);\n                    await timeout(1);\n                }\n            }\n        }\n    }\n    async getMetadata(opts = {}) {\n        return this.index.getMetadata(opts);\n    }\n    /**\n     * get a buffer containing the \"header\" region of\n     * the file, which are the bytes up to the first\n     * non-meta line\n     *\n     * @returns {Promise} for a buffer\n     */\n    async getHeaderBuffer(opts = {}) {\n        const { firstDataLine, metaChar, maxBlockSize } = await this.getMetadata(opts);\n        (0, util_1.checkAbortSignal)(opts.signal);\n        const maxFetch = firstDataLine && firstDataLine.blockPosition\n            ? firstDataLine.blockPosition + maxBlockSize\n            : maxBlockSize;\n        // TODO: what if we don't have a firstDataLine, and the header\n        // actually takes up more than one block? this case is not covered here\n        let bytes = await this._readRegion(0, maxFetch, opts);\n        (0, util_1.checkAbortSignal)(opts.signal);\n        try {\n            bytes = await (0, bgzf_filehandle_1.unzip)(bytes);\n        }\n        catch (e) {\n            console.error(e);\n            throw new Error(\n            //@ts-ignore\n            `error decompressing block ${e.code} at 0 (length ${maxFetch}) ${e}`);\n        }\n        // trim off lines after the last non-meta line\n        if (metaChar) {\n            // trim backward from the end\n            let lastNewline = -1;\n            const newlineByte = '\\n'.charCodeAt(0);\n            const metaByte = metaChar.charCodeAt(0);\n            for (let i = 0; i < bytes.length; i += 1) {\n                if (i === lastNewline + 1 && bytes[i] !== metaByte) {\n                    break;\n                }\n                if (bytes[i] === newlineByte) {\n                    lastNewline = i;\n                }\n            }\n            bytes = bytes.slice(0, lastNewline + 1);\n        }\n        return bytes;\n    }\n    /**\n     * get a string containing the \"header\" region of the\n     * file, is the portion up to the first non-meta line\n     *\n     * @returns {Promise} for a string\n     */\n    async getHeader(opts = {}) {\n        const bytes = await this.getHeaderBuffer(opts);\n        (0, util_1.checkAbortSignal)(opts.signal);\n        return bytes.toString('utf8');\n    }\n    /**\n     * get an array of reference sequence names, in the order in which\n     * they occur in the file.\n     *\n     * reference sequence renaming is not applied to these names.\n     *\n     * @returns {Promise} for an array of string sequence names\n     */\n    async getReferenceSequenceNames(opts = {}) {\n        const metadata = await this.getMetadata(opts);\n        return metadata.refIdToName;\n    }\n    /**\n     * @param {object} metadata metadata object from the parsed index,\n     * containing columnNumbers, metaChar, and format\n     * @param {string} regionRefName\n     * @param {number} regionStart region start coordinate (0-based-half-open)\n     * @param {number} regionEnd region end coordinate (0-based-half-open)\n     * @param {array[string]} line\n     * @returns {object} like `{startCoordinate, overlaps}`. overlaps is boolean,\n     * true if line is a data line that overlaps the given region\n     */\n    checkLine({ columnNumbers, metaChar, coordinateType, format, }, regionRefName, regionStart, regionEnd, line) {\n        // skip meta lines\n        if (line.charAt(0) === metaChar) {\n            return { overlaps: false };\n        }\n        // check ref/start/end using column metadata from index\n        let { ref, start, end } = columnNumbers;\n        if (!ref) {\n            ref = 0;\n        }\n        if (!start) {\n            start = 0;\n        }\n        if (!end) {\n            end = 0;\n        }\n        if (format === 'VCF') {\n            end = 8;\n        }\n        const maxColumn = Math.max(ref, start, end);\n        // this code is kind of complex, but it is fairly fast.\n        // basically, we want to avoid doing a split, because if the lines are really long\n        // that could lead to us allocating a bunch of extra memory, which is slow\n        let currentColumnNumber = 1; // cols are numbered starting at 1 in the index metadata\n        let currentColumnStart = 0;\n        let refSeq = '';\n        let startCoordinate = -Infinity;\n        for (let i = 0; i < line.length + 1; i += 1) {\n            if (line[i] === '\\t' || i === line.length) {\n                if (currentColumnNumber === ref) {\n                    if (this.renameRefSeq(line.slice(currentColumnStart, i)) !==\n                        regionRefName) {\n                        return { overlaps: false };\n                    }\n                }\n                else if (currentColumnNumber === start) {\n                    startCoordinate = parseInt(line.slice(currentColumnStart, i), 10);\n                    // we convert to 0-based-half-open\n                    if (coordinateType === '1-based-closed') {\n                        startCoordinate -= 1;\n                    }\n                    if (startCoordinate >= regionEnd) {\n                        return { startCoordinate, overlaps: false };\n                    }\n                    if (end === 0 || end === start) {\n                        // if we have no end, we assume the feature is 1 bp long\n                        if (startCoordinate + 1 <= regionStart) {\n                            return { startCoordinate, overlaps: false };\n                        }\n                    }\n                }\n                else if (format === 'VCF' && currentColumnNumber === 4) {\n                    refSeq = line.slice(currentColumnStart, i);\n                }\n                else if (currentColumnNumber === end) {\n                    let endCoordinate;\n                    // this will never match if there is no end column\n                    if (format === 'VCF') {\n                        endCoordinate = this._getVcfEnd(startCoordinate, refSeq, line.slice(currentColumnStart, i));\n                    }\n                    else {\n                        endCoordinate = parseInt(line.slice(currentColumnStart, i), 10);\n                    }\n                    if (endCoordinate <= regionStart) {\n                        return { overlaps: false };\n                    }\n                }\n                currentColumnStart = i + 1;\n                currentColumnNumber += 1;\n                if (currentColumnNumber > maxColumn) {\n                    break;\n                }\n            }\n        }\n        return { startCoordinate, overlaps: true };\n    }\n    _getVcfEnd(startCoordinate, refSeq, info) {\n        let endCoordinate = startCoordinate + refSeq.length;\n        // ignore TRA features as they specify CHR2 and END\n        // as being on a different chromosome\n        // if CHR2 is on the same chromosome, still ignore it\n        // because there should be another pairwise feature\n        // at the end of this one\n        const isTRA = info.indexOf('SVTYPE=TRA') !== -1;\n        if (info[0] !== '.' && !isTRA) {\n            let prevChar = ';';\n            for (let j = 0; j < info.length; j += 1) {\n                if (prevChar === ';' && info.slice(j, j + 4) === 'END=') {\n                    let valueEnd = info.indexOf(';', j);\n                    if (valueEnd === -1) {\n                        valueEnd = info.length;\n                    }\n                    endCoordinate = parseInt(info.slice(j + 4, valueEnd), 10);\n                    break;\n                }\n                prevChar = info[j];\n            }\n        }\n        else if (isTRA) {\n            return startCoordinate + 1;\n        }\n        return endCoordinate;\n    }\n    /**\n     * return the approximate number of data lines in the given reference sequence\n     * @param {string} refSeq reference sequence name\n     * @returns {Promise} for number of data lines present on that reference sequence\n     */\n    async lineCount(refName, opts = {}) {\n        return this.index.lineCount(refName, opts);\n    }\n    async _readRegion(position, compressedSize, opts = {}) {\n        const { bytesRead, buffer } = await this.filehandle.read(Buffer.alloc(compressedSize), 0, compressedSize, position, opts);\n        return bytesRead < compressedSize ? buffer.slice(0, bytesRead) : buffer;\n    }\n    /**\n     * read and uncompress the data in a chunk (composed of one or more\n     * contiguous bgzip blocks) of the file\n     * @param {Chunk} chunk\n     * @returns {Promise} for a string chunk of the file\n     */\n    async readChunk(chunk, opts = {}) {\n        // fetch the uncompressed data, uncompress carefully a block at a time,\n        // and stop when done\n        const compressedData = await this._readRegion(chunk.minv.blockPosition, chunk.fetchedSize(), opts);\n        try {\n            return (0, bgzf_filehandle_1.unzipChunkSlice)(compressedData, chunk);\n        }\n        catch (e) {\n            throw new Error(`error decompressing chunk ${chunk.toString()} ${e}`);\n        }\n    }\n}\nexports.default = TabixIndexedFile;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n",null,null,null,"/* eslint-disable no-underscore-dangle */\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { doesIntersect2 } from '@jbrowse/core/util/range'\nimport { Region } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { TabixIndexedFile } from '@gmod/tabix'\nimport gff, { GFF3Feature, GFF3FeatureLineWithRefs } from '@gmod/gff'\nimport { Observer } from 'rxjs'\nimport {\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\ninterface LineFeature {\n  start: number\n  end: number\n  lineHash: number\n  fields: string[]\n}\n\nexport default class extends BaseFeatureDataAdapter {\n  protected gff: TabixIndexedFile\n\n  protected dontRedispatch: string[]\n\n  public constructor(\n    config: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    const gffGzLocation = readConfObject(config, 'gffGzLocation')\n    const indexType = readConfObject(config, ['index', 'indexType'])\n    const location = readConfObject(config, ['index', 'location'])\n    const dontRedispatch = readConfObject(config, 'dontRedispatch')\n\n    this.dontRedispatch = dontRedispatch || ['chromosome', 'contig', 'region']\n    this.gff = new TabixIndexedFile({\n      filehandle: openLocation(gffGzLocation, this.pluginManager),\n      csiFilehandle:\n        indexType === 'CSI'\n          ? openLocation(location, this.pluginManager)\n          : undefined,\n      tbiFilehandle:\n        indexType !== 'CSI'\n          ? openLocation(location, this.pluginManager)\n          : undefined,\n      chunkCacheSize: 50 * 2 ** 20,\n      renameRefSeqs: (n: string) => n,\n    })\n  }\n\n  public async getRefNames(opts: BaseOptions = {}) {\n    return this.gff.getReferenceSequenceNames(opts)\n  }\n\n  public async getHeader() {\n    return this.gff.getHeader()\n  }\n\n  public getFeatures(query: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const metadata = await this.gff.getMetadata()\n      this.getFeaturesHelper(query, opts, metadata, observer, true)\n    }, opts.signal)\n  }\n\n  private async getFeaturesHelper(\n    query: Region,\n    opts: BaseOptions = {},\n    metadata: { columnNumbers: { start: number; end: number } },\n    observer: Observer<Feature>,\n    allowRedispatch: boolean,\n    originalQuery = query,\n  ) {\n    try {\n      const lines: LineFeature[] = []\n\n      await this.gff.getLines(\n        query.refName,\n        query.start,\n        query.end,\n        (line: string, fileOffset: number) => {\n          lines.push(this.parseLine(metadata.columnNumbers, line, fileOffset))\n        },\n      )\n      if (allowRedispatch && lines.length) {\n        let minStart = Infinity\n        let maxEnd = -Infinity\n        lines.forEach(line => {\n          const featureType = line.fields[2]\n          // only expand redispatch range if feature is not a \"dontRedispatch\" type\n          // skips large regions like chromosome,region\n          if (!this.dontRedispatch.includes(featureType)) {\n            const start = line.start - 1 // gff is 1-based\n            if (start < minStart) {\n              minStart = start\n            }\n            if (line.end > maxEnd) {\n              maxEnd = line.end\n            }\n          }\n        })\n        if (maxEnd > query.end || minStart < query.start) {\n          // make a new feature callback to only return top-level features\n          // in the original query range\n          this.getFeaturesHelper(\n            { ...query, start: minStart, end: maxEnd },\n            opts,\n            metadata,\n            observer,\n            false,\n            query,\n          )\n          return\n        }\n      }\n\n      const gff3 = lines\n        .map((lineRecord: LineFeature) => {\n          if (lineRecord.fields[8] && lineRecord.fields[8] !== '.') {\n            if (!lineRecord.fields[8].includes('_lineHash')) {\n              lineRecord.fields[8] += `;_lineHash=${lineRecord.lineHash}`\n            }\n          } else {\n            lineRecord.fields[8] = `_lineHash=${lineRecord.lineHash}`\n          }\n          return lineRecord.fields.join('\\t')\n        })\n        .join('\\n')\n\n      const features = gff.parseStringSync(gff3, {\n        parseFeatures: true,\n        parseComments: false,\n        parseDirectives: false,\n        parseSequences: false,\n      })\n\n      features.forEach(featureLocs =>\n        this.formatFeatures(featureLocs).forEach(f => {\n          if (\n            doesIntersect2(\n              f.get('start'),\n              f.get('end'),\n              originalQuery.start,\n              originalQuery.end,\n            )\n          ) {\n            observer.next(f)\n          }\n        }),\n      )\n      observer.complete()\n    } catch (e) {\n      observer.error(e)\n    }\n  }\n\n  private parseLine(\n    columnNumbers: { start: number; end: number },\n    line: string,\n    fileOffset: number,\n  ) {\n    const fields = line.split('\\t')\n\n    // note: index column numbers are 1-based\n    return {\n      start: +fields[columnNumbers.start - 1],\n      end: +fields[columnNumbers.end - 1],\n      lineHash: fileOffset,\n      fields,\n    }\n  }\n\n  private formatFeatures(featureLocs: GFF3Feature) {\n    return featureLocs.map(\n      featureLoc =>\n        new SimpleFeature({\n          data: this.featureData(featureLoc),\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          id: `${this.id}-offset-${featureLoc.attributes!._lineHash![0]}`,\n        }),\n    )\n  }\n\n  private featureData(data: GFF3FeatureLineWithRefs) {\n    const f: Record<string, unknown> = { ...data }\n    ;(f.start as number) -= 1 // convert to interbase\n    if (data.strand === '+') {\n      f.strand = 1\n    } else if (data.strand === '-') {\n      f.strand = -1\n    } else if (data.strand === '.') {\n      f.strand = 0\n    } else {\n      f.strand = undefined\n    }\n    f.phase = Number(data.phase)\n    f.refName = data.seq_id\n    if (data.score === null) {\n      delete f.score\n    }\n    if (data.phase === null) {\n      delete f.score\n    }\n    const defaultFields = [\n      'start',\n      'end',\n      'seq_id',\n      'score',\n      'type',\n      'source',\n      'phase',\n      'strand',\n    ]\n    const dataAttributes = data.attributes || {}\n    Object.keys(dataAttributes).forEach(a => {\n      let b = a.toLowerCase()\n      if (defaultFields.includes(b)) {\n        // add \"suffix\" to tag name if it already exists\n        // reproduces behavior of NCList\n        b += '2'\n      }\n      if (dataAttributes[a] !== null) {\n        let attr: string | string[] | undefined = dataAttributes[a]\n        if (Array.isArray(attr) && attr.length === 1) {\n          ;[attr] = attr\n        }\n        f[b] = attr\n      }\n    })\n    f.refName = f.seq_id\n\n    // the SimpleFeature constructor takes care of recursively inflating subfeatures\n    if (data.child_features && data.child_features.length) {\n      f.subfeatures = data.child_features\n        .map(childLocs => childLocs.map(childLoc => this.featureData(childLoc)))\n        .flat()\n    }\n\n    delete f.child_features\n    delete f.data\n    delete f.derived_features\n    delete f._linehash\n    delete f.attributes\n    delete f.seq_id\n    return f\n  }\n\n  public freeResources(/* { region } */) {}\n}\n","\"use strict\";\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortSignal = exports.AbortController = void 0;\nconst cjs_ponyfill_1 = require(\"abortcontroller-polyfill/dist/cjs-ponyfill\");\nvar getGlobal = function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n};\n//@ts-ignore\nlet AbortController = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortController : getGlobal().AbortController;\nexports.AbortController = AbortController;\n//@ts-ignore\nlet AbortSignal = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortSignal : getGlobal().AbortSignal;\nexports.AbortSignal = AbortSignal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbortablePromiseCache_1 = __importDefault(require(\"./AbortablePromiseCache\"));\nexports.default = AbortablePromiseCache_1.default;\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nconst AggregateAbortController_1 = __importDefault(require(\"./AggregateAbortController\"));\nconst AggregateStatusReporter_1 = __importDefault(require(\"./AggregateStatusReporter\"));\nclass AbortablePromiseCache {\n    constructor({ fill, cache, }) {\n        if (typeof fill !== 'function') {\n            throw new TypeError('must pass a fill function');\n        }\n        if (typeof cache !== 'object') {\n            throw new TypeError('must pass a cache object');\n        }\n        if (typeof cache.get !== 'function' ||\n            typeof cache.set !== 'function' ||\n            typeof cache.delete !== 'function') {\n            throw new TypeError('cache must implement get(key), set(key, val), and and delete(key)');\n        }\n        this.cache = cache;\n        this.fillCallback = fill;\n    }\n    static isAbortException(exception) {\n        return (\n        // DOMException\n        exception.name === 'AbortError' ||\n            // standard-ish non-DOM abort exception\n            //@ts-ignore\n            exception.code === 'ERR_ABORTED' ||\n            // stringified DOMException\n            exception.message === 'AbortError: aborted' ||\n            // stringified standard-ish exception\n            exception.message === 'Error: aborted');\n    }\n    evict(key, entry) {\n        if (this.cache.get(key) === entry) {\n            this.cache.delete(key);\n        }\n    }\n    fill(key, data, signal, statusCallback) {\n        const aborter = new AggregateAbortController_1.default();\n        const statusReporter = new AggregateStatusReporter_1.default();\n        statusReporter.addCallback(statusCallback);\n        const newEntry = {\n            aborter: aborter,\n            promise: this.fillCallback(data, aborter.signal, (message) => {\n                statusReporter.callback(message);\n            }),\n            settled: false,\n            statusReporter,\n            get aborted() {\n                return this.aborter.signal.aborted;\n            },\n        };\n        newEntry.aborter.addSignal(signal);\n        // remove the fill from the cache when its abortcontroller fires, if still in there\n        newEntry.aborter.signal.addEventListener('abort', () => {\n            if (!newEntry.settled) {\n                this.evict(key, newEntry);\n            }\n        });\n        // chain off the cached promise to record when it settles\n        newEntry.promise\n            .then(() => {\n            newEntry.settled = true;\n        }, () => {\n            newEntry.settled = true;\n            // if the fill throws an error (including abort) and is still in the cache, remove it\n            this.evict(key, newEntry);\n        })\n            .catch(e => {\n            // this will only be reached if there is some kind of\n            // bad bug in this library\n            console.error(e);\n            throw e;\n        });\n        this.cache.set(key, newEntry);\n    }\n    static checkSinglePromise(promise, signal) {\n        // check just this signal for having been aborted, and abort the\n        // promise if it was, regardless of what happened with the cached\n        // response\n        function checkForSingleAbort() {\n            if (signal && signal.aborted) {\n                throw Object.assign(new Error('aborted'), { code: 'ERR_ABORTED' });\n            }\n        }\n        return promise.then(result => {\n            checkForSingleAbort();\n            return result;\n        }, error => {\n            checkForSingleAbort();\n            throw error;\n        });\n    }\n    has(key) {\n        return this.cache.has(key);\n    }\n    /**\n     * Callback for getting status of the pending async\n     *\n     * @callback statusCallback\n     * @param {any} status, current status string or message object\n     */\n    /**\n     * @param {any} key cache key to use for this request\n     * @param {any} data data passed as the first argument to the fill callback\n     * @param {AbortSignal} [signal] optional AbortSignal object that aborts the request\n     * @param {statusCallback} a callback to get the current status of a pending async operation\n     */\n    get(key, data, signal, statusCallback) {\n        if (!signal && data instanceof abortcontroller_ponyfill_1.AbortSignal) {\n            throw new TypeError('second get argument appears to be an AbortSignal, perhaps you meant to pass `null` for the fill data?');\n        }\n        const cacheEntry = this.cache.get(key);\n        if (cacheEntry) {\n            if (cacheEntry.aborted && !cacheEntry.settled) {\n                // if it's aborted but has not realized it yet, evict it and redispatch\n                this.evict(key, cacheEntry);\n                return this.get(key, data, signal, statusCallback);\n            }\n            if (cacheEntry.settled) {\n                // too late to abort, just return it\n                return cacheEntry.promise;\n            }\n            // request is in-flight, add this signal to its list of signals,\n            // or if there is no signal, the aborter will become non-abortable\n            cacheEntry.aborter.addSignal(signal);\n            cacheEntry.statusReporter.addCallback(statusCallback);\n            return AbortablePromiseCache.checkSinglePromise(cacheEntry.promise, signal);\n        }\n        // if we got here, it is not in the cache. fill.\n        this.fill(key, data, signal, statusCallback);\n        return AbortablePromiseCache.checkSinglePromise(\n        //see https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#non-null-assertion-operator-postfix-\n        //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.cache.get(key).promise, signal);\n    }\n    /**\n     * delete the given entry from the cache. if it exists and its fill request has\n     * not yet settled, the fill will be signaled to abort.\n     *\n     * @param {any} key\n     */\n    delete(key) {\n        const cachedEntry = this.cache.get(key);\n        if (cachedEntry) {\n            if (!cachedEntry.settled) {\n                cachedEntry.aborter.abort();\n            }\n            this.cache.delete(key);\n        }\n    }\n    /**\n     * Clear all requests from the cache. Aborts any that have not settled.\n     * @returns {number} count of entries deleted\n     */\n    clear() {\n        // iterate without needing regenerator-runtime\n        const keyIter = this.cache.keys();\n        let deleteCount = 0;\n        for (let result = keyIter.next(); !result.done; result = keyIter.next()) {\n            this.delete(result.value);\n            deleteCount += 1;\n        }\n        return deleteCount;\n    }\n}\nexports.default = AbortablePromiseCache;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nclass NullSignal {\n}\n/**\n * aggregates a number of abort signals, will only fire the aggregated\n * abort if all of the input signals have been aborted\n */\nclass AggregateAbortController {\n    constructor() {\n        this.signals = new Set();\n        this.abortController = new abortcontroller_ponyfill_1.AbortController();\n    }\n    /**\n     * @param {AbortSignal} [signal] optional AbortSignal to add. if falsy,\n     *  will be treated as a null-signal, and this abortcontroller will no\n     *  longer be abortable.\n     */\n    //@ts-ignore\n    addSignal(signal = new NullSignal()) {\n        if (this.signal.aborted) {\n            throw new Error('cannot add a signal, already aborted!');\n        }\n        // note that a NullSignal will never fire, so if we\n        // have one this thing will never actually abort\n        this.signals.add(signal);\n        if (signal.aborted) {\n            // handle the abort immediately if it is already aborted\n            // for some reason\n            this.handleAborted(signal);\n        }\n        else if (typeof signal.addEventListener === 'function') {\n            signal.addEventListener('abort', () => {\n                this.handleAborted(signal);\n            });\n        }\n    }\n    handleAborted(signal) {\n        this.signals.delete(signal);\n        if (this.signals.size === 0) {\n            this.abortController.abort();\n        }\n    }\n    get signal() {\n        return this.abortController.signal;\n    }\n    abort() {\n        this.abortController.abort();\n    }\n}\nexports.default = AggregateAbortController;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AggregateStatusReporter {\n    constructor() {\n        this.callbacks = new Set();\n    }\n    addCallback(callback = () => { }) {\n        this.callbacks.add(callback);\n        callback(this.currentMessage);\n    }\n    callback(message) {\n        this.currentMessage = message;\n        this.callbacks.forEach(elt => {\n            elt(message);\n        });\n    }\n}\nexports.default = AggregateStatusReporter;\n","'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst value = this.oldCache.get(key);\n\t\t\tthis.oldCache.delete(key);\n\t\t\tthis._set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tset(key, value) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, value);\n\t\t} else {\n\t\t\tthis._set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\treturn this.cache.has(key) || this.oldCache.has(key);\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this.oldCache.get(key);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tyield item;\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn this._size + oldCacheSize;\n\t}\n}\n\nmodule.exports = QuickLRU;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.optimizeChunks = exports.canMergeBlocks = exports.abortBreakPoint = exports.checkAbortSignal = exports.longToNumber = void 0;\nfunction longToNumber(long) {\n    if (long.greaterThan(Number.MAX_SAFE_INTEGER) ||\n        long.lessThan(Number.MIN_SAFE_INTEGER)) {\n        throw new Error('integer overflow');\n    }\n    return long.toNumber();\n}\nexports.longToNumber = longToNumber;\nclass AbortError extends Error {\n}\n/**\n * Properly check if the given AbortSignal is aborted.\n * Per the standard, if the signal reads as aborted,\n * this function throws either a DOMException AbortError, or a regular error\n * with a `code` attribute set to `ERR_ABORTED`.\n *\n * For convenience, passing `undefined` is a no-op\n *\n * @param {AbortSignal} [signal] an AbortSignal, or anything with an `aborted` attribute\n * @returns nothing\n */\nfunction checkAbortSignal(signal) {\n    if (!signal) {\n        return;\n    }\n    if (signal.aborted) {\n        // console.log('bam aborted!')\n        if (typeof DOMException !== 'undefined') {\n            // eslint-disable-next-line  no-undef\n            throw new DOMException('aborted', 'AbortError');\n        }\n        else {\n            const e = new AbortError('aborted');\n            e.code = 'ERR_ABORTED';\n            throw e;\n        }\n    }\n}\nexports.checkAbortSignal = checkAbortSignal;\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n * @param {AbortSignal} signal\n */\nasync function abortBreakPoint(signal) {\n    await Promise.resolve();\n    checkAbortSignal(signal);\n}\nexports.abortBreakPoint = abortBreakPoint;\nfunction canMergeBlocks(chunk1, chunk2) {\n    return (chunk2.minv.blockPosition - chunk1.maxv.blockPosition < 65000 &&\n        chunk2.maxv.blockPosition - chunk1.minv.blockPosition < 5000000);\n}\nexports.canMergeBlocks = canMergeBlocks;\nfunction optimizeChunks(chunks, lowest) {\n    const mergedChunks = [];\n    let lastChunk = null;\n    if (chunks.length === 0) {\n        return chunks;\n    }\n    chunks.sort(function (c0, c1) {\n        const dif = c0.minv.blockPosition - c1.minv.blockPosition;\n        if (dif !== 0) {\n            return dif;\n        }\n        else {\n            return c0.minv.dataPosition - c1.minv.dataPosition;\n        }\n    });\n    chunks.forEach(chunk => {\n        if (!lowest || chunk.maxv.compareTo(lowest) > 0) {\n            if (lastChunk === null) {\n                mergedChunks.push(chunk);\n                lastChunk = chunk;\n            }\n            else {\n                if (canMergeBlocks(lastChunk, chunk)) {\n                    if (chunk.maxv.compareTo(lastChunk.maxv) > 0) {\n                        lastChunk.maxv = chunk.maxv;\n                    }\n                }\n                else {\n                    mergedChunks.push(chunk);\n                    lastChunk = chunk;\n                }\n            }\n        }\n        // else {\n        //   console.log(`skipping chunk ${chunk}`)\n        // }\n    });\n    return mergedChunks;\n}\nexports.optimizeChunks = optimizeChunks;\n","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst long_1 = __importDefault(require(\"long\"));\nconst virtualOffset_1 = __importStar(require(\"./virtualOffset\"));\nconst chunk_1 = __importDefault(require(\"./chunk\"));\nconst bgzf_filehandle_1 = require(\"@gmod/bgzf-filehandle\");\nconst util_1 = require(\"./util\");\nconst indexFile_1 = __importDefault(require(\"./indexFile\"));\nconst TBI_MAGIC = 21578324; // TBI\\1\nconst TAD_LIDX_SHIFT = 14;\n/**\n * calculate the list of bins that may overlap with region [beg,end) (zero-based half-open)\n */\nfunction reg2bins(beg, end) {\n    beg += 1; // < convert to 1-based closed\n    end -= 1;\n    return [\n        [0, 0],\n        [1 + (beg >> 26), 1 + (end >> 26)],\n        [9 + (beg >> 23), 9 + (end >> 23)],\n        [73 + (beg >> 20), 73 + (end >> 20)],\n        [585 + (beg >> 17), 585 + (end >> 17)],\n        [4681 + (beg >> 14), 4681 + (end >> 14)],\n    ];\n}\nclass TabixIndex extends indexFile_1.default {\n    async lineCount(refName, opts = {}) {\n        const indexData = await this.parse(opts);\n        if (!indexData) {\n            return -1;\n        }\n        const refId = indexData.refNameToId[refName];\n        const idx = indexData.indices[refId];\n        if (!idx) {\n            return -1;\n        }\n        const { stats } = indexData.indices[refId];\n        if (stats) {\n            return stats.lineCount;\n        }\n        return -1;\n    }\n    // memoize\n    // fetch and parse the index\n    async _parse(opts = {}) {\n        const bytes = await (0, bgzf_filehandle_1.unzip)((await this.filehandle.readFile(opts)));\n        (0, util_1.checkAbortSignal)(opts.signal);\n        // check TBI magic numbers\n        if (bytes.readUInt32LE(0) !== TBI_MAGIC /* \"TBI\\1\" */) {\n            throw new Error('Not a TBI file');\n            // TODO: do we need to support big-endian TBI files?\n        }\n        // number of reference sequences in the index\n        const refCount = bytes.readInt32LE(4);\n        const formatFlags = bytes.readInt32LE(8);\n        const coordinateType = formatFlags & 0x10000 ? 'zero-based-half-open' : '1-based-closed';\n        const formatOpts = {\n            0: 'generic',\n            1: 'SAM',\n            2: 'VCF',\n        };\n        const format = formatOpts[formatFlags & 0xf];\n        if (!format) {\n            throw new Error(`invalid Tabix preset format flags ${formatFlags}`);\n        }\n        const columnNumbers = {\n            ref: bytes.readInt32LE(12),\n            start: bytes.readInt32LE(16),\n            end: bytes.readInt32LE(20),\n        };\n        const metaValue = bytes.readInt32LE(24);\n        const depth = 5;\n        const maxBinNumber = ((1 << ((depth + 1) * 3)) - 1) / 7;\n        const maxRefLength = 2 ** (14 + depth * 3);\n        const metaChar = metaValue ? String.fromCharCode(metaValue) : null;\n        const skipLines = bytes.readInt32LE(28);\n        // read sequence dictionary\n        const nameSectionLength = bytes.readInt32LE(32);\n        const { refNameToId, refIdToName } = this._parseNameBytes(bytes.slice(36, 36 + nameSectionLength));\n        // read the indexes for each reference sequence\n        let currOffset = 36 + nameSectionLength;\n        let firstDataLine;\n        const indices = new Array(refCount).fill(0).map(() => {\n            // the binning index\n            const binCount = bytes.readInt32LE(currOffset);\n            currOffset += 4;\n            const binIndex = {};\n            let stats;\n            for (let j = 0; j < binCount; j += 1) {\n                const bin = bytes.readUInt32LE(currOffset);\n                currOffset += 4;\n                if (bin > maxBinNumber + 1) {\n                    throw new Error('tabix index contains too many bins, please use a CSI index');\n                }\n                else if (bin === maxBinNumber + 1) {\n                    const chunkCount = bytes.readInt32LE(currOffset);\n                    currOffset += 4;\n                    if (chunkCount === 2) {\n                        stats = this.parsePseudoBin(bytes, currOffset);\n                    }\n                    currOffset += 16 * chunkCount;\n                }\n                else {\n                    const chunkCount = bytes.readInt32LE(currOffset);\n                    currOffset += 4;\n                    const chunks = new Array(chunkCount);\n                    for (let k = 0; k < chunkCount; k += 1) {\n                        const u = (0, virtualOffset_1.fromBytes)(bytes, currOffset);\n                        const v = (0, virtualOffset_1.fromBytes)(bytes, currOffset + 8);\n                        currOffset += 16;\n                        firstDataLine = this._findFirstData(firstDataLine, u);\n                        chunks[k] = new chunk_1.default(u, v, bin);\n                    }\n                    binIndex[bin] = chunks;\n                }\n            }\n            // the linear index\n            const linearCount = bytes.readInt32LE(currOffset);\n            currOffset += 4;\n            const linearIndex = new Array(linearCount);\n            for (let k = 0; k < linearCount; k += 1) {\n                linearIndex[k] = (0, virtualOffset_1.fromBytes)(bytes, currOffset);\n                currOffset += 8;\n                firstDataLine = this._findFirstData(firstDataLine, linearIndex[k]);\n            }\n            return { binIndex, linearIndex, stats };\n        });\n        return {\n            indices,\n            metaChar,\n            maxBinNumber,\n            maxRefLength,\n            skipLines,\n            firstDataLine,\n            columnNumbers,\n            coordinateType,\n            format,\n            refIdToName,\n            refNameToId,\n            maxBlockSize: 1 << 16,\n        };\n    }\n    parsePseudoBin(bytes, offset) {\n        const lineCount = (0, util_1.longToNumber)(long_1.default.fromBytesLE(bytes.slice(offset + 16, offset + 24), true));\n        return { lineCount };\n    }\n    _parseNameBytes(namesBytes) {\n        let currRefId = 0;\n        let currNameStart = 0;\n        const refIdToName = [];\n        const refNameToId = {};\n        for (let i = 0; i < namesBytes.length; i += 1) {\n            if (!namesBytes[i]) {\n                if (currNameStart < i) {\n                    let refName = namesBytes.toString('utf8', currNameStart, i);\n                    refName = this.renameRefSeq(refName);\n                    refIdToName[currRefId] = refName;\n                    refNameToId[refName] = currRefId;\n                }\n                currNameStart = i + 1;\n                currRefId += 1;\n            }\n        }\n        return { refNameToId, refIdToName };\n    }\n    async blocksForRange(refName, min, max, opts = {}) {\n        if (min < 0) {\n            min = 0;\n        }\n        const indexData = await this.parse(opts);\n        if (!indexData) {\n            return [];\n        }\n        const refId = indexData.refNameToId[refName];\n        const ba = indexData.indices[refId];\n        if (!ba) {\n            return [];\n        }\n        const minOffset = ba.linearIndex.length\n            ? ba.linearIndex[min >> TAD_LIDX_SHIFT >= ba.linearIndex.length\n                ? ba.linearIndex.length - 1\n                : min >> TAD_LIDX_SHIFT]\n            : new virtualOffset_1.default(0, 0);\n        if (!minOffset) {\n            console.warn('querying outside of possible tabix range');\n        }\n        // const { linearIndex, binIndex } = indexes\n        const overlappingBins = reg2bins(min, max); // List of bin #s that overlap min, max\n        const chunks = [];\n        // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n        for (const [start, end] of overlappingBins) {\n            for (let bin = start; bin <= end; bin++) {\n                if (ba.binIndex[bin]) {\n                    const binChunks = ba.binIndex[bin];\n                    for (let c = 0; c < binChunks.length; ++c) {\n                        chunks.push(new chunk_1.default(binChunks[c].minv, binChunks[c].maxv, bin));\n                    }\n                }\n            }\n        }\n        // Use the linear index to find minimum file position of chunks that could\n        // contain alignments in the region\n        const nintv = ba.linearIndex.length;\n        let lowest = null;\n        const minLin = Math.min(min >> 14, nintv - 1);\n        const maxLin = Math.min(max >> 14, nintv - 1);\n        for (let i = minLin; i <= maxLin; ++i) {\n            const vp = ba.linearIndex[i];\n            if (vp) {\n                if (!lowest || vp.compareTo(lowest) < 0) {\n                    lowest = vp;\n                }\n            }\n        }\n        return (0, util_1.optimizeChunks)(chunks, lowest);\n    }\n}\nexports.default = TabixIndex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBytes = void 0;\nclass VirtualOffset {\n    constructor(blockPosition, dataPosition) {\n        this.blockPosition = blockPosition; // < offset of the compressed data block\n        this.dataPosition = dataPosition; // < offset into the uncompressed data\n    }\n    toString() {\n        return `${this.blockPosition}:${this.dataPosition}`;\n    }\n    compareTo(b) {\n        return (this.blockPosition - b.blockPosition || this.dataPosition - b.dataPosition);\n    }\n    static min(...args) {\n        let min;\n        let i = 0;\n        for (; !min; i += 1) {\n            min = args[i];\n        }\n        for (; i < args.length; i += 1) {\n            if (min.compareTo(args[i]) > 0) {\n                min = args[i];\n            }\n        }\n        return min;\n    }\n}\nexports.default = VirtualOffset;\nfunction fromBytes(bytes, offset = 0, bigendian = false) {\n    if (bigendian) {\n        throw new Error('big-endian virtual file offsets not implemented');\n    }\n    return new VirtualOffset(bytes[offset + 7] * 0x10000000000 +\n        bytes[offset + 6] * 0x100000000 +\n        bytes[offset + 5] * 0x1000000 +\n        bytes[offset + 4] * 0x10000 +\n        bytes[offset + 3] * 0x100 +\n        bytes[offset + 2], (bytes[offset + 1] << 8) | bytes[offset]);\n}\nexports.fromBytes = fromBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// little class representing a chunk in the index\nclass Chunk {\n    /**\n     * @param {VirtualOffset} minv\n     * @param {VirtualOffset} maxv\n     * @param {number} bin\n     * @param {number} [fetchedSize]\n     */\n    constructor(minv, maxv, bin, fetchedSize = undefined) {\n        this.minv = minv;\n        this.maxv = maxv;\n        this.bin = bin;\n        this._fetchedSize = fetchedSize;\n    }\n    toUniqueString() {\n        return `${this.minv}..${this.maxv} (bin ${this.bin}, fetchedSize ${this.fetchedSize()})`;\n    }\n    toString() {\n        return this.toUniqueString();\n    }\n    compareTo(b) {\n        return (this.minv.compareTo(b.minv) ||\n            this.maxv.compareTo(b.maxv) ||\n            this.bin - b.bin);\n    }\n    fetchedSize() {\n        if (this._fetchedSize !== undefined) {\n            return this._fetchedSize;\n        }\n        return this.maxv.blockPosition + (1 << 16) - this.minv.blockPosition;\n    }\n}\nexports.default = Chunk;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortable_promise_cache_1 = __importDefault(require(\"abortable-promise-cache\"));\nconst quick_lru_1 = __importDefault(require(\"quick-lru\"));\nclass IndexFile {\n    /**\n     * @param {filehandle} filehandle\n     * @param {function} [renameRefSeqs]\n     */\n    constructor({ filehandle, renameRefSeqs = (n) => n, }) {\n        this.filehandle = filehandle;\n        this.renameRefSeq = renameRefSeqs;\n    }\n    async getMetadata(opts = {}) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { indices, ...rest } = await this.parse(opts);\n        return rest;\n    }\n    _findFirstData(currentFdl, virtualOffset) {\n        if (currentFdl) {\n            return currentFdl.compareTo(virtualOffset) > 0\n                ? virtualOffset\n                : currentFdl;\n        }\n        else {\n            return virtualOffset;\n        }\n    }\n    async parse(opts = {}) {\n        if (!this._parseCache) {\n            this._parseCache = new abortable_promise_cache_1.default({\n                cache: new quick_lru_1.default({ maxSize: 1 }),\n                fill: () => this._parse(opts),\n            });\n        }\n        return this._parseCache.get('index', null, undefined);\n    }\n    async hasRefSeq(seqId, opts = {}) {\n        return !!((await this.parse(opts)).indices[seqId] || {}).binIndex;\n    }\n}\nexports.default = IndexFile;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst long_1 = __importDefault(require(\"long\"));\nconst bgzf_filehandle_1 = require(\"@gmod/bgzf-filehandle\");\nconst virtualOffset_1 = __importStar(require(\"./virtualOffset\"));\nconst chunk_1 = __importDefault(require(\"./chunk\"));\nconst util_1 = require(\"./util\");\nconst indexFile_1 = __importDefault(require(\"./indexFile\"));\nconst CSI1_MAGIC = 21582659; // CSI\\1\nconst CSI2_MAGIC = 38359875; // CSI\\2\nfunction lshift(num, bits) {\n    return num * 2 ** bits;\n}\nfunction rshift(num, bits) {\n    return Math.floor(num / 2 ** bits);\n}\nclass CSI extends indexFile_1.default {\n    constructor(args) {\n        super(args);\n        this.maxBinNumber = 0;\n        this.depth = 0;\n        this.minShift = 0;\n    }\n    async lineCount(refName, opts = {}) {\n        const indexData = await this.parse(opts);\n        if (!indexData) {\n            return -1;\n        }\n        const refId = indexData.refNameToId[refName];\n        const idx = indexData.indices[refId];\n        if (!idx) {\n            return -1;\n        }\n        const { stats } = indexData.indices[refId];\n        if (stats) {\n            return stats.lineCount;\n        }\n        return -1;\n    }\n    async indexCov() {\n        throw new Error('CSI indexes do not support indexcov');\n        return [];\n    }\n    parseAuxData(bytes, offset, auxLength) {\n        if (auxLength < 30) {\n            return {\n                refIdToName: [],\n                refNameToId: {},\n            };\n        }\n        const formatFlags = bytes.readInt32LE(offset);\n        const coordinateType = formatFlags & 0x10000 ? 'zero-based-half-open' : '1-based-closed';\n        const format = { 0: 'generic', 1: 'SAM', 2: 'VCF' }[formatFlags & 0xf];\n        if (!format) {\n            throw new Error(`invalid Tabix preset format flags ${formatFlags}`);\n        }\n        const columnNumbers = {\n            ref: bytes.readInt32LE(offset + 4),\n            start: bytes.readInt32LE(offset + 8),\n            end: bytes.readInt32LE(offset + 12),\n        };\n        const metaValue = bytes.readInt32LE(offset + 16);\n        const metaChar = metaValue ? String.fromCharCode(metaValue) : '';\n        const skipLines = bytes.readInt32LE(offset + 20);\n        const nameSectionLength = bytes.readInt32LE(offset + 24);\n        const { refIdToName, refNameToId } = this._parseNameBytes(bytes.slice(offset + 28, offset + 28 + nameSectionLength));\n        return {\n            refIdToName,\n            refNameToId,\n            skipLines,\n            metaChar,\n            columnNumbers,\n            format,\n            coordinateType,\n        };\n    }\n    _parseNameBytes(namesBytes) {\n        let currRefId = 0;\n        let currNameStart = 0;\n        const refIdToName = [];\n        const refNameToId = {};\n        for (let i = 0; i < namesBytes.length; i += 1) {\n            if (!namesBytes[i]) {\n                if (currNameStart < i) {\n                    let refName = namesBytes.toString('utf8', currNameStart, i);\n                    refName = this.renameRefSeq(refName);\n                    refIdToName[currRefId] = refName;\n                    refNameToId[refName] = currRefId;\n                }\n                currNameStart = i + 1;\n                currRefId += 1;\n            }\n        }\n        return { refNameToId, refIdToName };\n    }\n    // fetch and parse the index\n    async _parse(opts = {}) {\n        const bytes = await (0, bgzf_filehandle_1.unzip)((await this.filehandle.readFile(opts)));\n        // check TBI magic numbers\n        let csiVersion;\n        if (bytes.readUInt32LE(0) === CSI1_MAGIC) {\n            csiVersion = 1;\n        }\n        else if (bytes.readUInt32LE(0) === CSI2_MAGIC) {\n            csiVersion = 2;\n        }\n        else {\n            throw new Error('Not a CSI file');\n            // TODO: do we need to support big-endian CSI files?\n        }\n        this.minShift = bytes.readInt32LE(4);\n        this.depth = bytes.readInt32LE(8);\n        this.maxBinNumber = ((1 << ((this.depth + 1) * 3)) - 1) / 7;\n        const maxRefLength = 2 ** (this.minShift + this.depth * 3);\n        const auxLength = bytes.readInt32LE(12);\n        let aux = {\n            refIdToName: [],\n            refNameToId: {},\n        };\n        if (auxLength) {\n            aux = this.parseAuxData(bytes, 16, auxLength);\n        }\n        const refCount = bytes.readInt32LE(16 + auxLength);\n        // read the indexes for each reference sequence\n        let firstDataLine;\n        let currOffset = 16 + auxLength + 4;\n        const indices = new Array(refCount).fill(0).map(() => {\n            // the binning index\n            const binCount = bytes.readInt32LE(currOffset);\n            currOffset += 4;\n            const binIndex = {};\n            let stats; // < provided by parsing a pseudo-bin, if present\n            for (let j = 0; j < binCount; j += 1) {\n                const bin = bytes.readUInt32LE(currOffset);\n                if (bin > this.maxBinNumber) {\n                    // this is a fake bin that actually has stats information\n                    // about the reference sequence in it\n                    stats = this.parsePseudoBin(bytes, currOffset + 4);\n                    currOffset += 4 + 8 + 4 + 16 + 16;\n                }\n                else {\n                    const loffset = (0, virtualOffset_1.fromBytes)(bytes, currOffset + 4);\n                    firstDataLine = this._findFirstData(firstDataLine, loffset);\n                    const chunkCount = bytes.readInt32LE(currOffset + 12);\n                    currOffset += 16;\n                    const chunks = new Array(chunkCount);\n                    for (let k = 0; k < chunkCount; k += 1) {\n                        const u = (0, virtualOffset_1.fromBytes)(bytes, currOffset);\n                        const v = (0, virtualOffset_1.fromBytes)(bytes, currOffset + 8);\n                        currOffset += 16;\n                        // this._findFirstData(data, u)\n                        chunks[k] = new chunk_1.default(u, v, bin);\n                    }\n                    binIndex[bin] = chunks;\n                }\n            }\n            return { binIndex, stats };\n        });\n        return {\n            ...aux,\n            csi: true,\n            refCount,\n            maxBlockSize: 1 << 16,\n            firstDataLine,\n            csiVersion,\n            indices,\n            depth: this.depth,\n            maxBinNumber: this.maxBinNumber,\n            maxRefLength,\n        };\n    }\n    parsePseudoBin(bytes, offset) {\n        const lineCount = (0, util_1.longToNumber)(long_1.default.fromBytesLE(Array.prototype.slice.call(bytes, offset + 28, offset + 36), true));\n        return { lineCount };\n    }\n    async blocksForRange(refName, min, max, opts = {}) {\n        if (min < 0) {\n            min = 0;\n        }\n        const indexData = await this.parse(opts);\n        if (!indexData) {\n            return [];\n        }\n        const refId = indexData.refNameToId[refName];\n        const ba = indexData.indices[refId];\n        if (!ba) {\n            return [];\n        }\n        // const { linearIndex, binIndex } = indexes\n        const overlappingBins = this.reg2bins(min, max); // List of bin #s that overlap min, max\n        const chunks = [];\n        // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n        for (const [start, end] of overlappingBins) {\n            for (let bin = start; bin <= end; bin++) {\n                if (ba.binIndex[bin]) {\n                    const binChunks = ba.binIndex[bin];\n                    for (let c = 0; c < binChunks.length; ++c) {\n                        chunks.push(new chunk_1.default(binChunks[c].minv, binChunks[c].maxv, bin));\n                    }\n                }\n            }\n        }\n        return (0, util_1.optimizeChunks)(chunks, new virtualOffset_1.default(0, 0));\n    }\n    /**\n     * calculate the list of bins that may overlap with region [beg,end) (zero-based half-open)\n     */\n    reg2bins(beg, end) {\n        beg -= 1; // < convert to 1-based closed\n        if (beg < 1) {\n            beg = 1;\n        }\n        if (end > 2 ** 50) {\n            end = 2 ** 34;\n        } // 17 GiB ought to be enough for anybody\n        end -= 1;\n        let l = 0;\n        let t = 0;\n        let s = this.minShift + this.depth * 3;\n        const bins = [];\n        for (; l <= this.depth; s -= 3, t += lshift(1, l * 3), l += 1) {\n            const b = t + rshift(beg, s);\n            const e = t + rshift(end, s);\n            if (e - b + bins.length > this.maxBinNumber) {\n                throw new Error(`query ${beg}-${end} is too large for current binning scheme (shift ${this.minShift}, depth ${this.depth}), try a smaller query or a coarser index binning scheme`);\n            }\n            bins.push([b, e]);\n        }\n        return bins;\n    }\n}\nexports.default = CSI;\n"],"sourceRoot":""}