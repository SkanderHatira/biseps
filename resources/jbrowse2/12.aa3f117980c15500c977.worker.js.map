{"version":3,"sources":["../../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../../src/autoSql.js","../../../node_modules/@gmod/tabix/esm/index.js","../../../node_modules/@gmod/tabix/esm/tabixIndexedFile.js","../../../plugins/bed/src/util.ts","../../../src/as/autoSqlSchemas.js","../../src/defaultTypes.js","../../src/util.js","../../src/parser.js","../../src/index.js","../../../plugins/bed/src/BedTabixAdapter/BedTabixAdapter.ts","../../../node_modules/abortable-promise-cache/esm/abortcontroller-ponyfill.js","../../../node_modules/abortable-promise-cache/esm/index.js","../../../node_modules/long/src/long.js","../../../node_modules/abortable-promise-cache/esm/AbortablePromiseCache.js","../../../node_modules/abortable-promise-cache/esm/AggregateAbortController.js","../../../node_modules/abortable-promise-cache/esm/AggregateStatusReporter.js","../../../node_modules/quick-lru/index.js","../../../node_modules/@gmod/tabix/esm/util.js","../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../../../node_modules/@gmod/tabix/esm/tbi.js","../../../node_modules/@gmod/tabix/esm/virtualOffset.js","../../../node_modules/@gmod/tabix/esm/chunk.js","../../../node_modules/@gmod/tabix/esm/indexFile.js","../../../node_modules/@gmod/tabix/esm/csi.js"],"names":["objectWithoutPropertiesLoose","module","exports","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","__esModule","peg$SyntaxError","message","expected","found","location","name","Error","captureStackTrace","child","parent","ctor","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","parts","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","j","descriptions","type","sort","slice","join","describeExpected","describeFound","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","declaration","peg$parsedeclaration","peg$startRuleFunction","peg$c1","peg$literalExpectation","peg$c3","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","f1","w","peg$c22","peg$c24","peg$c27","peg$c29","peg$c32","peg$c33","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c62","peg$c64","peg$c65","peg$classExpectation","peg$c66","peg$c67","peg$c74","peg$c75","peg$c77","peg$otherExpectation","peg$c78","peg$c79","peg$c81","peg$c82","peg$c83","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","ignoreCase","peg$computePosDetails","pos","p","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","peg$fail","push","peg$buildStructuredError","s0","s2","s4","s6","s8","s10","s12","peg$parse_","peg$parsedeclareType","peg$parsedeclareName","peg$parsecomment","s1","s3","peg$parsefield","fds","unshift","peg$parsefieldList","comment","fields","substr","peg$parsename","peg$parseindexType","peg$parsenonQuotedString","peg$parseinternalComment","peg$parsecommentStart","s5","s7","s9","s11","s13","peg$parsefieldType","test","charAt","parseInt","peg$parsenumber","peg$parsefieldSize","size","peg$c30","peg$parsefieldValues","vals","peg$c31","__importDefault","this","mod","defineProperty","value","CSI","TBI","TabixIndexedFile","tabixIndexedFile_1","require","default","tbi_1","csi_1","abortable_promise_cache_1","quick_lru_1","generic_filehandle_1","bgzf_filehandle_1","util_1","timeout","time","Promise","resolve","setTimeout","path","filehandle","tbiPath","tbiFilehandle","csiPath","csiFilehandle","chunkSizeLimit","renameRefSeqs","n","chunkCacheSize","TypeError","LocalFile","index","renameRefSeq","chunkCache","cache","maxSize","Math","floor","fill","readChunk","bind","refName","opts","callback","lineCallback","undefined","getMetadata","metadata","checkAbortSignal","signal","maxRefLength","blocksForRange","chunks","fetchedSize","toLocaleString","last","Date","now","chunkNum","previousStartCoordinate","c","get","buffer","cpositions","dpositions","lines","TextDecoder","decode","split","pop","blockStart","minv","dataPosition","checkLine","startCoordinate","overlaps","trim","firstDataLine","metaChar","maxBlockSize","maxFetch","blockPosition","_readRegion","bytes","unzip","console","error","code","lastNewline","newlineByte","metaByte","getHeaderBuffer","refIdToName","regionRefName","regionStart","regionEnd","columnNumbers","coordinateType","format","ref","maxColumn","max","currentColumnNumber","currentColumnStart","refSeq","Infinity","_getVcfEnd","info","endCoordinate","isTRA","prevChar","valueEnd","lineCount","position","compressedSize","read","Buffer","alloc","bytesRead","chunk","compressedData","unzipChunkSlice","ucscProcessedTranscript","feature","children","thickStart","thickEnd","blocks","filter","a","b","newChildren","forEach","block","prime","leftPrime","rightPrime","newData","tags","tag","subfeatures","uniqueId","id","chromStarts","chromStart","chromEnd","chrom","blockStarts","blockSizes","blockCount","SimpleFeature","data","bigChain","bigGenePred","bigInteract","bigLink","bigMaf","bigNarrowPeak","bigPsl","defaultBedSchema","mafFrames","mafSummary","fromEntries","entries","types","map","val","detectTypes","autoSql","numericTypes","autoField","includes","isNumeric","isArray","arrayIsNumeric","strandMap","isBed12Like","Number","isNaN","_a","f","BED","args","parser","attemptDefaultBed","startsWith","columnVal","num","str","fieldNames","parseFloat","field4","score","field5","strand","decodeURIComponent","BedTabixAdapter","config","getSubAdapter","pluginManager","bed","columnNames","scoreColumn","bedGzLocation","readConfObject","indexType","openLocation","getReferenceSequenceNames","getHeader","header","defs","defline","field","query","ObservableCreate","observer","meta","colRef","colStart","colEnd","colSame","getNames","names","getLines","fileOffset","l","defaultParser","parseLine","starts","sizes","blocksOffset","bmin","bmax","r","next","complete","BaseFeatureDataAdapter","capabilities","AbortSignal","AbortController","cjs_ponyfill_1","getGlobal","self","window","global","AbortablePromiseCache_1","Long","wasm","WebAssembly","Instance","Module","Uint8Array","e","low","high","unsigned","isLong","obj","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","pow","fromString","radix","RangeError","radixToPower","result","min","power","mul","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","ceil","log","LN2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","hi","lo","fromBytes","fromBytesLE","fromBytesBE","abortcontroller_ponyfill_1","AggregateAbortController_1","AggregateStatusReporter_1","AbortablePromiseCache","set","delete","fillCallback","entry","statusCallback","aborter","statusReporter","addCallback","newEntry","promise","settled","aborted","addSignal","addEventListener","evict","then","catch","has","cacheEntry","checkSinglePromise","cachedEntry","abort","keyIter","keys","deleteCount","done","exception","checkForSingleAbort","assign","NullSignal","AggregateAbortController","signals","Set","abortController","handleAborted","AggregateStatusReporter","callbacks","currentMessage","elt","QuickLRU","Map","oldCache","_size","_set","deleted","clear","item","oldCacheSize","Symbol","iterator","optimizeChunks","canMergeBlocks","abortBreakPoint","longToNumber","long","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","AbortError","DOMException","chunk1","chunk2","maxv","lowest","mergedChunks","lastChunk","c0","c1","dif","compareTo","sourceKeys","__createBinding","create","o","m","k","k2","enumerable","__setModuleDefault","v","__importStar","hasOwnProperty","long_1","virtualOffset_1","chunk_1","indexFile_1","TBI_MAGIC","reg2bins","beg","TabixIndex","indexData","refId","refNameToId","indices","stats","readFile","readUInt32LE","refCount","readInt32LE","formatFlags","metaValue","maxBinNumber","depth","String","fromCharCode","skipLines","nameSectionLength","_parseNameBytes","currOffset","binCount","binIndex","bin","chunkCount","parsePseudoBin","u","_findFirstData","linearCount","linearIndex","namesBytes","currRefId","currNameStart","ba","warn","overlappingBins","binChunks","nintv","minLin","maxLin","vp","VirtualOffset","bigendian","Chunk","_fetchedSize","toUniqueString","IndexFile","rest","currentFdl","virtualOffset","_parseCache","_parse","seqId","CSI1_MAGIC","CSI2_MAGIC","rshift","bits","minShift","auxLength","csiVersion","aux","parseAuxData","loffset","csi","t","bins"],"mappings":"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","file":"12.aa3f117980c15500c977.worker.js","sourcesContent":["var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",null,"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CSI = exports.TBI = exports.TabixIndexedFile = void 0;\nconst tabixIndexedFile_1 = __importDefault(require(\"./tabixIndexedFile\"));\nexports.TabixIndexedFile = tabixIndexedFile_1.default;\nconst tbi_1 = __importDefault(require(\"./tbi\"));\nexports.TBI = tbi_1.default;\nconst csi_1 = __importDefault(require(\"./csi\"));\nexports.CSI = csi_1.default;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortable_promise_cache_1 = __importDefault(require(\"abortable-promise-cache\"));\nconst quick_lru_1 = __importDefault(require(\"quick-lru\"));\nconst generic_filehandle_1 = require(\"generic-filehandle\");\nconst bgzf_filehandle_1 = require(\"@gmod/bgzf-filehandle\");\nconst util_1 = require(\"./util\");\nconst tbi_1 = __importDefault(require(\"./tbi\"));\nconst csi_1 = __importDefault(require(\"./csi\"));\nfunction timeout(time) {\n    return new Promise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\nclass TabixIndexedFile {\n    /**\n     * @param {object} args\n     * @param {string} [args.path]\n     * @param {filehandle} [args.filehandle]\n     * @param {string} [args.tbiPath]\n     * @param {filehandle} [args.tbiFilehandle]\n     * @param {string} [args.csiPath]\n     * @param {filehandle} [args.csiFilehandle]\n     * @param {chunkSizeLimit} default 50MiB\n     * @param {function} [args.renameRefSeqs] optional function with sig `string => string` to transform\n     * reference sequence names for the purpose of indexing and querying. note that the data that is returned is\n     * not altered, just the names of the reference sequences that are used for querying.\n     * @param {number} [args.chunkCacheSize] maximum size in bytes of the chunk cache. default 5MB\n     * @param {number} [args.blockCacheSize] maximum size in bytes of the block cache. default 5MB\n     */\n    constructor({ path, filehandle, tbiPath, tbiFilehandle, csiPath, csiFilehandle, chunkSizeLimit = 50000000, renameRefSeqs = n => n, chunkCacheSize = 5 * 2 ** 20, }) {\n        if (filehandle) {\n            this.filehandle = filehandle;\n        }\n        else if (path) {\n            this.filehandle = new generic_filehandle_1.LocalFile(path);\n        }\n        else {\n            throw new TypeError('must provide either filehandle or path');\n        }\n        if (tbiFilehandle) {\n            this.index = new tbi_1.default({\n                filehandle: tbiFilehandle,\n                renameRefSeqs,\n            });\n        }\n        else if (csiFilehandle) {\n            this.index = new csi_1.default({\n                filehandle: csiFilehandle,\n                renameRefSeqs,\n            });\n        }\n        else if (tbiPath) {\n            this.index = new tbi_1.default({\n                filehandle: new generic_filehandle_1.LocalFile(tbiPath),\n                renameRefSeqs,\n            });\n        }\n        else if (csiPath) {\n            this.index = new csi_1.default({\n                filehandle: new generic_filehandle_1.LocalFile(csiPath),\n                renameRefSeqs,\n            });\n        }\n        else if (path) {\n            this.index = new tbi_1.default({\n                filehandle: new generic_filehandle_1.LocalFile(`${path}.tbi`),\n                renameRefSeqs,\n            });\n        }\n        else {\n            throw new TypeError('must provide one of tbiFilehandle, tbiPath, csiFilehandle, or csiPath');\n        }\n        this.chunkSizeLimit = chunkSizeLimit;\n        this.renameRefSeq = renameRefSeqs;\n        this.chunkCache = new abortable_promise_cache_1.default({\n            cache: new quick_lru_1.default({\n                maxSize: Math.floor(chunkCacheSize / (1 << 16)),\n            }),\n            fill: this.readChunk.bind(this),\n        });\n    }\n    /**\n     * @param {string} refName name of the reference sequence\n     * @param {number} start start of the region (in 0-based half-open coordinates)\n     * @param {number} end end of the region (in 0-based half-open coordinates)\n     * @param {function|object} lineCallback callback called for each line in the region. can also pass a object param containing obj.lineCallback, obj.signal, etc\n     * @returns {Promise} resolved when the whole read is finished, rejected on error\n     */\n    async getLines(refName, start, end, opts) {\n        let signal;\n        let options = {};\n        let callback;\n        if (typeof opts === 'undefined') {\n            throw new TypeError('line callback must be provided');\n        }\n        if (typeof opts === 'function') {\n            callback = opts;\n        }\n        else {\n            options = opts;\n            callback = opts.lineCallback;\n        }\n        if (refName === undefined) {\n            throw new TypeError('must provide a reference sequence name');\n        }\n        if (!callback) {\n            throw new TypeError('line callback must be provided');\n        }\n        const metadata = await this.index.getMetadata(options);\n        (0, util_1.checkAbortSignal)(signal);\n        if (!start) {\n            start = 0;\n        }\n        if (!end) {\n            end = metadata.maxRefLength;\n        }\n        if (!(start <= end)) {\n            throw new TypeError('invalid start and end coordinates. start must be less than or equal to end');\n        }\n        if (start === end) {\n            return;\n        }\n        const chunks = await this.index.blocksForRange(refName, start, end, options);\n        (0, util_1.checkAbortSignal)(signal);\n        // check the chunks for any that are over the size limit.  if\n        // any are, don't fetch any of them\n        for (let i = 0; i < chunks.length; i += 1) {\n            const size = chunks[i].fetchedSize();\n            if (size > this.chunkSizeLimit) {\n                throw new Error(`Too much data. Chunk size ${size.toLocaleString()} bytes exceeds chunkSizeLimit of ${this.chunkSizeLimit.toLocaleString()}.`);\n            }\n        }\n        // now go through each chunk and parse and filter the lines out of it\n        let last = Date.now();\n        for (let chunkNum = 0; chunkNum < chunks.length; chunkNum += 1) {\n            let previousStartCoordinate;\n            const c = chunks[chunkNum];\n            const { buffer, cpositions, dpositions } = await this.chunkCache.get(c.toString(), c, signal);\n            const lines = (typeof TextDecoder !== 'undefined'\n                ? new TextDecoder('utf-8').decode(buffer)\n                : buffer.toString()).split('\\n');\n            lines.pop();\n            (0, util_1.checkAbortSignal)(signal);\n            let blockStart = c.minv.dataPosition;\n            let pos;\n            for (let i = 0; i < lines.length; i += 1) {\n                const line = lines[i];\n                for (pos = 0; blockStart >= dpositions[pos]; pos += 1) { }\n                // filter the line for whether it is within the requested range\n                const { startCoordinate, overlaps } = this.checkLine(metadata, refName, start, end, line);\n                // do a small check just to make sure that the lines are really sorted by start coordinate\n                if (previousStartCoordinate !== undefined &&\n                    startCoordinate !== undefined &&\n                    previousStartCoordinate > startCoordinate) {\n                    throw new Error(`Lines not sorted by start coordinate (${previousStartCoordinate} > ${startCoordinate}), this file is not usable with Tabix.`);\n                }\n                previousStartCoordinate = startCoordinate;\n                if (overlaps) {\n                    callback(line.trim(), \n                    // cpositions[pos] refers to actual file offset of a bgzip block boundaries\n                    //\n                    // we multiply by (1 <<8) in order to make sure each block has a \"unique\"\n                    // address space so that data in that block could never overlap\n                    //\n                    // then the blockStart-dpositions is an uncompressed file offset from\n                    // that bgzip block boundary, and since the cpositions are multiplied by\n                    // (1 << 8) these uncompressed offsets get a unique space\n                    cpositions[pos] * (1 << 8) + (blockStart - dpositions[pos]));\n                }\n                else if (startCoordinate !== undefined && startCoordinate >= end) {\n                    // the lines were overlapping the region, but now have stopped, so\n                    // we must be at the end of the relevant data and we can stop\n                    // processing data now\n                    return;\n                }\n                blockStart += line.length + 1;\n                // yield if we have emitted beyond the yield limit\n                if (last - Date.now() > 500) {\n                    last = Date.now();\n                    (0, util_1.checkAbortSignal)(signal);\n                    await timeout(1);\n                }\n            }\n        }\n    }\n    async getMetadata(opts = {}) {\n        return this.index.getMetadata(opts);\n    }\n    /**\n     * get a buffer containing the \"header\" region of\n     * the file, which are the bytes up to the first\n     * non-meta line\n     *\n     * @returns {Promise} for a buffer\n     */\n    async getHeaderBuffer(opts = {}) {\n        const { firstDataLine, metaChar, maxBlockSize } = await this.getMetadata(opts);\n        (0, util_1.checkAbortSignal)(opts.signal);\n        const maxFetch = firstDataLine && firstDataLine.blockPosition\n            ? firstDataLine.blockPosition + maxBlockSize\n            : maxBlockSize;\n        // TODO: what if we don't have a firstDataLine, and the header\n        // actually takes up more than one block? this case is not covered here\n        let bytes = await this._readRegion(0, maxFetch, opts);\n        (0, util_1.checkAbortSignal)(opts.signal);\n        try {\n            bytes = await (0, bgzf_filehandle_1.unzip)(bytes);\n        }\n        catch (e) {\n            console.error(e);\n            throw new Error(\n            //@ts-ignore\n            `error decompressing block ${e.code} at 0 (length ${maxFetch}) ${e}`);\n        }\n        // trim off lines after the last non-meta line\n        if (metaChar) {\n            // trim backward from the end\n            let lastNewline = -1;\n            const newlineByte = '\\n'.charCodeAt(0);\n            const metaByte = metaChar.charCodeAt(0);\n            for (let i = 0; i < bytes.length; i += 1) {\n                if (i === lastNewline + 1 && bytes[i] !== metaByte) {\n                    break;\n                }\n                if (bytes[i] === newlineByte) {\n                    lastNewline = i;\n                }\n            }\n            bytes = bytes.slice(0, lastNewline + 1);\n        }\n        return bytes;\n    }\n    /**\n     * get a string containing the \"header\" region of the\n     * file, is the portion up to the first non-meta line\n     *\n     * @returns {Promise} for a string\n     */\n    async getHeader(opts = {}) {\n        const bytes = await this.getHeaderBuffer(opts);\n        (0, util_1.checkAbortSignal)(opts.signal);\n        return bytes.toString('utf8');\n    }\n    /**\n     * get an array of reference sequence names, in the order in which\n     * they occur in the file.\n     *\n     * reference sequence renaming is not applied to these names.\n     *\n     * @returns {Promise} for an array of string sequence names\n     */\n    async getReferenceSequenceNames(opts = {}) {\n        const metadata = await this.getMetadata(opts);\n        return metadata.refIdToName;\n    }\n    /**\n     * @param {object} metadata metadata object from the parsed index,\n     * containing columnNumbers, metaChar, and format\n     * @param {string} regionRefName\n     * @param {number} regionStart region start coordinate (0-based-half-open)\n     * @param {number} regionEnd region end coordinate (0-based-half-open)\n     * @param {array[string]} line\n     * @returns {object} like `{startCoordinate, overlaps}`. overlaps is boolean,\n     * true if line is a data line that overlaps the given region\n     */\n    checkLine({ columnNumbers, metaChar, coordinateType, format, }, regionRefName, regionStart, regionEnd, line) {\n        // skip meta lines\n        if (line.charAt(0) === metaChar) {\n            return { overlaps: false };\n        }\n        // check ref/start/end using column metadata from index\n        let { ref, start, end } = columnNumbers;\n        if (!ref) {\n            ref = 0;\n        }\n        if (!start) {\n            start = 0;\n        }\n        if (!end) {\n            end = 0;\n        }\n        if (format === 'VCF') {\n            end = 8;\n        }\n        const maxColumn = Math.max(ref, start, end);\n        // this code is kind of complex, but it is fairly fast.\n        // basically, we want to avoid doing a split, because if the lines are really long\n        // that could lead to us allocating a bunch of extra memory, which is slow\n        let currentColumnNumber = 1; // cols are numbered starting at 1 in the index metadata\n        let currentColumnStart = 0;\n        let refSeq = '';\n        let startCoordinate = -Infinity;\n        for (let i = 0; i < line.length + 1; i += 1) {\n            if (line[i] === '\\t' || i === line.length) {\n                if (currentColumnNumber === ref) {\n                    if (this.renameRefSeq(line.slice(currentColumnStart, i)) !==\n                        regionRefName) {\n                        return { overlaps: false };\n                    }\n                }\n                else if (currentColumnNumber === start) {\n                    startCoordinate = parseInt(line.slice(currentColumnStart, i), 10);\n                    // we convert to 0-based-half-open\n                    if (coordinateType === '1-based-closed') {\n                        startCoordinate -= 1;\n                    }\n                    if (startCoordinate >= regionEnd) {\n                        return { startCoordinate, overlaps: false };\n                    }\n                    if (end === 0 || end === start) {\n                        // if we have no end, we assume the feature is 1 bp long\n                        if (startCoordinate + 1 <= regionStart) {\n                            return { startCoordinate, overlaps: false };\n                        }\n                    }\n                }\n                else if (format === 'VCF' && currentColumnNumber === 4) {\n                    refSeq = line.slice(currentColumnStart, i);\n                }\n                else if (currentColumnNumber === end) {\n                    let endCoordinate;\n                    // this will never match if there is no end column\n                    if (format === 'VCF') {\n                        endCoordinate = this._getVcfEnd(startCoordinate, refSeq, line.slice(currentColumnStart, i));\n                    }\n                    else {\n                        endCoordinate = parseInt(line.slice(currentColumnStart, i), 10);\n                    }\n                    if (endCoordinate <= regionStart) {\n                        return { overlaps: false };\n                    }\n                }\n                currentColumnStart = i + 1;\n                currentColumnNumber += 1;\n                if (currentColumnNumber > maxColumn) {\n                    break;\n                }\n            }\n        }\n        return { startCoordinate, overlaps: true };\n    }\n    _getVcfEnd(startCoordinate, refSeq, info) {\n        let endCoordinate = startCoordinate + refSeq.length;\n        // ignore TRA features as they specify CHR2 and END\n        // as being on a different chromosome\n        // if CHR2 is on the same chromosome, still ignore it\n        // because there should be another pairwise feature\n        // at the end of this one\n        const isTRA = info.indexOf('SVTYPE=TRA') !== -1;\n        if (info[0] !== '.' && !isTRA) {\n            let prevChar = ';';\n            for (let j = 0; j < info.length; j += 1) {\n                if (prevChar === ';' && info.slice(j, j + 4) === 'END=') {\n                    let valueEnd = info.indexOf(';', j);\n                    if (valueEnd === -1) {\n                        valueEnd = info.length;\n                    }\n                    endCoordinate = parseInt(info.slice(j + 4, valueEnd), 10);\n                    break;\n                }\n                prevChar = info[j];\n            }\n        }\n        else if (isTRA) {\n            return startCoordinate + 1;\n        }\n        return endCoordinate;\n    }\n    /**\n     * return the approximate number of data lines in the given reference sequence\n     * @param {string} refSeq reference sequence name\n     * @returns {Promise} for number of data lines present on that reference sequence\n     */\n    async lineCount(refName, opts = {}) {\n        return this.index.lineCount(refName, opts);\n    }\n    async _readRegion(position, compressedSize, opts = {}) {\n        const { bytesRead, buffer } = await this.filehandle.read(Buffer.alloc(compressedSize), 0, compressedSize, position, opts);\n        return bytesRead < compressedSize ? buffer.slice(0, bytesRead) : buffer;\n    }\n    /**\n     * read and uncompress the data in a chunk (composed of one or more\n     * contiguous bgzip blocks) of the file\n     * @param {Chunk} chunk\n     * @returns {Promise} for a string chunk of the file\n     */\n    async readChunk(chunk, opts = {}) {\n        // fetch the uncompressed data, uncompress carefully a block at a time,\n        // and stop when done\n        const compressedData = await this._readRegion(chunk.minv.blockPosition, chunk.fetchedSize(), opts);\n        try {\n            return (0, bgzf_filehandle_1.unzipChunkSlice)(compressedData, chunk);\n        }\n        catch (e) {\n            throw new Error(`error decompressing chunk ${chunk.toString()} ${e}`);\n        }\n    }\n}\nexports.default = TabixIndexedFile;\n","import SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\n\nexport function ucscProcessedTranscript(feature: Feature) {\n  const children = feature.children()\n  // split the blocks into UTR, CDS, and exons\n  const thickStart = feature.get('thickStart')\n  const thickEnd = feature.get('thickEnd')\n\n  if (!thickStart && !thickEnd) {\n    return feature\n  }\n\n  const blocks: Feature[] = children\n    ? children\n        .filter(child => child.get('type') === 'block')\n        .sort((a, b) => a.get('start') - b.get('start'))\n    : []\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const newChildren: Record<string, any> = []\n  blocks.forEach(block => {\n    const start = block.get('start')\n    const end = block.get('end')\n    if (thickStart >= end) {\n      // left-side UTR\n      const prime = feature.get('strand') > 0 ? 'five' : 'three'\n      newChildren.push({\n        type: `${prime}_prime_UTR`,\n        start,\n        end,\n      })\n    } else if (thickStart > start && thickStart < end && thickEnd >= end) {\n      // UTR | CDS\n      const prime = feature.get('strand') > 0 ? 'five' : 'three'\n      newChildren.push(\n        {\n          type: `${prime}_prime_UTR`,\n          start,\n          end: thickStart,\n        },\n        {\n          type: 'CDS',\n          start: thickStart,\n          end,\n        },\n      )\n    } else if (thickStart <= start && thickEnd >= end) {\n      // CDS\n      newChildren.push({\n        type: 'CDS',\n        start,\n        end,\n      })\n    } else if (thickStart > start && thickStart < end && thickEnd < end) {\n      // UTR | CDS | UTR\n      const leftPrime = feature.get('strand') > 0 ? 'five' : 'three'\n      const rightPrime = feature.get('strand') > 0 ? 'three' : 'five'\n      newChildren.push(\n        {\n          type: `${leftPrime}_prime_UTR`,\n          start,\n          end: thickStart,\n        },\n        {\n          type: `CDS`,\n          start: thickStart,\n          end: thickEnd,\n        },\n        {\n          type: `${rightPrime}_prime_UTR`,\n          start: thickEnd,\n          end,\n        },\n      )\n    } else if (thickStart <= start && thickEnd > start && thickEnd < end) {\n      // CDS | UTR\n      const prime = feature.get('strand') > 0 ? 'three' : 'five'\n      newChildren.push(\n        {\n          type: `CDS`,\n          start,\n          end: thickEnd,\n        },\n        {\n          type: `${prime}_prime_UTR`,\n          start: thickEnd,\n          end,\n        },\n      )\n    } else if (thickEnd <= start) {\n      // right-side UTR\n      const prime = feature.get('strand') > 0 ? 'three' : 'five'\n      newChildren.push({\n        type: `${prime}_prime_UTR`,\n        start,\n        end,\n      })\n    }\n  })\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const newData: Record<string, any> = {}\n  feature.tags().forEach(tag => {\n    newData[tag] = feature.get(tag)\n  })\n  newData.subfeatures = newChildren\n  newData.type = 'mRNA'\n  newData.uniqueId = feature.id()\n  delete newData.chromStarts\n  delete newData.chromStart\n  delete newData.chromEnd\n  delete newData.chrom\n  delete newData.blockStarts\n  delete newData.blockSizes\n  delete newData.blockCount\n  delete newData.thickStart\n  delete newData.thickEnd\n  const newFeature = new SimpleFeature({\n    data: newData,\n    id: feature.id(),\n  })\n  return newFeature\n}\n",null,null,null,null,null,"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport BED from '@gmod/bed'\nimport {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { FileLocation, Region } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { TabixIndexedFile } from '@gmod/tabix'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { ucscProcessedTranscript } from '../util'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\nexport default class BedTabixAdapter extends BaseFeatureDataAdapter {\n  private parser: any\n\n  protected bed: TabixIndexedFile\n\n  protected columnNames: string[]\n\n  protected scoreColumn: string\n\n  public static capabilities = ['getFeatures', 'getRefNames']\n\n  public constructor(\n    config: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    const bedGzLocation = readConfObject(\n      config,\n      'bedGzLocation',\n    ) as FileLocation\n    const index = readConfObject(config, 'index') as {\n      indexType?: string\n      location: FileLocation\n    }\n    const autoSql = readConfObject(config, 'autoSql') as string\n    const { location, indexType } = index\n\n    this.bed = new TabixIndexedFile({\n      filehandle: openLocation(bedGzLocation, this.pluginManager),\n      csiFilehandle:\n        indexType === 'CSI'\n          ? openLocation(location, this.pluginManager)\n          : undefined,\n      tbiFilehandle:\n        indexType !== 'CSI'\n          ? openLocation(location, this.pluginManager)\n          : undefined,\n      chunkCacheSize: 50 * 2 ** 20,\n    })\n    this.columnNames = readConfObject(config, 'columnNames')\n    this.scoreColumn = readConfObject(config, 'scoreColumn')\n    this.parser = new BED({ autoSql })\n  }\n\n  public async getRefNames(opts: BaseOptions = {}) {\n    return this.bed.getReferenceSequenceNames(opts)\n  }\n\n  async getHeader() {\n    return this.bed.getHeader()\n  }\n\n  defaultParser(fields: string[], line: string) {\n    return Object.fromEntries(line.split('\\t').map((f, i) => [fields[i], f]))\n  }\n\n  async getNames() {\n    if (this.columnNames.length) {\n      return this.columnNames\n    }\n    const header = await this.bed.getHeader()\n    const defs = header.split('\\n').filter(f => !!f)\n    const defline = defs[defs.length - 1]\n    return defline && defline.includes('\\t')\n      ? defline\n          .slice(1)\n          .split('\\t')\n          .map(field => field.trim())\n      : null\n  }\n\n  public getFeatures(query: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const meta = await this.bed.getMetadata()\n      const { columnNumbers } = meta\n      const colRef = columnNumbers.ref - 1\n      const colStart = columnNumbers.start - 1\n      const colEnd = columnNumbers.end - 1\n      // colSame handles special case for tabix where a single column is both\n      // the start and end, this is assumed to be covering the base at this\n      // position (e.g. tabix -s 1 -b 2 -e 2) begin and end are same\n      const colSame = colStart === colEnd ? 1 : 0\n      const names = await this.getNames()\n      await this.bed.getLines(query.refName, query.start, query.end, {\n        lineCallback: (line: string, fileOffset: number) => {\n          const l = line.split('\\t')\n          const refName = l[colRef]\n          const start = +l[colStart]\n\n          const end = +l[colEnd] + colSame\n          const uniqueId = `${this.id}-${fileOffset}`\n          const data = names\n            ? this.defaultParser(names, line)\n            : this.parser.parseLine(line, { uniqueId })\n\n          const { blockCount, blockSizes, blockStarts, chromStarts } = data\n\n          if (blockCount) {\n            const starts = chromStarts || blockStarts || []\n            const sizes = blockSizes\n            const blocksOffset = start\n            data.subfeatures = []\n\n            for (let b = 0; b < blockCount; b += 1) {\n              const bmin = (starts[b] || 0) + blocksOffset\n              const bmax = bmin + (sizes[b] || 0)\n              data.subfeatures.push({\n                uniqueId: `${uniqueId}-${b}`,\n                start: bmin,\n                end: bmax,\n                type: 'block',\n              })\n            }\n          }\n\n          if (this.scoreColumn) {\n            data.score = +data[this.scoreColumn]\n          }\n          delete data.chrom\n          delete data.chromStart\n          delete data.chromEnd\n          const f = new SimpleFeature({\n            ...data,\n            start,\n            end,\n            refName,\n            uniqueId,\n          })\n          const r = f.get('thickStart') ? ucscProcessedTranscript(f) : f\n          observer.next(r)\n        },\n        signal: opts.signal,\n      })\n      observer.complete()\n    }, opts.signal)\n  }\n\n  public freeResources(): void {}\n}\n","\"use strict\";\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortSignal = exports.AbortController = void 0;\nconst cjs_ponyfill_1 = require(\"abortcontroller-polyfill/dist/cjs-ponyfill\");\nvar getGlobal = function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n};\n//@ts-ignore\nlet AbortController = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortController : getGlobal().AbortController;\nexports.AbortController = AbortController;\n//@ts-ignore\nlet AbortSignal = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortSignal : getGlobal().AbortSignal;\nexports.AbortSignal = AbortSignal;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbortablePromiseCache_1 = __importDefault(require(\"./AbortablePromiseCache\"));\nexports.default = AbortablePromiseCache_1.default;\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nconst AggregateAbortController_1 = __importDefault(require(\"./AggregateAbortController\"));\nconst AggregateStatusReporter_1 = __importDefault(require(\"./AggregateStatusReporter\"));\nclass AbortablePromiseCache {\n    constructor({ fill, cache, }) {\n        if (typeof fill !== 'function') {\n            throw new TypeError('must pass a fill function');\n        }\n        if (typeof cache !== 'object') {\n            throw new TypeError('must pass a cache object');\n        }\n        if (typeof cache.get !== 'function' ||\n            typeof cache.set !== 'function' ||\n            typeof cache.delete !== 'function') {\n            throw new TypeError('cache must implement get(key), set(key, val), and and delete(key)');\n        }\n        this.cache = cache;\n        this.fillCallback = fill;\n    }\n    static isAbortException(exception) {\n        return (\n        // DOMException\n        exception.name === 'AbortError' ||\n            // standard-ish non-DOM abort exception\n            //@ts-ignore\n            exception.code === 'ERR_ABORTED' ||\n            // stringified DOMException\n            exception.message === 'AbortError: aborted' ||\n            // stringified standard-ish exception\n            exception.message === 'Error: aborted');\n    }\n    evict(key, entry) {\n        if (this.cache.get(key) === entry) {\n            this.cache.delete(key);\n        }\n    }\n    fill(key, data, signal, statusCallback) {\n        const aborter = new AggregateAbortController_1.default();\n        const statusReporter = new AggregateStatusReporter_1.default();\n        statusReporter.addCallback(statusCallback);\n        const newEntry = {\n            aborter: aborter,\n            promise: this.fillCallback(data, aborter.signal, (message) => {\n                statusReporter.callback(message);\n            }),\n            settled: false,\n            statusReporter,\n            get aborted() {\n                return this.aborter.signal.aborted;\n            },\n        };\n        newEntry.aborter.addSignal(signal);\n        // remove the fill from the cache when its abortcontroller fires, if still in there\n        newEntry.aborter.signal.addEventListener('abort', () => {\n            if (!newEntry.settled) {\n                this.evict(key, newEntry);\n            }\n        });\n        // chain off the cached promise to record when it settles\n        newEntry.promise\n            .then(() => {\n            newEntry.settled = true;\n        }, () => {\n            newEntry.settled = true;\n            // if the fill throws an error (including abort) and is still in the cache, remove it\n            this.evict(key, newEntry);\n        })\n            .catch(e => {\n            // this will only be reached if there is some kind of\n            // bad bug in this library\n            console.error(e);\n            throw e;\n        });\n        this.cache.set(key, newEntry);\n    }\n    static checkSinglePromise(promise, signal) {\n        // check just this signal for having been aborted, and abort the\n        // promise if it was, regardless of what happened with the cached\n        // response\n        function checkForSingleAbort() {\n            if (signal && signal.aborted) {\n                throw Object.assign(new Error('aborted'), { code: 'ERR_ABORTED' });\n            }\n        }\n        return promise.then(result => {\n            checkForSingleAbort();\n            return result;\n        }, error => {\n            checkForSingleAbort();\n            throw error;\n        });\n    }\n    has(key) {\n        return this.cache.has(key);\n    }\n    /**\n     * Callback for getting status of the pending async\n     *\n     * @callback statusCallback\n     * @param {any} status, current status string or message object\n     */\n    /**\n     * @param {any} key cache key to use for this request\n     * @param {any} data data passed as the first argument to the fill callback\n     * @param {AbortSignal} [signal] optional AbortSignal object that aborts the request\n     * @param {statusCallback} a callback to get the current status of a pending async operation\n     */\n    get(key, data, signal, statusCallback) {\n        if (!signal && data instanceof abortcontroller_ponyfill_1.AbortSignal) {\n            throw new TypeError('second get argument appears to be an AbortSignal, perhaps you meant to pass `null` for the fill data?');\n        }\n        const cacheEntry = this.cache.get(key);\n        if (cacheEntry) {\n            if (cacheEntry.aborted && !cacheEntry.settled) {\n                // if it's aborted but has not realized it yet, evict it and redispatch\n                this.evict(key, cacheEntry);\n                return this.get(key, data, signal, statusCallback);\n            }\n            if (cacheEntry.settled) {\n                // too late to abort, just return it\n                return cacheEntry.promise;\n            }\n            // request is in-flight, add this signal to its list of signals,\n            // or if there is no signal, the aborter will become non-abortable\n            cacheEntry.aborter.addSignal(signal);\n            cacheEntry.statusReporter.addCallback(statusCallback);\n            return AbortablePromiseCache.checkSinglePromise(cacheEntry.promise, signal);\n        }\n        // if we got here, it is not in the cache. fill.\n        this.fill(key, data, signal, statusCallback);\n        return AbortablePromiseCache.checkSinglePromise(\n        //see https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#non-null-assertion-operator-postfix-\n        //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.cache.get(key).promise, signal);\n    }\n    /**\n     * delete the given entry from the cache. if it exists and its fill request has\n     * not yet settled, the fill will be signaled to abort.\n     *\n     * @param {any} key\n     */\n    delete(key) {\n        const cachedEntry = this.cache.get(key);\n        if (cachedEntry) {\n            if (!cachedEntry.settled) {\n                cachedEntry.aborter.abort();\n            }\n            this.cache.delete(key);\n        }\n    }\n    /**\n     * Clear all requests from the cache. Aborts any that have not settled.\n     * @returns {number} count of entries deleted\n     */\n    clear() {\n        // iterate without needing regenerator-runtime\n        const keyIter = this.cache.keys();\n        let deleteCount = 0;\n        for (let result = keyIter.next(); !result.done; result = keyIter.next()) {\n            this.delete(result.value);\n            deleteCount += 1;\n        }\n        return deleteCount;\n    }\n}\nexports.default = AbortablePromiseCache;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nclass NullSignal {\n}\n/**\n * aggregates a number of abort signals, will only fire the aggregated\n * abort if all of the input signals have been aborted\n */\nclass AggregateAbortController {\n    constructor() {\n        this.signals = new Set();\n        this.abortController = new abortcontroller_ponyfill_1.AbortController();\n    }\n    /**\n     * @param {AbortSignal} [signal] optional AbortSignal to add. if falsy,\n     *  will be treated as a null-signal, and this abortcontroller will no\n     *  longer be abortable.\n     */\n    //@ts-ignore\n    addSignal(signal = new NullSignal()) {\n        if (this.signal.aborted) {\n            throw new Error('cannot add a signal, already aborted!');\n        }\n        // note that a NullSignal will never fire, so if we\n        // have one this thing will never actually abort\n        this.signals.add(signal);\n        if (signal.aborted) {\n            // handle the abort immediately if it is already aborted\n            // for some reason\n            this.handleAborted(signal);\n        }\n        else if (typeof signal.addEventListener === 'function') {\n            signal.addEventListener('abort', () => {\n                this.handleAborted(signal);\n            });\n        }\n    }\n    handleAborted(signal) {\n        this.signals.delete(signal);\n        if (this.signals.size === 0) {\n            this.abortController.abort();\n        }\n    }\n    get signal() {\n        return this.abortController.signal;\n    }\n    abort() {\n        this.abortController.abort();\n    }\n}\nexports.default = AggregateAbortController;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AggregateStatusReporter {\n    constructor() {\n        this.callbacks = new Set();\n    }\n    addCallback(callback = () => { }) {\n        this.callbacks.add(callback);\n        callback(this.currentMessage);\n    }\n    callback(message) {\n        this.currentMessage = message;\n        this.callbacks.forEach(elt => {\n            elt(message);\n        });\n    }\n}\nexports.default = AggregateStatusReporter;\n","'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst value = this.oldCache.get(key);\n\t\t\tthis.oldCache.delete(key);\n\t\t\tthis._set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tset(key, value) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, value);\n\t\t} else {\n\t\t\tthis._set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\treturn this.cache.has(key) || this.oldCache.has(key);\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this.oldCache.get(key);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tyield item;\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn this._size + oldCacheSize;\n\t}\n}\n\nmodule.exports = QuickLRU;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.optimizeChunks = exports.canMergeBlocks = exports.abortBreakPoint = exports.checkAbortSignal = exports.longToNumber = void 0;\nfunction longToNumber(long) {\n    if (long.greaterThan(Number.MAX_SAFE_INTEGER) ||\n        long.lessThan(Number.MIN_SAFE_INTEGER)) {\n        throw new Error('integer overflow');\n    }\n    return long.toNumber();\n}\nexports.longToNumber = longToNumber;\nclass AbortError extends Error {\n}\n/**\n * Properly check if the given AbortSignal is aborted.\n * Per the standard, if the signal reads as aborted,\n * this function throws either a DOMException AbortError, or a regular error\n * with a `code` attribute set to `ERR_ABORTED`.\n *\n * For convenience, passing `undefined` is a no-op\n *\n * @param {AbortSignal} [signal] an AbortSignal, or anything with an `aborted` attribute\n * @returns nothing\n */\nfunction checkAbortSignal(signal) {\n    if (!signal) {\n        return;\n    }\n    if (signal.aborted) {\n        // console.log('bam aborted!')\n        if (typeof DOMException !== 'undefined') {\n            // eslint-disable-next-line  no-undef\n            throw new DOMException('aborted', 'AbortError');\n        }\n        else {\n            const e = new AbortError('aborted');\n            e.code = 'ERR_ABORTED';\n            throw e;\n        }\n    }\n}\nexports.checkAbortSignal = checkAbortSignal;\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n * @param {AbortSignal} signal\n */\nasync function abortBreakPoint(signal) {\n    await Promise.resolve();\n    checkAbortSignal(signal);\n}\nexports.abortBreakPoint = abortBreakPoint;\nfunction canMergeBlocks(chunk1, chunk2) {\n    return (chunk2.minv.blockPosition - chunk1.maxv.blockPosition < 65000 &&\n        chunk2.maxv.blockPosition - chunk1.minv.blockPosition < 5000000);\n}\nexports.canMergeBlocks = canMergeBlocks;\nfunction optimizeChunks(chunks, lowest) {\n    const mergedChunks = [];\n    let lastChunk = null;\n    if (chunks.length === 0) {\n        return chunks;\n    }\n    chunks.sort(function (c0, c1) {\n        const dif = c0.minv.blockPosition - c1.minv.blockPosition;\n        if (dif !== 0) {\n            return dif;\n        }\n        else {\n            return c0.minv.dataPosition - c1.minv.dataPosition;\n        }\n    });\n    chunks.forEach(chunk => {\n        if (!lowest || chunk.maxv.compareTo(lowest) > 0) {\n            if (lastChunk === null) {\n                mergedChunks.push(chunk);\n                lastChunk = chunk;\n            }\n            else {\n                if (canMergeBlocks(lastChunk, chunk)) {\n                    if (chunk.maxv.compareTo(lastChunk.maxv) > 0) {\n                        lastChunk.maxv = chunk.maxv;\n                    }\n                }\n                else {\n                    mergedChunks.push(chunk);\n                    lastChunk = chunk;\n                }\n            }\n        }\n        // else {\n        //   console.log(`skipping chunk ${chunk}`)\n        // }\n    });\n    return mergedChunks;\n}\nexports.optimizeChunks = optimizeChunks;\n","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst long_1 = __importDefault(require(\"long\"));\nconst virtualOffset_1 = __importStar(require(\"./virtualOffset\"));\nconst chunk_1 = __importDefault(require(\"./chunk\"));\nconst bgzf_filehandle_1 = require(\"@gmod/bgzf-filehandle\");\nconst util_1 = require(\"./util\");\nconst indexFile_1 = __importDefault(require(\"./indexFile\"));\nconst TBI_MAGIC = 21578324; // TBI\\1\nconst TAD_LIDX_SHIFT = 14;\n/**\n * calculate the list of bins that may overlap with region [beg,end) (zero-based half-open)\n */\nfunction reg2bins(beg, end) {\n    beg += 1; // < convert to 1-based closed\n    end -= 1;\n    return [\n        [0, 0],\n        [1 + (beg >> 26), 1 + (end >> 26)],\n        [9 + (beg >> 23), 9 + (end >> 23)],\n        [73 + (beg >> 20), 73 + (end >> 20)],\n        [585 + (beg >> 17), 585 + (end >> 17)],\n        [4681 + (beg >> 14), 4681 + (end >> 14)],\n    ];\n}\nclass TabixIndex extends indexFile_1.default {\n    async lineCount(refName, opts = {}) {\n        const indexData = await this.parse(opts);\n        if (!indexData) {\n            return -1;\n        }\n        const refId = indexData.refNameToId[refName];\n        const idx = indexData.indices[refId];\n        if (!idx) {\n            return -1;\n        }\n        const { stats } = indexData.indices[refId];\n        if (stats) {\n            return stats.lineCount;\n        }\n        return -1;\n    }\n    // memoize\n    // fetch and parse the index\n    async _parse(opts = {}) {\n        const bytes = await (0, bgzf_filehandle_1.unzip)((await this.filehandle.readFile(opts)));\n        (0, util_1.checkAbortSignal)(opts.signal);\n        // check TBI magic numbers\n        if (bytes.readUInt32LE(0) !== TBI_MAGIC /* \"TBI\\1\" */) {\n            throw new Error('Not a TBI file');\n            // TODO: do we need to support big-endian TBI files?\n        }\n        // number of reference sequences in the index\n        const refCount = bytes.readInt32LE(4);\n        const formatFlags = bytes.readInt32LE(8);\n        const coordinateType = formatFlags & 0x10000 ? 'zero-based-half-open' : '1-based-closed';\n        const formatOpts = {\n            0: 'generic',\n            1: 'SAM',\n            2: 'VCF',\n        };\n        const format = formatOpts[formatFlags & 0xf];\n        if (!format) {\n            throw new Error(`invalid Tabix preset format flags ${formatFlags}`);\n        }\n        const columnNumbers = {\n            ref: bytes.readInt32LE(12),\n            start: bytes.readInt32LE(16),\n            end: bytes.readInt32LE(20),\n        };\n        const metaValue = bytes.readInt32LE(24);\n        const depth = 5;\n        const maxBinNumber = ((1 << ((depth + 1) * 3)) - 1) / 7;\n        const maxRefLength = 2 ** (14 + depth * 3);\n        const metaChar = metaValue ? String.fromCharCode(metaValue) : null;\n        const skipLines = bytes.readInt32LE(28);\n        // read sequence dictionary\n        const nameSectionLength = bytes.readInt32LE(32);\n        const { refNameToId, refIdToName } = this._parseNameBytes(bytes.slice(36, 36 + nameSectionLength));\n        // read the indexes for each reference sequence\n        let currOffset = 36 + nameSectionLength;\n        let firstDataLine;\n        const indices = new Array(refCount).fill(0).map(() => {\n            // the binning index\n            const binCount = bytes.readInt32LE(currOffset);\n            currOffset += 4;\n            const binIndex = {};\n            let stats;\n            for (let j = 0; j < binCount; j += 1) {\n                const bin = bytes.readUInt32LE(currOffset);\n                currOffset += 4;\n                if (bin > maxBinNumber + 1) {\n                    throw new Error('tabix index contains too many bins, please use a CSI index');\n                }\n                else if (bin === maxBinNumber + 1) {\n                    const chunkCount = bytes.readInt32LE(currOffset);\n                    currOffset += 4;\n                    if (chunkCount === 2) {\n                        stats = this.parsePseudoBin(bytes, currOffset);\n                    }\n                    currOffset += 16 * chunkCount;\n                }\n                else {\n                    const chunkCount = bytes.readInt32LE(currOffset);\n                    currOffset += 4;\n                    const chunks = new Array(chunkCount);\n                    for (let k = 0; k < chunkCount; k += 1) {\n                        const u = (0, virtualOffset_1.fromBytes)(bytes, currOffset);\n                        const v = (0, virtualOffset_1.fromBytes)(bytes, currOffset + 8);\n                        currOffset += 16;\n                        firstDataLine = this._findFirstData(firstDataLine, u);\n                        chunks[k] = new chunk_1.default(u, v, bin);\n                    }\n                    binIndex[bin] = chunks;\n                }\n            }\n            // the linear index\n            const linearCount = bytes.readInt32LE(currOffset);\n            currOffset += 4;\n            const linearIndex = new Array(linearCount);\n            for (let k = 0; k < linearCount; k += 1) {\n                linearIndex[k] = (0, virtualOffset_1.fromBytes)(bytes, currOffset);\n                currOffset += 8;\n                firstDataLine = this._findFirstData(firstDataLine, linearIndex[k]);\n            }\n            return { binIndex, linearIndex, stats };\n        });\n        return {\n            indices,\n            metaChar,\n            maxBinNumber,\n            maxRefLength,\n            skipLines,\n            firstDataLine,\n            columnNumbers,\n            coordinateType,\n            format,\n            refIdToName,\n            refNameToId,\n            maxBlockSize: 1 << 16,\n        };\n    }\n    parsePseudoBin(bytes, offset) {\n        const lineCount = (0, util_1.longToNumber)(long_1.default.fromBytesLE(bytes.slice(offset + 16, offset + 24), true));\n        return { lineCount };\n    }\n    _parseNameBytes(namesBytes) {\n        let currRefId = 0;\n        let currNameStart = 0;\n        const refIdToName = [];\n        const refNameToId = {};\n        for (let i = 0; i < namesBytes.length; i += 1) {\n            if (!namesBytes[i]) {\n                if (currNameStart < i) {\n                    let refName = namesBytes.toString('utf8', currNameStart, i);\n                    refName = this.renameRefSeq(refName);\n                    refIdToName[currRefId] = refName;\n                    refNameToId[refName] = currRefId;\n                }\n                currNameStart = i + 1;\n                currRefId += 1;\n            }\n        }\n        return { refNameToId, refIdToName };\n    }\n    async blocksForRange(refName, min, max, opts = {}) {\n        if (min < 0) {\n            min = 0;\n        }\n        const indexData = await this.parse(opts);\n        if (!indexData) {\n            return [];\n        }\n        const refId = indexData.refNameToId[refName];\n        const ba = indexData.indices[refId];\n        if (!ba) {\n            return [];\n        }\n        const minOffset = ba.linearIndex.length\n            ? ba.linearIndex[min >> TAD_LIDX_SHIFT >= ba.linearIndex.length\n                ? ba.linearIndex.length - 1\n                : min >> TAD_LIDX_SHIFT]\n            : new virtualOffset_1.default(0, 0);\n        if (!minOffset) {\n            console.warn('querying outside of possible tabix range');\n        }\n        // const { linearIndex, binIndex } = indexes\n        const overlappingBins = reg2bins(min, max); // List of bin #s that overlap min, max\n        const chunks = [];\n        // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n        for (const [start, end] of overlappingBins) {\n            for (let bin = start; bin <= end; bin++) {\n                if (ba.binIndex[bin]) {\n                    const binChunks = ba.binIndex[bin];\n                    for (let c = 0; c < binChunks.length; ++c) {\n                        chunks.push(new chunk_1.default(binChunks[c].minv, binChunks[c].maxv, bin));\n                    }\n                }\n            }\n        }\n        // Use the linear index to find minimum file position of chunks that could\n        // contain alignments in the region\n        const nintv = ba.linearIndex.length;\n        let lowest = null;\n        const minLin = Math.min(min >> 14, nintv - 1);\n        const maxLin = Math.min(max >> 14, nintv - 1);\n        for (let i = minLin; i <= maxLin; ++i) {\n            const vp = ba.linearIndex[i];\n            if (vp) {\n                if (!lowest || vp.compareTo(lowest) < 0) {\n                    lowest = vp;\n                }\n            }\n        }\n        return (0, util_1.optimizeChunks)(chunks, lowest);\n    }\n}\nexports.default = TabixIndex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBytes = void 0;\nclass VirtualOffset {\n    constructor(blockPosition, dataPosition) {\n        this.blockPosition = blockPosition; // < offset of the compressed data block\n        this.dataPosition = dataPosition; // < offset into the uncompressed data\n    }\n    toString() {\n        return `${this.blockPosition}:${this.dataPosition}`;\n    }\n    compareTo(b) {\n        return (this.blockPosition - b.blockPosition || this.dataPosition - b.dataPosition);\n    }\n    static min(...args) {\n        let min;\n        let i = 0;\n        for (; !min; i += 1) {\n            min = args[i];\n        }\n        for (; i < args.length; i += 1) {\n            if (min.compareTo(args[i]) > 0) {\n                min = args[i];\n            }\n        }\n        return min;\n    }\n}\nexports.default = VirtualOffset;\nfunction fromBytes(bytes, offset = 0, bigendian = false) {\n    if (bigendian) {\n        throw new Error('big-endian virtual file offsets not implemented');\n    }\n    return new VirtualOffset(bytes[offset + 7] * 0x10000000000 +\n        bytes[offset + 6] * 0x100000000 +\n        bytes[offset + 5] * 0x1000000 +\n        bytes[offset + 4] * 0x10000 +\n        bytes[offset + 3] * 0x100 +\n        bytes[offset + 2], (bytes[offset + 1] << 8) | bytes[offset]);\n}\nexports.fromBytes = fromBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// little class representing a chunk in the index\nclass Chunk {\n    /**\n     * @param {VirtualOffset} minv\n     * @param {VirtualOffset} maxv\n     * @param {number} bin\n     * @param {number} [fetchedSize]\n     */\n    constructor(minv, maxv, bin, fetchedSize = undefined) {\n        this.minv = minv;\n        this.maxv = maxv;\n        this.bin = bin;\n        this._fetchedSize = fetchedSize;\n    }\n    toUniqueString() {\n        return `${this.minv}..${this.maxv} (bin ${this.bin}, fetchedSize ${this.fetchedSize()})`;\n    }\n    toString() {\n        return this.toUniqueString();\n    }\n    compareTo(b) {\n        return (this.minv.compareTo(b.minv) ||\n            this.maxv.compareTo(b.maxv) ||\n            this.bin - b.bin);\n    }\n    fetchedSize() {\n        if (this._fetchedSize !== undefined) {\n            return this._fetchedSize;\n        }\n        return this.maxv.blockPosition + (1 << 16) - this.minv.blockPosition;\n    }\n}\nexports.default = Chunk;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortable_promise_cache_1 = __importDefault(require(\"abortable-promise-cache\"));\nconst quick_lru_1 = __importDefault(require(\"quick-lru\"));\nclass IndexFile {\n    /**\n     * @param {filehandle} filehandle\n     * @param {function} [renameRefSeqs]\n     */\n    constructor({ filehandle, renameRefSeqs = (n) => n, }) {\n        this.filehandle = filehandle;\n        this.renameRefSeq = renameRefSeqs;\n    }\n    async getMetadata(opts = {}) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { indices, ...rest } = await this.parse(opts);\n        return rest;\n    }\n    _findFirstData(currentFdl, virtualOffset) {\n        if (currentFdl) {\n            return currentFdl.compareTo(virtualOffset) > 0\n                ? virtualOffset\n                : currentFdl;\n        }\n        else {\n            return virtualOffset;\n        }\n    }\n    async parse(opts = {}) {\n        if (!this._parseCache) {\n            this._parseCache = new abortable_promise_cache_1.default({\n                cache: new quick_lru_1.default({ maxSize: 1 }),\n                fill: () => this._parse(opts),\n            });\n        }\n        return this._parseCache.get('index', null, undefined);\n    }\n    async hasRefSeq(seqId, opts = {}) {\n        return !!((await this.parse(opts)).indices[seqId] || {}).binIndex;\n    }\n}\nexports.default = IndexFile;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst long_1 = __importDefault(require(\"long\"));\nconst bgzf_filehandle_1 = require(\"@gmod/bgzf-filehandle\");\nconst virtualOffset_1 = __importStar(require(\"./virtualOffset\"));\nconst chunk_1 = __importDefault(require(\"./chunk\"));\nconst util_1 = require(\"./util\");\nconst indexFile_1 = __importDefault(require(\"./indexFile\"));\nconst CSI1_MAGIC = 21582659; // CSI\\1\nconst CSI2_MAGIC = 38359875; // CSI\\2\nfunction lshift(num, bits) {\n    return num * 2 ** bits;\n}\nfunction rshift(num, bits) {\n    return Math.floor(num / 2 ** bits);\n}\nclass CSI extends indexFile_1.default {\n    constructor(args) {\n        super(args);\n        this.maxBinNumber = 0;\n        this.depth = 0;\n        this.minShift = 0;\n    }\n    async lineCount(refName, opts = {}) {\n        const indexData = await this.parse(opts);\n        if (!indexData) {\n            return -1;\n        }\n        const refId = indexData.refNameToId[refName];\n        const idx = indexData.indices[refId];\n        if (!idx) {\n            return -1;\n        }\n        const { stats } = indexData.indices[refId];\n        if (stats) {\n            return stats.lineCount;\n        }\n        return -1;\n    }\n    async indexCov() {\n        throw new Error('CSI indexes do not support indexcov');\n        return [];\n    }\n    parseAuxData(bytes, offset, auxLength) {\n        if (auxLength < 30) {\n            return {\n                refIdToName: [],\n                refNameToId: {},\n            };\n        }\n        const formatFlags = bytes.readInt32LE(offset);\n        const coordinateType = formatFlags & 0x10000 ? 'zero-based-half-open' : '1-based-closed';\n        const format = { 0: 'generic', 1: 'SAM', 2: 'VCF' }[formatFlags & 0xf];\n        if (!format) {\n            throw new Error(`invalid Tabix preset format flags ${formatFlags}`);\n        }\n        const columnNumbers = {\n            ref: bytes.readInt32LE(offset + 4),\n            start: bytes.readInt32LE(offset + 8),\n            end: bytes.readInt32LE(offset + 12),\n        };\n        const metaValue = bytes.readInt32LE(offset + 16);\n        const metaChar = metaValue ? String.fromCharCode(metaValue) : '';\n        const skipLines = bytes.readInt32LE(offset + 20);\n        const nameSectionLength = bytes.readInt32LE(offset + 24);\n        const { refIdToName, refNameToId } = this._parseNameBytes(bytes.slice(offset + 28, offset + 28 + nameSectionLength));\n        return {\n            refIdToName,\n            refNameToId,\n            skipLines,\n            metaChar,\n            columnNumbers,\n            format,\n            coordinateType,\n        };\n    }\n    _parseNameBytes(namesBytes) {\n        let currRefId = 0;\n        let currNameStart = 0;\n        const refIdToName = [];\n        const refNameToId = {};\n        for (let i = 0; i < namesBytes.length; i += 1) {\n            if (!namesBytes[i]) {\n                if (currNameStart < i) {\n                    let refName = namesBytes.toString('utf8', currNameStart, i);\n                    refName = this.renameRefSeq(refName);\n                    refIdToName[currRefId] = refName;\n                    refNameToId[refName] = currRefId;\n                }\n                currNameStart = i + 1;\n                currRefId += 1;\n            }\n        }\n        return { refNameToId, refIdToName };\n    }\n    // fetch and parse the index\n    async _parse(opts = {}) {\n        const bytes = await (0, bgzf_filehandle_1.unzip)((await this.filehandle.readFile(opts)));\n        // check TBI magic numbers\n        let csiVersion;\n        if (bytes.readUInt32LE(0) === CSI1_MAGIC) {\n            csiVersion = 1;\n        }\n        else if (bytes.readUInt32LE(0) === CSI2_MAGIC) {\n            csiVersion = 2;\n        }\n        else {\n            throw new Error('Not a CSI file');\n            // TODO: do we need to support big-endian CSI files?\n        }\n        this.minShift = bytes.readInt32LE(4);\n        this.depth = bytes.readInt32LE(8);\n        this.maxBinNumber = ((1 << ((this.depth + 1) * 3)) - 1) / 7;\n        const maxRefLength = 2 ** (this.minShift + this.depth * 3);\n        const auxLength = bytes.readInt32LE(12);\n        let aux = {\n            refIdToName: [],\n            refNameToId: {},\n        };\n        if (auxLength) {\n            aux = this.parseAuxData(bytes, 16, auxLength);\n        }\n        const refCount = bytes.readInt32LE(16 + auxLength);\n        // read the indexes for each reference sequence\n        let firstDataLine;\n        let currOffset = 16 + auxLength + 4;\n        const indices = new Array(refCount).fill(0).map(() => {\n            // the binning index\n            const binCount = bytes.readInt32LE(currOffset);\n            currOffset += 4;\n            const binIndex = {};\n            let stats; // < provided by parsing a pseudo-bin, if present\n            for (let j = 0; j < binCount; j += 1) {\n                const bin = bytes.readUInt32LE(currOffset);\n                if (bin > this.maxBinNumber) {\n                    // this is a fake bin that actually has stats information\n                    // about the reference sequence in it\n                    stats = this.parsePseudoBin(bytes, currOffset + 4);\n                    currOffset += 4 + 8 + 4 + 16 + 16;\n                }\n                else {\n                    const loffset = (0, virtualOffset_1.fromBytes)(bytes, currOffset + 4);\n                    firstDataLine = this._findFirstData(firstDataLine, loffset);\n                    const chunkCount = bytes.readInt32LE(currOffset + 12);\n                    currOffset += 16;\n                    const chunks = new Array(chunkCount);\n                    for (let k = 0; k < chunkCount; k += 1) {\n                        const u = (0, virtualOffset_1.fromBytes)(bytes, currOffset);\n                        const v = (0, virtualOffset_1.fromBytes)(bytes, currOffset + 8);\n                        currOffset += 16;\n                        // this._findFirstData(data, u)\n                        chunks[k] = new chunk_1.default(u, v, bin);\n                    }\n                    binIndex[bin] = chunks;\n                }\n            }\n            return { binIndex, stats };\n        });\n        return {\n            ...aux,\n            csi: true,\n            refCount,\n            maxBlockSize: 1 << 16,\n            firstDataLine,\n            csiVersion,\n            indices,\n            depth: this.depth,\n            maxBinNumber: this.maxBinNumber,\n            maxRefLength,\n        };\n    }\n    parsePseudoBin(bytes, offset) {\n        const lineCount = (0, util_1.longToNumber)(long_1.default.fromBytesLE(Array.prototype.slice.call(bytes, offset + 28, offset + 36), true));\n        return { lineCount };\n    }\n    async blocksForRange(refName, min, max, opts = {}) {\n        if (min < 0) {\n            min = 0;\n        }\n        const indexData = await this.parse(opts);\n        if (!indexData) {\n            return [];\n        }\n        const refId = indexData.refNameToId[refName];\n        const ba = indexData.indices[refId];\n        if (!ba) {\n            return [];\n        }\n        // const { linearIndex, binIndex } = indexes\n        const overlappingBins = this.reg2bins(min, max); // List of bin #s that overlap min, max\n        const chunks = [];\n        // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n        for (const [start, end] of overlappingBins) {\n            for (let bin = start; bin <= end; bin++) {\n                if (ba.binIndex[bin]) {\n                    const binChunks = ba.binIndex[bin];\n                    for (let c = 0; c < binChunks.length; ++c) {\n                        chunks.push(new chunk_1.default(binChunks[c].minv, binChunks[c].maxv, bin));\n                    }\n                }\n            }\n        }\n        return (0, util_1.optimizeChunks)(chunks, new virtualOffset_1.default(0, 0));\n    }\n    /**\n     * calculate the list of bins that may overlap with region [beg,end) (zero-based half-open)\n     */\n    reg2bins(beg, end) {\n        beg -= 1; // < convert to 1-based closed\n        if (beg < 1) {\n            beg = 1;\n        }\n        if (end > 2 ** 50) {\n            end = 2 ** 34;\n        } // 17 GiB ought to be enough for anybody\n        end -= 1;\n        let l = 0;\n        let t = 0;\n        let s = this.minShift + this.depth * 3;\n        const bins = [];\n        for (; l <= this.depth; s -= 3, t += lshift(1, l * 3), l += 1) {\n            const b = t + rshift(beg, s);\n            const e = t + rshift(end, s);\n            if (e - b + bins.length > this.maxBinNumber) {\n                throw new Error(`query ${beg}-${end} is too large for current binning scheme (shift ${this.minShift}, depth ${this.depth}), try a smaller query or a coarser index binning scheme`);\n            }\n            bins.push([b, e]);\n        }\n        return bins;\n    }\n}\nexports.default = CSI;\n"],"sourceRoot":""}