{"version":3,"sources":["../../../node_modules/@flatten-js/interval-tree/dist/main.esm.js","../../../node_modules/stream-browserify/index.js","../../../node_modules/readable-stream/writable-browser.js","../../../node_modules/readable-stream/duplex-browser.js","../../../node_modules/readable-stream/transform.js","../../../node_modules/readable-stream/passthrough.js","../../../node_modules/@gmod/gtf/dist/util.js","../../../node_modules/@gmod/gtf/dist/index.js","../../../node_modules/@gmod/gtf/dist/api.js","../../../node_modules/@gmod/gtf/dist/parse.js","../../../plugins/gtf/src/util.ts","../../../plugins/gtf/src/GtfAdapter/GtfAdapter.ts"],"names":["Interval","low","high","this","clone","other_interval","not_intersect","undefined","Math","min","max","interval1","interval2","merge","val1","val2","Node","key","value","left","right","parent","color","item","Array","length","Number","isNaN","other_node","less_than","value_less_than","equal_to","value_equal","intersect","comparable_max","constructor","search_node","comparable_less_than","IntervalTree","root","nil_node","count","tree_walk","res","node","push","output","insert_node","tree_insert","recalc_max","tree_search","delete_node","tree_delete","interval","outputMapperFn","resp_nodes","tree_search_interval","map","tree_find_any_interval","visitor","callback","tree","insert","node_current","update_max","current_node","parent_node","insert_fixup","uncle_node","rotate_left","rotate_right","cut_node","fix_node","tree_successor","copy_data","delete_fixup","brother_node","not_intersect_left_subtree","not_intersect_right_subtree","found","node_min","node_max","node_successor","local_minimum","x","y","action","height","heightLeft","testBlackHeightProperty","Error","module","exports","Stream","EE","require","EventEmitter","call","inherits","Readable","Writable","Duplex","Transform","PassThrough","prototype","pipe","dest","options","source","ondata","chunk","writable","write","pause","ondrain","readable","resume","on","_isStdio","end","onend","onclose","didOnEnd","destroy","onerror","er","cleanup","listenerCount","removeListener","emit","_slicedToArray","arr","i","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","o","minLen","n","Object","toString","slice","name","test","len","arr2","defineProperty","escape","escapeColumn","formatAttributes","formatComment","formatDirective","formatFeature","formatItem","itemOrItems","formatSingleItem","attributes","directive","sequence","formatSequence","comment","parseAttributes","parseDirective","line","match","exec","contents","parsed","replace","_contents$split2","split","seqId","contentStart","contentEnd","seq_id","start","_contents$split4","buildname","parseFeature","f","a","unescape","fieldNames","parseInt","score","parseFloat","strand","s","String","_","seq","fromCharCode","_escape","regex","ch","hex","charCodeAt","toUpperCase","concat","attrString","attrs","forEach","attribute","_arec","attr","trim","arec","apply","attrOrder","keys","tag","valstring","val","hasOwnProperty","values","join","translateStrand","_formatSingleFeature","seenFeature","fields","formattedString","_formatFeature","feature","strings","multiSlot","featureOrFeatures","str","id","description","_typeof","obj","default","_api","util","nodeInterop","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","set","_interopRequireWildcard","WeakMap","cacheBabelInterop","cacheNodeInterop","_default","parseStream","parseFile","parseStringSync","formatSync","formatStream","formatFile","stream","filename","arguments","newOptions","assign","insertVersionDirective","Promise","resolve","reject","FormattingTransform","fs","createWriteStream","encoding","items","other","sequences","_util","createReadStream","inputOptions","_processParseOptions","bind","parser","_parse","featureCallback","parseFeatures","directiveCallback","parseDirectives","commentCallback","parseComments","sequenceCallback","parseSequences","bufferSize","Infinity","errorCallback","addLine","finish","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","getPrototypeOf","Decoder","StringDecoder","_callback","process","nextTick","additionalDefaults","out","parseAll","GTFTransform","_Transform","_super","_this","objectMode","decoder","textBuffer","data","buffer","_this2","pieces","pop","maxLineLength","piece","_addLine","_nextText","_Transform2","_super2","_this3","linesSinceLastSyncMark","minLinesBetweenSyncMarks","minSyncLines","haveWeEmittedData","fastaMode","GTF","containerAttributes","Parent","Derives_from","FASTAParser","seqCallback","currentSequence","defMatch","_flush","Parser","args","nullFunc","endCallback","_underConstructionTopLevel","_underConstructionById","_completedReferences","_underConstructionOrphans","eof","lineNumber","fastaParser","_bufferLine","_match","hashsigns","_emitAllUnderConstructionFeatures","_emitItem","errLine","additionalItemCount","_unbufferItem","ID","child_features","c","derived_features","d","shift","filter","entry","JSON","stringify","featureLine","featureNumber","isTranscript","featureType","ids","transcript_id","parents","derives","parse","createTranscript","existing","_enforceBufferSizeLimit","_resolveReferencesTo","_resolveReferencesFrom","references","attrname","pname","toLowerCase","loc","_loc$pname","message","entries","_ref","_ref2","toId","parentFeature","childFeature","otherFeature","slot1","slot2","subObj","returnVal","postSet","location","featureData","phase","frame","refName","seq_name","defaultFields","b","includes","formattedAttr","type","subfeatures","childLocs","childLoc","flat","_linehash","isGzip","buf","gtfFeatures","openLocation","readConfObject","config","pluginManager","readFile","unzip","TextDecoder","fatal","decode","feats","gtf","intervalTree","SimpleFeature","reduce","acc","loadDataP","catch","loadData","query","opts","ObservableCreate","observer","search","complete","error","signal","BaseFeatureDataAdapter"],"mappings":"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","file":"18.aa3f117980c15500c977.worker.js","sourcesContent":["/**\r\n * Created by Alex Bol on 4/1/2017.\r\n */\r\n\r\n/**\r\n * Interval is a pair of numbers or a pair of any comparable objects on which may be defined predicates\r\n * *equal*, *less* and method *max(p1, p1)* that returns maximum in a pair.\r\n * When interval is an object rather than pair of numbers, this object should have properties *low*, *high*, *max*\r\n * and implement methods *less_than(), equal_to(), intersect(), not_intersect(), clone(), output()*.\r\n * Two static methods *comparable_max(), comparable_less_than()* define how to compare values in pair. <br/>\r\n * This interface is described in typescript definition file *index.d.ts*\r\n *\r\n * Axis aligned rectangle is an example of such interval.\r\n * We may look at rectangle as an interval between its low left and top right corners.\r\n * See **Box** class in [flatten-js](https://github.com/alexbol99/flatten-js) library as the example\r\n * of Interval interface implementation\r\n * @type {Interval}\r\n */\r\nconst Interval = class Interval {\r\n    /**\r\n     * Accept two comparable values and creates new instance of interval\r\n     * Predicate Interval.comparable_less(low, high) supposed to return true on these values\r\n     * @param low\r\n     * @param high\r\n     */\r\n    constructor(low, high) {\r\n        this.low = low;\r\n        this.high = high;\r\n    }\r\n\r\n    /**\r\n     * Clone interval\r\n     * @returns {Interval}\r\n     */\r\n    clone() {\r\n        return new Interval(this.low, this.high);\r\n    }\r\n\r\n    /**\r\n     * Propery max returns clone of this interval\r\n     * @returns {Interval}\r\n     */\r\n    get max() {\r\n        return this.clone();   // this.high;\r\n    }\r\n\r\n    /**\r\n     * Predicate returns true is this interval less than other interval\r\n     * @param other_interval\r\n     * @returns {boolean}\r\n     */\r\n    less_than(other_interval) {\r\n        return this.low < other_interval.low ||\r\n            this.low == other_interval.low && this.high < other_interval.high;\r\n    }\r\n\r\n    /**\r\n     * Predicate returns true is this interval equals to other interval\r\n     * @param other_interval\r\n     * @returns {boolean}\r\n     */\r\n    equal_to(other_interval) {\r\n        return this.low == other_interval.low && this.high == other_interval.high;\r\n    }\r\n\r\n    /**\r\n     * Predicate returns true if this interval intersects other interval\r\n     * @param other_interval\r\n     * @returns {boolean}\r\n     */\r\n    intersect(other_interval) {\r\n        return !this.not_intersect(other_interval);\r\n    }\r\n\r\n    /**\r\n     * Predicate returns true if this interval does not intersect other interval\r\n     * @param other_interval\r\n     * @returns {boolean}\r\n     */\r\n    not_intersect(other_interval) {\r\n        return (this.high < other_interval.low || other_interval.high < this.low);\r\n    }\r\n\r\n    /**\r\n     * Returns new interval merged with other interval\r\n     * @param {Interval} interval - Other interval to merge with\r\n     * @returns {Interval}\r\n     */\r\n    merge(other_interval) {\r\n        return new Interval(\r\n            this.low === undefined ? other_interval.low : Math.min(this.low, other_interval.low),\r\n            this.high === undefined ? other_interval.high : Math.max(this.high, other_interval.high)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns how key should return\r\n     */\r\n    output() {\r\n        return [this.low, this.high];\r\n    }\r\n\r\n    /**\r\n     * Function returns maximum between two comparable values\r\n     * @param interval1\r\n     * @param interval2\r\n     * @returns {Interval}\r\n     */\r\n    static comparable_max(interval1, interval2) {\r\n        return interval1.merge(interval2);\r\n    }\r\n\r\n    /**\r\n     * Predicate returns true if first value less than second value\r\n     * @param val1\r\n     * @param val2\r\n     * @returns {boolean}\r\n     */\r\n    static comparable_less_than(val1, val2 ) {\r\n        return val1 < val2;\r\n    }\r\n};\n\n/**\r\n * Created by Alex Bol on 3/28/2017.\r\n */\r\n\r\n// module.exports = {\r\n//     RB_TREE_COLOR_RED: 0,\r\n//     RB_TREE_COLOR_BLACK: 1\r\n// };\r\n\r\nconst RB_TREE_COLOR_RED = 0;\r\nconst RB_TREE_COLOR_BLACK = 1;\n\n/**\r\n * Created by Alex Bol on 4/1/2017.\r\n */\r\n\r\nclass Node {\r\n    constructor(key = undefined, value = undefined,\r\n                left = null, right = null, parent = null, color = RB_TREE_COLOR_BLACK) {\r\n        this.left = left;                     // reference to left child node\r\n        this.right = right;                   // reference to right child node\r\n        this.parent = parent;                 // reference to parent node\r\n        this.color = color;\r\n\r\n        this.item = {key: key, value: value};   // key is supposed to be instance of Interval\r\n\r\n        /* If not, this should by an array of two numbers */\r\n        if (key && key instanceof Array && key.length == 2) {\r\n            if (!Number.isNaN(key[0]) && !Number.isNaN(key[1])) {\r\n                this.item.key = new Interval(Math.min(key[0], key[1]), Math.max(key[0], key[1]));\r\n            }\r\n        }\r\n\r\n        this.max = this.item.key ? this.item.key.max : undefined;\r\n    }\r\n\r\n    isNil() {\r\n        return (this.item.key === undefined && this.item.value === undefined &&\r\n            this.left === null && this.right === null && this.color === RB_TREE_COLOR_BLACK);\r\n    }\r\n\r\n    less_than(other_node) {\r\n        // if tree stores only keys\r\n        if (this.item.value === this.item.key && other_node.item.value === other_node.item.key) {\r\n            return this.item.key.less_than(other_node.item.key);\r\n        }\r\n        else {    // if tree stores keys and values\r\n            let value_less_than = this.item.value && other_node.item.value && this.item.value.less_than ? this.item.value.less_than(other_node.item.value) :\r\n                this.item.value < other_node.item.value;\r\n            return this.item.key.less_than(other_node.item.key) ||\r\n                this.item.key.equal_to((other_node.item.key)) && value_less_than;\r\n        }\r\n\r\n        // if (this.item.value && other_node.item.value) {\r\n        //     let item_less_than = this.item.value.less_than ? this.item.value.less_than(other_node.item.value) :\r\n        //         this.item.value < other_node.item.value;\r\n        //     return this.item.key.less_than(other_node.item.key) ||\r\n        //         this.item.key.equal_to((other_node.item.key)) && item_less_than;\r\n        // }\r\n        // else {\r\n        //     return this.item.key.less_than(other_node.item.key);\r\n        // }\r\n    }\r\n\r\n    equal_to(other_node) {\r\n        // if tree stores only keys\r\n        if (this.item.value === this.item.key && other_node.item.value === other_node.item.key) {\r\n            return this.item.key.equal_to(other_node.item.key);\r\n        }\r\n        else {    // if tree stores keys and values\r\n            let value_equal = this.item.value && other_node.item.value && this.item.value.equal_to ? this.item.value.equal_to(other_node.item.value) :\r\n                this.item.value == other_node.item.value;\r\n            return this.item.key.equal_to(other_node.item.key) && value_equal;\r\n        }\r\n\r\n        // let value_equal = true;\r\n        // if (this.item.value && other_node.item.value) {\r\n        //     value_equal = this.item.value.equal_to ? this.item.value.equal_to(other_node.item.value) :\r\n        //         this.item.value == other_node.item.value;\r\n        // }\r\n        // return this.item.key.equal_to(other_node.item.key) && value_equal;\r\n    }\r\n\r\n    intersect(other_node) {\r\n        return this.item.key.intersect(other_node.item.key);\r\n    }\r\n\r\n    copy_data(other_node) {\r\n        this.item.key = other_node.item.key;\r\n        this.item.value = other_node.item.value;\r\n    }\r\n\r\n    update_max() {\r\n        // use key (Interval) max property instead of key.high\r\n        this.max = this.item.key ? this.item.key.max : undefined;\r\n        if (this.right && this.right.max) {\r\n            const comparable_max = this.item.key.constructor.comparable_max;  // static method\r\n            this.max = comparable_max(this.max, this.right.max);\r\n        }\r\n        if (this.left && this.left.max) {\r\n            const comparable_max = this.item.key.constructor.comparable_max;  // static method\r\n            this.max = comparable_max(this.max, this.left.max);\r\n        }\r\n    }\r\n\r\n    // Other_node does not intersect any node of left subtree, if this.left.max < other_node.item.key.low\r\n    not_intersect_left_subtree(search_node) {\r\n        const comparable_less_than = this.item.key.constructor.comparable_less_than;  // static method\r\n        let high = this.left.max.high !== undefined ? this.left.max.high : this.left.max;\r\n        return comparable_less_than(high, search_node.item.key.low);\r\n    }\r\n\r\n    // Other_node does not intersect right subtree if other_node.item.key.high < this.right.key.low\r\n    not_intersect_right_subtree(search_node) {\r\n        const comparable_less_than = this.item.key.constructor.comparable_less_than;  // static method\r\n        let low = this.right.max.low !== undefined ? this.right.max.low : this.right.item.key.low;\r\n        return comparable_less_than(search_node.item.key.high, low);\r\n    }\r\n}\n\n/**\r\n * Created by Alex Bol on 3/31/2017.\r\n */\r\n\r\n// const nil_node = new Node();\r\n\r\n/**\r\n * Implementation of interval binary search tree <br/>\r\n * Interval tree stores items which are couples of {key:interval, value: value} <br/>\r\n * Interval is an object with high and low properties or simply pair [low,high] of numeric values <br />\r\n * @type {IntervalTree}\r\n */\r\nclass IntervalTree {\r\n    /**\r\n     * Construct new empty instance of IntervalTree\r\n     */\r\n    constructor() {\r\n        this.root = null;\r\n        this.nil_node = new Node();\r\n    }\r\n\r\n    /**\r\n     * Returns number of items stored in the interval tree\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        let count = 0;\r\n        this.tree_walk(this.root, () => count++);\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * Returns array of sorted keys in the ascending order\r\n     * @returns {Array}\r\n     */\r\n    get keys() {\r\n        let res = [];\r\n        this.tree_walk(this.root, (node) => res.push(\r\n            node.item.key.output ? node.item.key.output() : node.item.key\r\n        ));\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * Return array of values in the ascending keys order\r\n     * @returns {Array}\r\n     */\r\n    get values() {\r\n        let res = [];\r\n        this.tree_walk(this.root, (node) => res.push(node.item.value));\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * Returns array of items (<key,value> pairs) in the ascended keys order\r\n     * @returns {Array}\r\n     */\r\n    get items() {\r\n        let res = [];\r\n        this.tree_walk(this.root, (node) => res.push({\r\n            key: node.item.key.output ? node.item.key.output() : node.item.key,\r\n            value: node.item.value\r\n        }));\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * Returns true if tree is empty\r\n     * @returns {boolean}\r\n     */\r\n    isEmpty() {\r\n        return (this.root == null || this.root == this.nil_node);\r\n    }\r\n\r\n    /**\r\n     * Insert new item into interval tree\r\n     * @param {Interval} key - interval object or array of two numbers [low, high]\r\n     * @param {any} value - value representing any object (optional)\r\n     * @returns {Node} returns reference to inserted node as an object {key:interval, value: value}\r\n     */\r\n    insert(key, value = key) {\r\n        if (key === undefined) return;\r\n        let insert_node = new Node(key, value, this.nil_node, this.nil_node, null, RB_TREE_COLOR_RED);\r\n        this.tree_insert(insert_node);\r\n        this.recalc_max(insert_node);\r\n        return insert_node;\r\n    }\r\n\r\n    /**\r\n     * Returns true if item {key,value} exist in the tree\r\n     * @param {Interval} key - interval correspondent to keys stored in the tree\r\n     * @param {any} value - value object to be checked\r\n     * @returns {boolean} true if item {key, value} exist in the tree, false otherwise\r\n     */\r\n    exist(key, value = key) {\r\n        let search_node = new Node(key, value);\r\n        return this.tree_search(this.root, search_node) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Remove entry {key, value} from the tree\r\n     * @param {Interval} key - interval correspondent to keys stored in the tree\r\n     * @param {any} value - value object\r\n     * @returns {boolean} true if item {key, value} deleted, false if not found\r\n     */\r\n    remove(key, value = key) {\r\n        let search_node = new Node(key, value);\r\n        let delete_node = this.tree_search(this.root, search_node);\r\n        if (delete_node) {\r\n            this.tree_delete(delete_node);\r\n        }\r\n        return delete_node;\r\n    }\r\n\r\n    /**\r\n     * Returns array of entry values which keys intersect with given interval <br/>\r\n     * If no values stored in the tree, returns array of keys which intersect given interval\r\n     * @param {Interval} interval - search interval, or tuple [low, high]\r\n     * @param outputMapperFn(value,key) - optional function that maps (value, key) to custom output\r\n     * @returns {Array}\r\n     */\r\n    search(interval, outputMapperFn = (value, key) => value === key ? key.output() : value) {\r\n        let search_node = new Node(interval);\r\n        let resp_nodes = [];\r\n        this.tree_search_interval(this.root, search_node, resp_nodes);\r\n        return resp_nodes.map(node => outputMapperFn(node.item.value, node.item.key))\r\n    }\r\n\r\n    /**\r\n     * Returns true if intersection between given and any interval stored in the tree found\r\n     * @param {Interval} interval - search interval or tuple [low, high]\r\n     * @returns {boolean}\r\n     */\r\n    intersect_any(interval) {\r\n        let search_node = new Node(interval);\r\n        let found = this.tree_find_any_interval(this.root, search_node);\r\n        return found;\r\n    }\r\n\r\n    /**\r\n     * Tree visitor. For each node implement a callback function. <br/>\r\n     * Method calls a callback function with two parameters (key, value)\r\n     * @param visitor(key,value) - function to be called for each tree item\r\n     */\r\n    forEach(visitor) {\r\n        this.tree_walk(this.root, (node) => visitor(node.item.key, node.item.value));\r\n    }\r\n\r\n    /** Value Mapper. Walk through every node and map node value to another value\r\n    * @param callback(value,key) - function to be called for each tree item\r\n    */\r\n    map(callback) {\r\n        const tree = new IntervalTree();\r\n        this.tree_walk(this.root, (node) => tree.insert(node.item.key, callback(node.item.value, node.item.key)));\r\n        return tree;\r\n    }\r\n\r\n    recalc_max(node) {\r\n        let node_current = node;\r\n        while (node_current.parent != null) {\r\n            node_current.parent.update_max();\r\n            node_current = node_current.parent;\r\n        }\r\n    }\r\n\r\n    tree_insert(insert_node) {\r\n        let current_node = this.root;\r\n        let parent_node = null;\r\n\r\n        if (this.root == null || this.root == this.nil_node) {\r\n            this.root = insert_node;\r\n        }\r\n        else {\r\n            while (current_node != this.nil_node) {\r\n                parent_node = current_node;\r\n                if (insert_node.less_than(current_node)) {\r\n                    current_node = current_node.left;\r\n                }\r\n                else {\r\n                    current_node = current_node.right;\r\n                }\r\n            }\r\n\r\n            insert_node.parent = parent_node;\r\n\r\n            if (insert_node.less_than(parent_node)) {\r\n                parent_node.left = insert_node;\r\n            }\r\n            else {\r\n                parent_node.right = insert_node;\r\n            }\r\n        }\r\n\r\n        this.insert_fixup(insert_node);\r\n    }\r\n\r\n// After insertion insert_node may have red-colored parent, and this is a single possible violation\r\n// Go upwords to the root and re-color until violation will be resolved\r\n    insert_fixup(insert_node) {\r\n        let current_node;\r\n        let uncle_node;\r\n\r\n        current_node = insert_node;\r\n        while (current_node != this.root && current_node.parent.color == RB_TREE_COLOR_RED) {\r\n            if (current_node.parent == current_node.parent.parent.left) {   // parent is left child of grandfather\r\n                uncle_node = current_node.parent.parent.right;              // right brother of parent\r\n                if (uncle_node.color == RB_TREE_COLOR_RED) {             // Case 1. Uncle is red\r\n                    // re-color father and uncle into black\r\n                    current_node.parent.color = RB_TREE_COLOR_BLACK;\r\n                    uncle_node.color = RB_TREE_COLOR_BLACK;\r\n                    current_node.parent.parent.color = RB_TREE_COLOR_RED;\r\n                    current_node = current_node.parent.parent;\r\n                }\r\n                else {                                                    // Case 2 & 3. Uncle is black\r\n                    if (current_node == current_node.parent.right) {     // Case 2. Current if right child\r\n                        // This case is transformed into Case 3.\r\n                        current_node = current_node.parent;\r\n                        this.rotate_left(current_node);\r\n                    }\r\n                    current_node.parent.color = RB_TREE_COLOR_BLACK;    // Case 3. Current is left child.\r\n                    // Re-color father and grandfather, rotate grandfather right\r\n                    current_node.parent.parent.color = RB_TREE_COLOR_RED;\r\n                    this.rotate_right(current_node.parent.parent);\r\n                }\r\n            }\r\n            else {                                                         // parent is right child of grandfather\r\n                uncle_node = current_node.parent.parent.left;              // left brother of parent\r\n                if (uncle_node.color == RB_TREE_COLOR_RED) {             // Case 4. Uncle is red\r\n                    // re-color father and uncle into black\r\n                    current_node.parent.color = RB_TREE_COLOR_BLACK;\r\n                    uncle_node.color = RB_TREE_COLOR_BLACK;\r\n                    current_node.parent.parent.color = RB_TREE_COLOR_RED;\r\n                    current_node = current_node.parent.parent;\r\n                }\r\n                else {\r\n                    if (current_node == current_node.parent.left) {             // Case 5. Current is left child\r\n                        // Transform into case 6\r\n                        current_node = current_node.parent;\r\n                        this.rotate_right(current_node);\r\n                    }\r\n                    current_node.parent.color = RB_TREE_COLOR_BLACK;    // Case 6. Current is right child.\r\n                    // Re-color father and grandfather, rotate grandfather left\r\n                    current_node.parent.parent.color = RB_TREE_COLOR_RED;\r\n                    this.rotate_left(current_node.parent.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.root.color = RB_TREE_COLOR_BLACK;\r\n    }\r\n\r\n    tree_delete(delete_node) {\r\n        let cut_node;   // node to be cut - either delete_node or successor_node  (\"y\" from 14.4)\r\n        let fix_node;   // node to fix rb tree property   (\"x\" from 14.4)\r\n\r\n        if (delete_node.left == this.nil_node || delete_node.right == this.nil_node) {  // delete_node has less then 2 children\r\n            cut_node = delete_node;\r\n        }\r\n        else {                                                    // delete_node has 2 children\r\n            cut_node = this.tree_successor(delete_node);\r\n        }\r\n\r\n        // fix_node if single child of cut_node\r\n        if (cut_node.left != this.nil_node) {\r\n            fix_node = cut_node.left;\r\n        }\r\n        else {\r\n            fix_node = cut_node.right;\r\n        }\r\n\r\n        // remove cut_node from parent\r\n        /*if (fix_node != this.nil_node) {*/\r\n            fix_node.parent = cut_node.parent;\r\n        /*}*/\r\n\r\n        if (cut_node == this.root) {\r\n            this.root = fix_node;\r\n        }\r\n        else {\r\n            if (cut_node == cut_node.parent.left) {\r\n                cut_node.parent.left = fix_node;\r\n            }\r\n            else {\r\n                cut_node.parent.right = fix_node;\r\n            }\r\n            cut_node.parent.update_max();        // update max property of the parent\r\n        }\r\n\r\n        this.recalc_max(fix_node);              // update max property upward from fix_node to root\r\n\r\n        // COPY DATA !!!\r\n        // Delete_node becomes cut_node, it means that we cannot hold reference\r\n        // to node in outer structure and we will have to delete by key, additional search need\r\n        if (cut_node != delete_node) {\r\n            delete_node.copy_data(cut_node);\r\n            delete_node.update_max();           // update max property of the cut node at the new place\r\n            this.recalc_max(delete_node);       // update max property upward from delete_node to root\r\n        }\r\n\r\n        if (/*fix_node != this.nil_node && */cut_node.color == RB_TREE_COLOR_BLACK) {\r\n            this.delete_fixup(fix_node);\r\n        }\r\n    }\r\n\r\n    delete_fixup(fix_node) {\r\n        let current_node = fix_node;\r\n        let brother_node;\r\n\r\n        while (current_node != this.root && current_node.parent != null && current_node.color == RB_TREE_COLOR_BLACK) {\r\n            if (current_node == current_node.parent.left) {          // fix node is left child\r\n                brother_node = current_node.parent.right;\r\n                if (brother_node.color == RB_TREE_COLOR_RED) {   // Case 1. Brother is red\r\n                    brother_node.color = RB_TREE_COLOR_BLACK;         // re-color brother\r\n                    current_node.parent.color = RB_TREE_COLOR_RED;    // re-color father\r\n                    this.rotate_left(current_node.parent);\r\n                    brother_node = current_node.parent.right;                      // update brother\r\n                }\r\n                // Derive to cases 2..4: brother is black\r\n                if (brother_node.left.color == RB_TREE_COLOR_BLACK &&\r\n                    brother_node.right.color == RB_TREE_COLOR_BLACK) {  // case 2: both nephews black\r\n                    brother_node.color = RB_TREE_COLOR_RED;              // re-color brother\r\n                    current_node = current_node.parent;                  // continue iteration\r\n                }\r\n                else {\r\n                    if (brother_node.right.color == RB_TREE_COLOR_BLACK) {   // case 3: left nephew red, right nephew black\r\n                        brother_node.color = RB_TREE_COLOR_RED;          // re-color brother\r\n                        brother_node.left.color = RB_TREE_COLOR_BLACK;   // re-color nephew\r\n                        this.rotate_right(brother_node);\r\n                        brother_node = current_node.parent.right;                     // update brother\r\n                        // Derive to case 4: left nephew black, right nephew red\r\n                    }\r\n                    // case 4: left nephew black, right nephew red\r\n                    brother_node.color = current_node.parent.color;\r\n                    current_node.parent.color = RB_TREE_COLOR_BLACK;\r\n                    brother_node.right.color = RB_TREE_COLOR_BLACK;\r\n                    this.rotate_left(current_node.parent);\r\n                    current_node = this.root;                         // exit from loop\r\n                }\r\n            }\r\n            else {                                             // fix node is right child\r\n                brother_node = current_node.parent.left;\r\n                if (brother_node.color == RB_TREE_COLOR_RED) {   // Case 1. Brother is red\r\n                    brother_node.color = RB_TREE_COLOR_BLACK;         // re-color brother\r\n                    current_node.parent.color = RB_TREE_COLOR_RED;    // re-color father\r\n                    this.rotate_right(current_node.parent);\r\n                    brother_node = current_node.parent.left;                        // update brother\r\n                }\r\n                // Go to cases 2..4\r\n                if (brother_node.left.color == RB_TREE_COLOR_BLACK &&\r\n                    brother_node.right.color == RB_TREE_COLOR_BLACK) {   // case 2\r\n                    brother_node.color = RB_TREE_COLOR_RED;             // re-color brother\r\n                    current_node = current_node.parent;                              // continue iteration\r\n                }\r\n                else {\r\n                    if (brother_node.left.color == RB_TREE_COLOR_BLACK) {  // case 3: right nephew red, left nephew black\r\n                        brother_node.color = RB_TREE_COLOR_RED;            // re-color brother\r\n                        brother_node.right.color = RB_TREE_COLOR_BLACK;    // re-color nephew\r\n                        this.rotate_left(brother_node);\r\n                        brother_node = current_node.parent.left;                        // update brother\r\n                        // Derive to case 4: right nephew black, left nephew red\r\n                    }\r\n                    // case 4: right nephew black, left nephew red\r\n                    brother_node.color = current_node.parent.color;\r\n                    current_node.parent.color = RB_TREE_COLOR_BLACK;\r\n                    brother_node.left.color = RB_TREE_COLOR_BLACK;\r\n                    this.rotate_right(current_node.parent);\r\n                    current_node = this.root;                               // force exit from loop\r\n                }\r\n            }\r\n        }\r\n\r\n        current_node.color = RB_TREE_COLOR_BLACK;\r\n    }\r\n\r\n    tree_search(node, search_node) {\r\n        if (node == null || node == this.nil_node)\r\n            return undefined;\r\n\r\n        if (search_node.equal_to(node)) {\r\n            return node;\r\n        }\r\n        if (search_node.less_than(node)) {\r\n            return this.tree_search(node.left, search_node);\r\n        }\r\n        else {\r\n            return this.tree_search(node.right, search_node);\r\n        }\r\n    }\r\n\r\n    // Original search_interval method; container res support push() insertion\r\n    // Search all intervals intersecting given one\r\n    tree_search_interval(node, search_node, res) {\r\n        if (node != null && node != this.nil_node) {\r\n            // if (node->left != this.nil_node && node->left->max >= low) {\r\n            if (node.left != this.nil_node && !node.not_intersect_left_subtree(search_node)) {\r\n                this.tree_search_interval(node.left, search_node, res);\r\n            }\r\n            // if (low <= node->high && node->low <= high) {\r\n            if (node.intersect(search_node)) {\r\n                res.push(node);\r\n            }\r\n            // if (node->right != this.nil_node && node->low <= high) {\r\n            if (node.right != this.nil_node && !node.not_intersect_right_subtree(search_node)) {\r\n                this.tree_search_interval(node.right, search_node, res);\r\n            }\r\n        }\r\n    }\r\n\r\n    tree_find_any_interval(node, search_node) {\r\n        let found = false;\r\n        if (node != null && node != this.nil_node) {\r\n            // if (node->left != this.nil_node && node->left->max >= low) {\r\n            if (node.left != this.nil_node && !node.not_intersect_left_subtree(search_node)) {\r\n                found = this.tree_find_any_interval(node.left, search_node);\r\n            }\r\n            // if (low <= node->high && node->low <= high) {\r\n            if (!found) {\r\n                found = node.intersect(search_node);\r\n            }\r\n            // if (node->right != this.nil_node && node->low <= high) {\r\n            if (!found && node.right != this.nil_node && !node.not_intersect_right_subtree(search_node)) {\r\n                found = this.tree_find_any_interval(node.right, search_node);\r\n            }\r\n        }\r\n        return found;\r\n    }\r\n\r\n    local_minimum(node) {\r\n        let node_min = node;\r\n        while (node_min.left != null && node_min.left != this.nil_node) {\r\n            node_min = node_min.left;\r\n        }\r\n        return node_min;\r\n    }\r\n\r\n    // not in use\r\n    local_maximum(node) {\r\n        let node_max = node;\r\n        while (node_max.right != null && node_max.right != this.nil_node) {\r\n            node_max = node_max.right;\r\n        }\r\n        return node_max;\r\n    }\r\n\r\n    tree_successor(node) {\r\n        let node_successor;\r\n        let current_node;\r\n        let parent_node;\r\n\r\n        if (node.right != this.nil_node) {\r\n            node_successor = this.local_minimum(node.right);\r\n        }\r\n        else {\r\n            current_node = node;\r\n            parent_node = node.parent;\r\n            while (parent_node != null && parent_node.right == current_node) {\r\n                current_node = parent_node;\r\n                parent_node = parent_node.parent;\r\n            }\r\n            node_successor = parent_node;\r\n        }\r\n        return node_successor;\r\n    }\r\n\r\n    //           |            right-rotate(T,y)       |\r\n    //           y            ---------------.       x\r\n    //          / \\                                  / \\\r\n    //         x   c          left-rotate(T,x)      a   y\r\n    //        / \\             <---------------         / \\\r\n    //       a   b                                    b   c\r\n\r\n    rotate_left(x) {\r\n        let y = x.right;\r\n\r\n        x.right = y.left;           // b goes to x.right\r\n\r\n        if (y.left != this.nil_node) {\r\n            y.left.parent = x;     // x becomes parent of b\r\n        }\r\n        y.parent = x.parent;       // move parent\r\n\r\n        if (x == this.root) {\r\n            this.root = y;           // y becomes root\r\n        }\r\n        else {                        // y becomes child of x.parent\r\n            if (x == x.parent.left) {\r\n                x.parent.left = y;\r\n            }\r\n            else {\r\n                x.parent.right = y;\r\n            }\r\n        }\r\n        y.left = x;                 // x becomes left child of y\r\n        x.parent = y;               // and y becomes parent of x\r\n\r\n        if (x != null && x != this.nil_node) {\r\n            x.update_max();\r\n        }\r\n\r\n        y = x.parent;\r\n        if (y != null && y != this.nil_node) {\r\n            y.update_max();\r\n        }\r\n    }\r\n\r\n    rotate_right(y) {\r\n        let x = y.left;\r\n\r\n        y.left = x.right;           // b goes to y.left\r\n\r\n        if (x.right != this.nil_node) {\r\n            x.right.parent = y;        // y becomes parent of b\r\n        }\r\n        x.parent = y.parent;          // move parent\r\n\r\n        if (y == this.root) {        // x becomes root\r\n            this.root = x;\r\n        }\r\n        else {                        // y becomes child of x.parent\r\n            if (y == y.parent.left) {\r\n                y.parent.left = x;\r\n            }\r\n            else {\r\n                y.parent.right = x;\r\n            }\r\n        }\r\n        x.right = y;                 // y becomes right child of x\r\n        y.parent = x;               // and x becomes parent of y\r\n\r\n        if (y != null && y != this.nil_node) {\r\n            y.update_max();\r\n        }\r\n\r\n        x = y.parent;\r\n        if (x != null && x != this.nil_node) {\r\n            x.update_max();\r\n        }\r\n    }\r\n\r\n    tree_walk(node, action) {\r\n        if (node != null && node != this.nil_node) {\r\n            this.tree_walk(node.left, action);\r\n            // arr.push(node.toArray());\r\n            action(node);\r\n            this.tree_walk(node.right, action);\r\n        }\r\n    }\r\n\r\n    /* Return true if all red nodes have exactly two black child nodes */\r\n    testRedBlackProperty() {\r\n        let res = true;\r\n        this.tree_walk(this.root, function (node) {\r\n            if (node.color == RB_TREE_COLOR_RED) {\r\n                if (!(node.left.color == RB_TREE_COLOR_BLACK && node.right.color == RB_TREE_COLOR_BLACK)) {\r\n                    res = false;\r\n                }\r\n            }\r\n        });\r\n        return res;\r\n    }\r\n\r\n    /* Throw error if not every path from root to bottom has same black height */\r\n    testBlackHeightProperty(node) {\r\n        let height = 0;\r\n        let heightLeft = 0;\r\n        let heightRight = 0;\r\n        if (node.color == RB_TREE_COLOR_BLACK) {\r\n            height++;\r\n        }\r\n        if (node.left != this.nil_node) {\r\n            heightLeft = this.testBlackHeightProperty(node.left);\r\n        }\r\n        else {\r\n            heightLeft = 1;\r\n        }\r\n        if (node.right != this.nil_node) {\r\n            heightRight = this.testBlackHeightProperty(node.right);\r\n        }\r\n        else {\r\n            heightRight = 1;\r\n        }\r\n        if (heightLeft != heightRight) {\r\n            throw new Error('Red-black height property violated');\r\n        }\r\n        height += heightLeft;\r\n        return height;\r\n    };\r\n}\n\nexport default IntervalTree;\nexport { Node, Interval };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.escape = escape;\nexports.escapeColumn = escapeColumn;\nexports.formatAttributes = formatAttributes;\nexports.formatComment = formatComment;\nexports.formatDirective = formatDirective;\nexports.formatFeature = formatFeature;\nexports.formatItem = formatItem;\nexports.formatSequence = formatSequence;\nexports.parseAttributes = parseAttributes;\nexports.parseDirective = parseDirective;\nexports.parseFeature = parseFeature;\nexports.unescape = unescape;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/** @module util */\n// Forks @gmod/gff-js and adapts it to parse and format GTF.\nvar fieldNames = ['seq_name', 'source', 'featureType', 'start', 'end', 'score', 'strand', 'frame', 'attributes']; // TODO: check about enconding/escaping in gtf 9th column\n\n/**\n * Unescape a string/text value used in a GTF attribute.\n * Textual attributes should be surrounded by double quotes\n * source info:\n * https://mblab.wustl.edu/GTF22.html\n * https://en.wikipedia.org/wiki/Gene_transfer_format\n *\n * @param {String} s\n * @returns {String}\n */\n\nfunction unescape(s) {\n  if (s === null) {\n    return null;\n  }\n\n  return String(s).replace(/%([0-9A-Fa-f]{2})/g, function (_, seq) {\n    return String.fromCharCode(parseInt(seq, 16));\n  });\n}\n/**\n * Escape a value for use in a GTF attribute value.\n *\n * @param {String} s\n * @returns {String}\n */\n\n\nfunction _escape(regex, s) {\n  return String(s).replace(regex, function (ch) {\n    var hex = ch.charCodeAt(0).toString(16).toUpperCase(); // lol, apparently there's no native function for fixed-width hex output\n\n    if (hex.length < 2) hex = \"0\".concat(hex);\n    return \"%\".concat(hex);\n  });\n}\n\nfunction escape(s) {\n  // eslint-disable-next-line no-control-regex\n  return _escape(/[\\n;\\r\\t=%&,\\x00-\\x1f\\x7f-\\xff]/g, s);\n}\n/**\n * Escape a value for use in a GTF column value.\n *\n * @param {String} s\n * @returns {String}\n */\n\n\nfunction escapeColumn(s) {\n  // eslint-disable-next-line no-control-regex\n  return _escape(/[\\n\\r\\t%\\x00-\\x1f\\x7f-\\xff]/g, s);\n}\n/**\n * Parse the 9th column (attributes) of a GTF feature line.\n *\n * @param {String} attrString\n * @returns {Object}\n */\n\n\nfunction parseAttributes(attrString) {\n  if (!(attrString && attrString.length) || attrString === '.') return {};\n  var attrs = {};\n  attrString.replace(/\\r?\\n$/, '').slice(0, -1) // need to remove the last semicolon in the attributes\n  .split(';').forEach(function (attribute) {\n    var _arec;\n\n    if (!attribute) return;\n    var attr = attribute.trim().split(' ');\n    if (!(attr[1] && attr[1].length)) return;\n    attr[0] = attr[0].trim();\n    var arec = attrs[attr[0].trim()];\n\n    if (!arec) {\n      arec = [];\n      attrs[attr[0]] = arec;\n    } // arec.push(unescape(attr[1].trim()))\n\n\n    (_arec = arec).push.apply(_arec, _toConsumableArray(attr[1].split(',').map(function (s) {\n      return s.trim();\n    }).map(unescape)));\n  });\n  return attrs;\n}\n/**\n * Parse a GTF feature line.\n *\n * @param {String} line\n * returns the parsed line in an object\n */\n\n\nfunction parseFeature(line) {\n  // assummed that there are no comments at the end of a line\n  // split the line into columns and replace '.' with null in each column\n  var f = line.split('\\t').map(function (a) {\n    return a === '.' ? null : a;\n  }); // unescape only the seq_name, source, and feature columns\n\n  f[0] = unescape(f[0]);\n  f[1] = unescape(f[1]);\n  f[2] = unescape(f[2]);\n  f[8] = parseAttributes(f[8]);\n  var parsed = {};\n\n  for (var i = 0; i < fieldNames.length; i += 1) {\n    parsed[fieldNames[i]] = f[i] === '.' ? null : f[i];\n  }\n\n  if (parsed.start !== null) parsed.start = parseInt(parsed.start, 10);\n  if (parsed.end !== null) parsed.end = parseInt(parsed.end, 10);\n  if (parsed.score !== null) parsed.score = parseFloat(parsed.score, 10);\n  if (parsed.strand != null) parsed.strand = parsed.strand;\n  return parsed;\n}\n/**\n * Parse a GTF directive/comment line.\n *\n * @param {String} line\n * @returns {Object} the information in the directive\n */\n\n\nfunction parseDirective(line) {\n  var match = /^\\s*##\\s*(\\S+)\\s*(.*)/.exec(line); // const match = /^\\s*\\#\\#\\s*(\\S+)\\s*(.*)/.exec(line)\n\n  if (!match) return null; // let [, name, contents] = match\n\n  var name = match[1];\n  var contents = match[2];\n  var parsed = {\n    directive: name\n  };\n\n  if (contents.length) {\n    contents = contents.replace(/\\r?\\n$/, '');\n    parsed.value = contents;\n  } // do a little additional parsing for sequence-region and genome-build directives\n\n\n  if (name === 'sequence-region') {\n    var _contents$split = contents.split(/\\s+/, 3),\n        _contents$split2 = _slicedToArray(_contents$split, 3),\n        seqId = _contents$split2[0],\n        contentStart = _contents$split2[1],\n        contentEnd = _contents$split2[2];\n\n    parsed.seq_id = seqId;\n    parsed.start = contentStart && contentStart.replace(/\\D/g, '');\n    parsed.end = contentEnd && contentEnd.replace(/\\D/g, '');\n  } else if (name === 'genome-build') {\n    var _contents$split3 = contents.split(/\\s+/, 2),\n        _contents$split4 = _slicedToArray(_contents$split3, 2),\n        source = _contents$split4[0],\n        buildname = _contents$split4[1];\n\n    parsed.source = source;\n    parsed.buildname = buildname;\n  }\n\n  return parsed;\n}\n/**\n * Format an attributes object into a string suitable for the 9th column of GTF.\n *\n * @param {Object} attrs\n */\n\n\nfunction formatAttributes(attrs) {\n  var attrOrder = [];\n  Object.keys(attrs).forEach(function (tag) {\n    var val = attrs[tag];\n    var valstring; // eslint-disable-next-line no-prototype-builtins\n\n    if (val.hasOwnProperty('toString')) {\n      valstring = escape(val.toString());\n    } else if (Array.isArray(val.values)) {\n      valstring = val.values.map(escape).join(',');\n    } else if (Array.isArray(val)) {\n      valstring = val.map(escape).join(',');\n    } else {\n      valstring = escape(val);\n    }\n\n    attrOrder.push(\"\".concat(escape(tag), \" \").concat(valstring));\n  });\n  return attrOrder.length ? attrOrder.join('; ').concat(';') : '.';\n}\n\nvar translateStrand = ['-', '.', '+'];\n\nfunction _formatSingleFeature(f, seenFeature) {\n  var attrString = f.attributes === null || f.attributes === undefined ? '.' : formatAttributes(f.attributes);\n  var fields = [];\n\n  for (var i = 0; i < 8; i += 1) {\n    var val = f[fieldNames[i]]; // deserialize strand\n\n    if (i === 6) {\n      fields[i] = val === null || val === undefined ? '.' : translateStrand[val + 1] || val;\n    } else {\n      fields[i] = val === null || val === undefined ? '.' : escapeColumn(String(val));\n    }\n  }\n\n  fields[8] = attrString;\n  var formattedString = \"\".concat(fields.join('\\t'), \"\\n\"); // if we have already output this exact feature, skip it\n\n  if (seenFeature[formattedString]) {\n    return '';\n  } // eslint-disable-next-line no-param-reassign\n\n\n  seenFeature[formattedString] = true;\n  return formattedString;\n}\n\nfunction _formatFeature(feature, seenFeature) {\n  if (Array.isArray(feature)) {\n    return feature.map(function (f) {\n      return _formatFeature(f, seenFeature);\n    }).join('');\n  }\n\n  var strings = [_formatSingleFeature(feature, seenFeature)];\n  ['child_features', 'derived_features'].forEach(function (multiSlot) {\n    if (feature[multiSlot]) {\n      strings.push.apply(strings, _toConsumableArray(feature[multiSlot].map(function (f) {\n        return _formatFeature(f, seenFeature);\n      })));\n    }\n  });\n  return strings.join('');\n}\n/**\n * Format a feature object or array of\n * feature objects into one or more lines of GTF.\n *\n * @param {Object|Array[Object]} featureOrFeatures\n */\n\n\nfunction formatFeature(featureOrFeatures) {\n  var seen = {};\n  return _formatFeature(featureOrFeatures, seen);\n}\n/**\n * Format a directive into a line of GTF.\n *\n * @param {Object} directive\n * @returns {String}\n */\n\n\nfunction formatDirective(directive) {\n  var str = \"##\".concat(directive.directive);\n  if (directive.value) str += \" \".concat(directive.value);\n  str += '\\n';\n  return str;\n}\n/**\n * Format a comment into a GTF comment.\n * Yes I know this is just adding a # and a newline.\n *\n * @param {Object} comment\n * @returns {String}\n */\n\n\nfunction formatComment(comment) {\n  return \"# \".concat(comment.comment, \"\\n\");\n}\n/**\n * Format a sequence object as FASTA\n *\n * @param {Object} seq\n * @returns {String} formatted single FASTA sequence\n */\n\n\nfunction formatSequence(seq) {\n  return \">\".concat(seq.id).concat(seq.description ? \" \".concat(seq.description) : '', \"\\n\").concat(seq.sequence, \"\\n\");\n}\n/**\n * Format a directive, comment, or feature,\n * or array of such items, into one or more lines of GTF.\n *\n * @param {Object|Array} itemOrItems\n */\n\n\nfunction formatItem(itemOrItems) {\n  function formatSingleItem(item) {\n    if (item[0] || item.attributes) {\n      return formatFeature(item);\n    }\n\n    if (item.directive) {\n      return formatDirective(item);\n    }\n\n    if (item.sequence) {\n      return formatSequence(item);\n    }\n\n    if (item.comment) {\n      return formatComment(item);\n    }\n\n    return '# (invalid item found during format)\\n';\n  }\n\n  if (Array.isArray(itemOrItems)) {\n    return itemOrItems.map(function (item) {\n      return formatSingleItem(item);\n    });\n  }\n\n  return formatSingleItem(itemOrItems);\n}","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _api = require(\"./api\");\n\nvar util = _interopRequireWildcard(require(\"./util\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar _default = {\n  parseStream: _api.parseStream,\n  parseFile: _api.parseFile,\n  parseStringSync: _api.parseStringSync,\n  formatSync: _api.formatSync,\n  formatStream: _api.formatStream,\n  formatFile: _api.formatFile,\n  util: util\n};\nexports.default = _default;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatFile = formatFile;\nexports.formatStream = formatStream;\nexports.formatSync = formatSync;\nexports.parseFile = parseFile;\nexports.parseStream = parseStream;\nexports.parseStringSync = parseStringSync;\n\nvar _parse = _interopRequireDefault(require(\"./parse\"));\n\nvar _util = require(\"./util\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar _require = require('stream'),\n    Transform = _require.Transform;\n\nvar Decoder = require('string_decoder').StringDecoder; // don't load fs native module if running in webpacked code\n// eslint-disable-next-line camelcase\n\n\nvar fs = typeof __webpack_require__ !== 'function' ? require('fs') : null; // call a callback on the next process tick if running in\n// an environment that supports it\n\nfunction _callback(callback) {\n  if (process && process.nextTick) process.nextTick(callback);else callback();\n} // shared arg processing for the parse routines\n\n\nfunction _processParseOptions(options) {\n  var additionalDefaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var out = Object.assign({\n    parseFeatures: true,\n    parseDirectives: false,\n    parseSequences: true,\n    parseComments: false\n  }, additionalDefaults, options);\n\n  if (options.parseAll) {\n    out.parseFeatures = true;\n    out.parseDirectives = true;\n    out.parseComments = true;\n    out.parseSequences = true;\n  }\n\n  return out;\n}\n\nvar GTFTransform = /*#__PURE__*/function (_Transform) {\n  _inherits(GTFTransform, _Transform);\n\n  var _super = _createSuper(GTFTransform);\n\n  function GTFTransform() {\n    var _this;\n\n    var inputOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, GTFTransform);\n\n    var options = _processParseOptions(inputOptions);\n\n    _this = _super.call(this, {\n      objectMode: true\n    });\n    _this.encoding = inputOptions.encoding || 'utf8';\n    _this.decoder = new Decoder();\n    _this.textBuffer = '';\n\n    var push = _this.push.bind(_assertThisInitialized(_this));\n\n    _this.parser = new _parse.default({\n      featureCallback: options.parseFeatures ? push : null,\n      directiveCallback: options.parseDirectives ? push : null,\n      commentCallback: options.parseComments ? push : null,\n      sequenceCallback: options.parseSequences ? push : null,\n      errorCallback: function errorCallback(err) {\n        return _this.emit('error', err);\n      },\n      bufferSize: options.bufferSize\n    });\n    return _this;\n  }\n\n  _createClass(GTFTransform, [{\n    key: \"_addLine\",\n    value: function _addLine(data) {\n      var line = data.toString('utf8');\n\n      if (line) {\n        this.parser.addLine(line);\n      }\n    }\n  }, {\n    key: \"_nextText\",\n    value: function _nextText(buffer) {\n      var _this2 = this;\n\n      var pieces = (this.textBuffer + buffer).split(/\\r?\\n/);\n      this.textBuffer = pieces.pop();\n\n      if (this.maxLineLength && this.textBuffer.length > this.maxLineLength) {\n        this.emit('error', new Error('maximum line size exceeded'));\n        return;\n      }\n\n      pieces.forEach(function (piece) {\n        return _this2._addLine(piece);\n      });\n    }\n  }, {\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, callback) {\n      this._nextText(this.decoder.write(chunk));\n\n      _callback(callback);\n    }\n  }, {\n    key: \"_flush\",\n    value: function _flush(callback) {\n      if (this.decoder.end) this._nextText(this.decoder.end());\n      if (this.textBuffer != null) this._addLine(this.textBuffer);\n      this.parser.finish();\n\n      _callback(callback);\n    }\n  }]);\n\n  return GTFTransform;\n}(Transform);\n/**\n * Parse a stream of text data into a stream of feature,\n * directive, and comment objects.\n *\n * @param {Object} options optional options object\n * @param {string} options.encoding text encoding of the input GTF. default 'utf8'\n * @param {boolean} options.parseAll default false.  if true, will parse all items. overrides other flags\n * @param {boolean} options.parseFeatures default true\n * @param {boolean} options.parseDirectives default false\n * @param {boolean} options.parseComments default false\n * @param {boolean} options.parseSequences default true\n * @param {Number} options.bufferSize maximum number of GTF lines to buffer. defaults to 1000\n * @returns {ReadableStream} stream (in objectMode) of parsed items\n */\n\n\nfunction parseStream() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var newOptions = Object.assign({\n    bufferSize: 1000\n  }, options);\n  return new GTFTransform(newOptions);\n}\n/**\n * Read and parse a GTF file from the filesystem.\n *\n * @param {string} filename the filename of the file to parse\n * @param {Object} options optional options object\n * @param {string} options.encoding the file's string encoding, defaults to 'utf8'\n * @param {boolean} options.parseAll default false.  if true, will parse all items. overrides other flags\n * @param {boolean} options.parseFeatures default true\n * @param {boolean} options.parseDirectives default false\n * @param {boolean} options.parseComments default false\n * @param {boolean} options.parseSequences default true\n * @param {Number} options.bufferSize maximum number of GTF lines to buffer. defaults to 1000\n * @returns {ReadableStream} stream (in objectMode) of parsed items\n */\n\n\nfunction parseFile(filename, options) {\n  return fs.createReadStream(filename).pipe(parseStream(options));\n}\n/**\n * Synchronously parse a string containing GTF and return\n * an arrayref of the parsed items.\n *\n * @param {string} str\n * @param {Object} inputOptions optional options object\n * @param {boolean} inputOptions.parseAll default false.  if true, will parse all items. overrides other flags\n * @param {boolean} inputOptions.parseFeatures default true\n * @param {boolean} inputOptions.parseDirectives default false\n * @param {boolean} inputOptions.parseComments default false\n * @param {boolean} inputOptions.parseSequences default true\n * @returns {Array} array of parsed features, directives, and/or comments\n */\n\n\nfunction parseStringSync(str) {\n  var inputOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!str) return [];\n\n  var options = _processParseOptions(inputOptions);\n\n  var items = [];\n  var push = items.push.bind(items);\n  var parser = new _parse.default({\n    featureCallback: options.parseFeatures ? push : null,\n    directiveCallback: options.parseDirectives ? push : null,\n    commentCallback: options.parseComments ? push : null,\n    sequenceCallback: options.parseSequences ? push : null,\n    bufferSize: Infinity,\n    errorCallback: function errorCallback(err) {\n      throw err;\n    }\n  });\n  str.split(/\\r?\\n/).forEach(parser.addLine.bind(parser));\n  parser.finish();\n  return items;\n}\n/**\n * Format an array of GTF items (features,directives,comments) into string of GTF.\n * Does not insert synchronization (###) marks.\n * Does not insert directive if it's not already there.\n *\n * @param {Array[Object]} items\n * @returns {String} the formatted GTF\n */\n\n\nfunction formatSync(items) {\n  // sort items into seq and other\n  var other = [];\n  var sequences = [];\n  items.forEach(function (i) {\n    if (i.sequence) {\n      sequences.push(i);\n    } else {\n      other.push(i);\n    }\n  });\n  var str = other.map(_util.formatItem).join('');\n\n  if (sequences.length) {\n    str += '##FASTA\\n';\n    str += sequences.map(_util.formatSequence).join('');\n  }\n\n  return str;\n}\n\nvar FormattingTransform = /*#__PURE__*/function (_Transform2) {\n  _inherits(FormattingTransform, _Transform2);\n\n  var _super2 = _createSuper(FormattingTransform);\n\n  function FormattingTransform() {\n    var _this3;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, FormattingTransform);\n\n    _this3 = _super2.call(this, Object.assign(options, {\n      objectMode: true\n    }));\n    _this3.linesSinceLastSyncMark = 0;\n    _this3.minLinesBetweenSyncMarks = options.minSyncLines || 100;\n    _this3.insertVersionDirective = options.insertVersionDirective || false;\n    _this3.haveWeEmittedData = false;\n    _this3.fastaMode = false;\n    return _this3;\n  }\n\n  _createClass(FormattingTransform, [{\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, callback) {\n      // if we have not emitted anything yet, and this first\n      // chunk is not a gtf directive, emit one\n      var str;\n\n      if (!this.haveWeEmittedData && this.insertVersionDirective && (chunk[0] || chunk).directive !== 'gtf') {\n        this.push('##gtf\\n');\n      } // if it's a sequence chunk coming down, emit a FASTA directive and\n      // change to FASTA mode\n\n\n      if (chunk.sequence && !this.fastaMode) {\n        this.push('##FASTA\\n');\n        this.fastaMode = true;\n      }\n\n      if (Array.isArray(chunk)) {\n        str = chunk.map(_util.formatItem).join('');\n      } else {\n        str = (0, _util.formatItem)(chunk);\n      }\n\n      this.push(str);\n\n      if (this.linesSinceLastSyncMark >= this.minLinesBetweenSyncMarks) {\n        this.push('###\\n');\n        this.linesSinceLastSyncMark = 0;\n      } else {\n        // count the number of newlines in this chunk\n        var count = 0;\n\n        for (var i = 0; i < str.length; i += 1) {\n          if (str[i] === '\\n') count += 1;\n        }\n\n        this.linesSinceLastSyncMark += count;\n      }\n\n      this.haveWeEmittedData = true;\n\n      _callback(callback);\n    }\n  }]);\n\n  return FormattingTransform;\n}(Transform);\n/**\n * Format a stream of items (of the type produced\n * by this script) into a stream of GTF text.\n *\n * Inserts synchronization (###) marks automatically.\n *\n * @param {Object} options\n * @param {Object} options.minSyncLines minimum number of lines between ### marks. default 100\n * @param {Boolean} options.insertVersionDirective\n *  if the first item in the stream is not a ##gff-version directive, insert one to show it's gtf\n *  default false\n */\n\n\nfunction formatStream(options) {\n  return new FormattingTransform(options);\n}\n/**\n * Format a stream of items (of the type produced\n * by this script) into a GTF file and write it to the filesystem.\n\n * Inserts synchronization (###) marks and a ##gtf\n * directive automatically (if one is not already present).\n *\n * @param {ReadableStream} stream the stream to write to the file\n * @param {String} filename the file path to write to\n * @param {Object} options\n * @param {String} options.encoding default 'utf8'. encoding for the written file\n * @param {Number} options.minSyncLines\n *  minimum number of lines between sync (###) marks. default 100\n * @param {Boolean} options.insertVersionDirective\n *  if the first item in the stream is not a ##gtf directive, insert one.\n *  default false\n * @returns {Promise} promise for the written filename\n */\n\n\nfunction formatFile(stream, filename) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var newOptions = Object.assign({\n    insertVersionDirective: false\n  }, options);\n  return new Promise(function (resolve, reject) {\n    stream.pipe(new FormattingTransform(newOptions)).on('end', function () {\n      return resolve(filename);\n    }).on('error', reject).pipe(fs.createWriteStream(filename, {\n      encoding: newOptions.encoding || 'utf8'\n    }));\n  });\n}","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar GTF = _interopRequireWildcard(require(\"./util\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar containerAttributes = {\n  Parent: 'child_features',\n  Derives_from: 'derived_features'\n}; // Note this is a reimplementation of https://github.com/GMOD/jbrowse/src/JBrowse/Store/SeqFeature/GTF/Parser.js\n\nvar FASTAParser = /*#__PURE__*/function () {\n  function FASTAParser(seqCallback) {\n    _classCallCheck(this, FASTAParser);\n\n    this.seqCallback = seqCallback;\n    this.currentSequence = undefined;\n  }\n\n  _createClass(FASTAParser, [{\n    key: \"addLine\",\n    value: function addLine(line) {\n      var defMatch = /^>\\s*(\\S+)\\s*(.*)/.exec(line);\n\n      if (defMatch) {\n        this._flush();\n\n        this.currentSequence = {\n          id: defMatch[1],\n          sequence: ''\n        };\n        if (defMatch[2]) this.currentSequence.description = defMatch[2].trim();\n      } else if (this.currentSequence && /\\S/.test(line)) {\n        this.currentSequence.sequence += line.replace(/\\s/g, '');\n      }\n    }\n  }, {\n    key: \"_flush\",\n    value: function _flush() {\n      if (this.currentSequence) this.seqCallback(this.currentSequence);\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      this._flush();\n    }\n  }]);\n\n  return FASTAParser;\n}();\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(args) {\n    _classCallCheck(this, Parser);\n\n    var nullFunc = function nullFunc() {};\n\n    Object.assign(this, {\n      featureCallback: args.featureCallback || nullFunc,\n      endCallback: args.endCallback || nullFunc,\n      commentCallback: args.commentCallback || nullFunc,\n      errorCallback: args.errorCallback || nullFunc,\n      directiveCallback: args.directiveCallback || nullFunc,\n      sequenceCallback: args.sequenceCallback || nullFunc,\n      // number of lines to buffer\n      bufferSize: args.bufferSize === undefined ? 1000 : args.bufferSize,\n      // features that we have to keep on hand for now because they\n      // might be referenced by something else\n      _underConstructionTopLevel: [],\n      // index of the above by ID\n      _underConstructionById: {},\n      _completedReferences: {},\n      // features that reference something we have not seen yet\n      // structured as:\n      // {  'some_id' : {\n      //     'Parent' : [ orphans that have a Parent attr referencing it ],\n      //     'Derives_from' : [ orphans that have a Derives_from attr referencing it ],\n      //    }\n      // }\n      _underConstructionOrphans: {},\n      // if this is true, the parser ignores the\n      // rest of the lines in the file.  currently\n      // set when the file switches over to FASTA\n      eof: false,\n      lineNumber: 0\n    });\n  }\n\n  _createClass(Parser, [{\n    key: \"addLine\",\n    value: function addLine(line) {\n      // if we have transitioned to a fasta section, just delegate to that parser\n      if (this.fastaParser) {\n        this.fastaParser.addLine(line);\n        return;\n      }\n\n      if (this.eof) {\n        // otherwise, if we are done, ignore this line\n        return;\n      }\n\n      this.lineNumber += 1;\n\n      if (/^\\s*[^#\\s>]/.test(line)) {\n        // feature line, most common case\n        this._bufferLine(line);\n\n        return;\n      }\n\n      var match = /^\\s*(#+)(.*)/.exec(line);\n\n      if (match) {\n        // directive or comment\n        // eslint-disable-next-line prefer-const\n        var _match = _slicedToArray(match, 3),\n            hashsigns = _match[1],\n            contents = _match[2];\n\n        if (hashsigns.length === 3) {\n          // sync directive, all forward-references are resolved.\n          this._emitAllUnderConstructionFeatures();\n        } else if (hashsigns.length === 2) {\n          var directive = GTF.parseDirective(line);\n\n          if (directive.directive === 'FASTA') {\n            this._emitAllUnderConstructionFeatures();\n\n            this.eof = true;\n            this.fastaParser = new FASTAParser(this.sequenceCallback);\n          } else {\n            this._emitItem(directive);\n          }\n        } else {\n          contents = contents.replace(/\\s*/, '');\n\n          this._emitItem({\n            comment: contents\n          });\n        }\n      } else if (/^\\s*$/.test(line)) {// blank line, do nothing\n      } else if (/^\\s*>/.test(line)) {\n        // implicit beginning of a FASTA section\n        this._emitAllUnderConstructionFeatures();\n\n        this.eof = true;\n        this.fastaParser = new FASTAParser(this.sequenceCallback);\n        this.fastaParser.addLine(line);\n      } else {\n        // it's a parse error\n        var errLine = line.replace(/\\r?\\n?$/g, '');\n        throw new Error(\"GTF parse error.  Cannot parse '\".concat(errLine, \"'.\"));\n      }\n    }\n  }, {\n    key: \"_emitItem\",\n    value: function _emitItem(i) {\n      if (i[0]) {\n        this.featureCallback(i);\n      } else if (i.directive) {\n        this.directiveCallback(i);\n      } else if (i.comment) {\n        this.commentCallback(i);\n      }\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      this._emitAllUnderConstructionFeatures();\n\n      if (this.fastaParser) {\n        this.fastaParser.finish();\n      }\n\n      this.endCallback();\n    }\n  }, {\n    key: \"_enforceBufferSizeLimit\",\n    value: function _enforceBufferSizeLimit() {\n      var _this = this;\n\n      var additionalItemCount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var _unbufferItem = function _unbufferItem(item) {\n        if (item && item[0] && item[0].attributes && item[0].attributes.ID && item[0].attributes.ID[0]) {\n          var ids = item[0].attributes.ID;\n          ids.forEach(function (id) {\n            delete _this._underConstructionById[id];\n            delete _this._completedReferences[id];\n          });\n          item.forEach(function (i) {\n            if (i.child_features) i.child_features.forEach(function (c) {\n              return _unbufferItem(c);\n            });\n            if (i.derived_features) i.derived_features.forEach(function (d) {\n              return _unbufferItem(d);\n            });\n          });\n        }\n      };\n\n      while (this._underConstructionTopLevel.length + additionalItemCount > this.bufferSize) {\n        var item = this._underConstructionTopLevel.shift();\n\n        this._emitItem(item);\n\n        _unbufferItem(item);\n      }\n    }\n    /**\n     * return all under-construction features, called when we know\n     * there will be no additional data to attach to them\n     * @private\n     */\n\n  }, {\n    key: \"_emitAllUnderConstructionFeatures\",\n    value: function _emitAllUnderConstructionFeatures() {\n      this._underConstructionTopLevel.forEach(this._emitItem.bind(this));\n\n      this._underConstructionTopLevel = [];\n      this._underConstructionById = {};\n      this._completedReferences = {}; // if we have any orphans hanging around still, this is a\n      // problem. die with a parse error\n\n      if (Object.values(this._underConstructionOrphans).filter(function (entry) {\n        return Object.keys(entry).length;\n      }).length) {\n        throw new Error(\"some features reference other features that do not exist in the file (or in the same '###' scope). \".concat(JSON.stringify(this._underConstructionOrphans)));\n      }\n    } // do the right thing with a newly-parsed feature line\n\n  }, {\n    key: \"_bufferLine\",\n    value: function _bufferLine(line) {\n      var _this2 = this;\n\n      var featureLine = GTF.parseFeature(line);\n      featureLine.child_features = [];\n      featureLine.derived_features = []; // featureLine._lineNumber = this.lineNumber //< debugging aid\n\n      var featureNumber = this.lineNumber; // no such thing as unique ID in GTF. make one up.\n\n      var isTranscript = featureLine.featureType === 'transcript'; // trying to support the Cufflinks convention of adding a transcript line\n      // NOTE: a feature is an arrayref of one or more feature lines.\n\n      var ids = isTranscript ? featureLine.attributes.transcript_id || [] : [featureNumber];\n      var parents = isTranscript ? [] : featureLine.attributes.transcript_id || [];\n      var derives = featureLine.attributes.Derives_from || [];\n\n      if (!ids.length && !parents.length && !derives.length) {\n        // if it has no IDs and does not refer to anything, we can just\n        // output it\n        this._emitItem([featureLine]);\n\n        return;\n      }\n\n      function createTranscript(feature) {\n        var result = JSON.parse(JSON.stringify(feature));\n        result.featureType = 'transcript'; // result.attributes={'transcript_id':result.attributes.transcript_id, 'gene_id':result.attributes.gene_id};\n\n        return GTF.formatFeature(result);\n      } // here we just create transcript features with children features and let 'gene_ids' simply be attributes not a feature in themselves\n\n\n      parents.forEach(function (parent) {\n        var underConst = _this2._underConstructionById[parent];\n\n        if (!underConst) {\n          _this2._bufferLine(createTranscript(featureLine));\n        }\n      });\n      var feature;\n      ids.forEach(function (id) {\n        var existing = _this2._underConstructionById[id];\n\n        if (existing) {\n          existing.push(featureLine);\n          feature = existing;\n        } else {\n          // haven't seen it yet, so buffer it so we can attach\n          // child features to it\n          feature = [featureLine];\n\n          _this2._enforceBufferSizeLimit(1);\n\n          if (!parents.length && !derives.length) {\n            _this2._underConstructionTopLevel.push(feature);\n          }\n\n          _this2._underConstructionById[id] = feature; // see if we have anything buffered that refers to it\n\n          _this2._resolveReferencesTo(feature, id);\n        }\n      }); // try to resolve all its references\n\n      this._resolveReferencesFrom(feature || [featureLine], {\n        Parent: parents,\n        Derives_from: derives\n      }, ids);\n    }\n  }, {\n    key: \"_resolveReferencesTo\",\n    value: function _resolveReferencesTo(feature, id) {\n      var references = this._underConstructionOrphans[id]; //   references is of the form\n      //   {\n      //     'Parent' : [ orphans that have a Parent attr referencing this feature ],\n      //     'Derives_from' : [ orphans that have a Derives_from attr referencing this feature ],\n      //    }\n\n      if (!references) return;\n      Object.keys(references).forEach(function (attrname) {\n        var pname = containerAttributes[attrname] || attrname.toLowerCase();\n        feature.forEach(function (loc) {\n          var _loc$pname;\n\n          (_loc$pname = loc[pname]).push.apply(_loc$pname, _toConsumableArray(references[attrname]));\n\n          delete references[attrname];\n        });\n      });\n    }\n  }, {\n    key: \"_parseError\",\n    value: function _parseError(message) {\n      this.eof = true;\n      this.errorCallback(\"\".concat(this.lineNumber, \": \").concat(message));\n    }\n  }, {\n    key: \"_resolveReferencesFrom\",\n    value: function _resolveReferencesFrom(feature, references, ids) {\n      var _this3 = this;\n\n      // this is all a bit more awkward in javascript than it was in perl\n      function postSet(obj, slot1, slot2) {\n        var subObj = obj[slot1];\n\n        if (!subObj) {\n          subObj = {}; // eslint-disable-next-line no-param-reassign\n\n          obj[slot1] = subObj;\n        }\n\n        var returnVal = subObj[slot2] || false;\n        subObj[slot2] = true;\n        return returnVal;\n      }\n\n      function expandFeature(parentFeature, childFeature) {\n        // eslint-disable-next-line no-param-reassign\n        parentFeature[0].start = Math.min(parentFeature[0].start, childFeature[0].start); // eslint-disable-next-line no-param-reassign\n\n        parentFeature[0].end = Math.max(parentFeature[0].end, childFeature[0].end);\n      }\n\n      Object.entries(references).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            attrname = _ref2[0],\n            toIds = _ref2[1];\n\n        var pname;\n        toIds.forEach(function (toId) {\n          var otherFeature = _this3._underConstructionById[toId];\n\n          if (otherFeature) {\n            expandFeature(otherFeature, feature);\n            if (!pname) pname = containerAttributes[attrname] || attrname.toLowerCase();\n\n            if (!ids.filter(function (id) {\n              return postSet(_this3._completedReferences, id, \"\".concat(attrname, \",\").concat(toId));\n            }).length) {\n              otherFeature.forEach(function (location) {\n                location[pname].push(feature);\n              });\n            }\n          } else {\n            if (!_this3._underConstructionOrphans[toId]) _this3._underConstructionOrphans[toId] = {};\n            if (!_this3._underConstructionOrphans[toId][attrname]) _this3._underConstructionOrphans[toId][attrname] = [];\n\n            _this3._underConstructionOrphans[toId][attrname].push(feature);\n          }\n        });\n      });\n    }\n  }]);\n\n  return Parser;\n}();\n\nexports.default = Parser;","export type Strand = '+' | '-' | '.' | '?'\nexport interface FeatureLoc {\n  [key: string]: unknown\n  start: number\n  end: number\n  strand: Strand\n  seq_name: string\n  child_features: FeatureLoc[][]\n  data: unknown\n  derived_features: unknown\n  attributes: { [key: string]: unknown[] }\n}\n\nexport function featureData(data: FeatureLoc) {\n  const f: Record<string, unknown> = { ...data }\n  ;(f.start as number) -= 1 // convert to interbase\n  f.strand = { '+': 1, '-': -1, '.': 0, '?': undefined }[data.strand] // convert strand\n  f.phase = Number(data.frame)\n  f.refName = data.seq_name\n  if (data.score === null) {\n    delete f.score\n  }\n  if (data.frame === null) {\n    delete f.score\n  }\n  const defaultFields = [\n    'start',\n    'end',\n    'seq_name',\n    'score',\n    'featureType',\n    'source',\n    'frame',\n    'strand',\n  ]\n  Object.keys(data.attributes).forEach(a => {\n    let b = a.toLowerCase()\n    if (defaultFields.includes(b)) {\n      // add \"suffix\" to tag name if it already exists\n      // reproduces behavior of NCList\n      b += '2'\n    }\n    if (data.attributes[a] !== null) {\n      let attr = data.attributes[a]\n      if (Array.isArray(attr) && attr.length === 1) {\n        // gtf uses double quotes for text values in the attributes column, remove them\n        const formattedAttr = attr[0].replace(/^\"|\"$/g, '')\n        attr = formattedAttr\n      }\n      f[b] = attr\n    }\n  })\n  f.refName = f.seq_name\n  f.type = f.featureType\n\n  // the SimpleFeature constructor takes care of recursively inflating subfeatures\n  if (data.child_features && data.child_features.length) {\n    f.subfeatures = data.child_features\n      .map(childLocs => childLocs.map(childLoc => featureData(childLoc)))\n      .flat()\n  }\n\n  delete f.child_features\n  delete f.data\n  delete f.derived_features\n  // eslint-disable-next-line no-underscore-dangle\n  delete f._linehash\n  delete f.attributes\n  delete f.seq_name\n  delete f.featureType\n  delete f.frame\n\n  if (f.transcript_id) {\n    f.name = f.transcript_id\n  }\n  return f\n}\n","import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport IntervalTree from '@flatten-js/interval-tree'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { unzip } from '@gmod/bgzf-filehandle'\n\nimport gtf from '@gmod/gtf'\nimport { FeatureLoc, featureData } from '../util'\nfunction isGzip(buf: Buffer) {\n  return buf[0] === 31 && buf[1] === 139 && buf[2] === 8\n}\n\nexport default class extends BaseFeatureDataAdapter {\n  protected gtfFeatures?: Promise<{\n    intervalTree: Record<string, IntervalTree>\n  }>\n\n  private async loadDataP() {\n    const buffer = await openLocation(\n      readConfObject(this.config, 'gtfLocation'),\n      this.pluginManager,\n    ).readFile()\n\n    const buf = isGzip(buffer) ? await unzip(buffer) : buffer\n    // 512MB  max chrome string length is 512MB\n    if (buf.length > 536_870_888) {\n      throw new Error('Data exceeds maximum string length (512MB)')\n    }\n    const data = new TextDecoder('utf8', { fatal: true }).decode(buf)\n    const feats = gtf.parseStringSync(data, {\n      parseFeatures: true,\n      parseComments: false,\n      parseDirectives: false,\n      parseSequences: false,\n    }) as FeatureLoc[][]\n\n    const intervalTree = feats\n      .flat()\n      .map(\n        (f, i) =>\n          new SimpleFeature({\n            data: featureData(f),\n            id: `${this.id}-offset-${i}`,\n          }),\n      )\n      .reduce((acc, obj) => {\n        const key = obj.get('refName')\n        if (!acc[key]) {\n          acc[key] = new IntervalTree()\n        }\n        acc[key].insert([obj.get('start'), obj.get('end')], obj)\n        return acc\n      }, {} as Record<string, IntervalTree>)\n    return { intervalTree }\n  }\n\n  private async loadData() {\n    if (!this.gtfFeatures) {\n      this.gtfFeatures = this.loadDataP().catch(e => {\n        this.gtfFeatures = undefined\n        throw e\n      })\n    }\n\n    return this.gtfFeatures\n  }\n\n  public async getRefNames(opts: BaseOptions = {}) {\n    const { intervalTree } = await this.loadData()\n    return Object.keys(intervalTree)\n  }\n\n  public getFeatures(query: NoAssemblyRegion, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      try {\n        const { start, end, refName } = query\n        const { intervalTree } = await this.loadData()\n        intervalTree[refName]\n          ?.search([start, end])\n          .forEach(f => observer.next(f))\n        observer.complete()\n      } catch (e) {\n        observer.error(e)\n      }\n    }, opts.signal)\n  }\n  public freeResources(/* { region } */) {}\n}\n"],"sourceRoot":""}