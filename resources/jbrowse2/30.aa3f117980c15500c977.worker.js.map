{"version":3,"sources":["../../../node_modules/pluralize/pluralize.js","../../src/index.js","../../../plugins/config/src/ConfigurationEditorWidget/components/CallbackEditor.js","../../../plugins/config/src/ConfigurationEditorWidget/components/ColorEditor.tsx","../../../plugins/config/src/ConfigurationEditorWidget/components/SlotEditor.js","../../../plugins/config/src/ConfigurationEditorWidget/components/TypeSelector.js","../../../plugins/config/src/ConfigurationEditorWidget/components/ConfigurationEditor.js"],"names":["module","exports","pluralRules","singularRules","uncountables","irregularPlurals","irregularSingles","sanitizeRule","rule","RegExp","restoreCase","word","token","toLowerCase","toUpperCase","charAt","substr","interpolate","str","args","replace","match","index","result","arguments","sanitizeWord","rules","length","hasOwnProperty","len","test","replaceWord","replaceMap","keepMap","checkWord","bool","pluralize","count","inclusive","singular","plural","isPlural","isSingular","addPluralRule","replacement","push","addSingularRule","addUncountableRule","addIrregularRule","single","forEach","React","KEYCODE_Z","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","global","navigator","platform","isMacLike","className","Editor","state","capture","_recordCurrentState","input","_this","_input","value","selectionStart","selectionEnd","_recordChange","_getLines","text","position","substring","split","record","overwrite","_history","stack","offset","slice","extras","Math","max","timestamp","Date","now","last","re","previous","pop","current","startsWith","_updateInput","props","onValueChange","_applyEdits","_undoEdit","_redoEdit","min","_handleKeyDown","e","tabSize","insertSpaces","ignoreTabKey","onKeyDown","defaultPrevented","target","tabCharacter","repeat","keyCode","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","map","line","i","join","startLineText","updatedSelection","hasSelection","endsWith","matches","indent","chars","metaKey","ctrlKey","altKey","setState","_handleChange","this","style","padding","highlight","textareaId","autoFocus","disabled","form","maxLength","minLength","name","placeholder","readOnly","required","onClick","onFocus","onBlur","onKeyUp","rest","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","highlighted","styles","container","ref","c","_this2","editor","textarea","id","onChange","autoCapitalize","autoComplete","autoCorrect","spellCheck","dangerouslySetInnerHTML","__html","children","type","history","session","Component","defaultProps","textAlign","whiteSpace","wordBreak","boxSizing","overflow","top","left","height","width","resize","color","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","pointerEvents","margin","border","background","display","fontFamily","fontSize","fontStyle","fontVariantLigatures","fontWeight","letterSpacing","lineHeight","textIndent","textRendering","textTransform","useStyles","makeStyles","theme","callbackEditor","marginTop","borderBottom","palette","divider","observer","slot","classes","useState","code","setCode","error","setCodeError","debouncedCode","useDebounce","useEffect","jexlDebouncedCode","stringToJexlExpression","getEnv","pluginManager","_getEnv$pluginManager","jexl","set","console","FormControl","InputLabel","shrink","htmlFor","newCode","undefined","FormHelperText","description","Tooltip","title","contextVariable","arrow","IconButton","newWindow","window","open","opener","HelpIcon","ColorPicker","lazy","ColorSlot","label","TextFieldProps","displayed","setDisplayed","TextField","InputProps","borderRightWidth","borderRightStyle","borderRightColor","event","Suspense","fallback","Object","r","g","b","a","serializeColor","rgb","helperText","fullWidth","StringEditor","evt","TextEditor","multiline","SvgCheckbox","SvgIcon","d","StringArrayEditor","setValue","List","disablePadding","val","idx","ListItem","key","disableGutters","setAtIndex","endAdornment","InputAdornment","removeAtIndex","DeleteIcon","add","AddIcon","useMapEditorStyles","card","spacing","StringArrayMapEditor","Array","from","Card","raised","CardHeader","action","remove","CardContent","strValue","setAtKeyIndex","removeAtKeyIndex","addToKey","disableTypography","NumberMapEditor","NumberEditor","numValue","setVal","num","parseFloat","Number","isNaN","reset","IntegerEditor","parseInt","booleanEditor","FormControlLabel","control","Checkbox","checked","stringEnumEditor","slotSchema","p","getPropertyMembers","getSubType","choices","getUnionSubTypes","getPropertyType","t","select","MenuItem","FileSelectorWrapper","FileSelector","location","setLocation","rootModel","valueComponents","string","fileLocation","stringArray","stringArrayMap","numberMap","number","integer","ColorEditor","stringEnum","boolean","frozen","JsonEditor","configRelationships","useSlotEditorStyles","paper","marginBottom","paperContent","slotModeSwitch","secondary","light","justifyContent","alignItems","SlotEditor","ValueComponent","isCallback","CallbackEditor","warn","Paper","slotModeIcon","convertToValue","convertToCallback","RadioButtonUncheckedIcon","TypeSelector","typeNameChoices","slotName","expandIcon","root","expansionPanelDetails","accordion","primary","Member","typeSelector","schema","path","isConfigurationSchemaType","subslot","slotIndex","getTypeNamesFromExplicitlyTypedUnion","setSubschema","Accordion","defaultExpanded","TransitionProps","unmountOnExit","timeout","AccordionSummary","ExpandMoreIcon","Typography","AccordionDetails","FormGroup","Schema","isConfigurationSlotType","properties","getMembers","entries","ConfigurationEditor","model","readConfObject"],"mappings":"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MACA,WACA,UACA,OACA,YACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,QACA,WACA,MACA,WACA,cACA,QACA,SACA,WACA,YACA,MACA,SACA,YACA,YACA,YACA,WACA,WACA,MACA,UACA,UACA,WACA,WACA,eACA,SACA,SACA,YACA,WACA,YACA,cACA,QACA,UACA,QACA,SACA,aACA,YACA,WACA,OACA,QACA,OACA,QACA,QACA,MACA,QACA,OACA,OACA,YACA,OACA,WACA,SACA,SACA,YACA,WACA,OACA,WACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,iBACA,QACA,OACA,SACA,UACA,UACA,aACA,WACA,MACA,kBAEA,gBACA,SACA,SACA,YACA,WACA,QACA,WACA0C,QAAQd,EAAUW,oBAEbX,EA/eYA,I,6fCHTe,E,wJAAZ,M,mQA8CA,IAIMC,EAAY,GAGZC,EAAmB,IACnBC,EAAgB,IAChBC,EAAqB,IAErBC,EAAgB,IAChBC,EAAmB,IAEnBC,EAAY,cAAeC,GAAU,OAAO7B,KAAK8B,UAAUC,UAC3DC,EACJ,cAAeH,GAAU,0BAA0B7B,KAAK8B,UAAUC,UAE9DE,EAAY,0CA8BGC,E,+MAQnBC,MAAQ,CACNC,SAAS,G,EAOXC,oBAAsB,WACpB,IAAMC,EAAQC,EAAKC,OAEnB,GAAKF,EAAL,CAH0B,IAMlBG,EAAwCH,EAAxCG,MAAOC,EAAiCJ,EAAjCI,eAAgBC,EAAiBL,EAAjBK,aAE/BJ,EAAKK,cAAc,CACjBH,QACAC,iBACAC,mB,EAIJE,UAAY,SAACC,EAAcC,GAAf,OACVD,EAAKE,UAAU,EAAGD,GAAUE,MAAM,O,EAEpCL,cAAgB,SAACM,GAAgD,IAAhCC,EAAgC,0DACrCZ,EAAKa,SAAvBC,EADuD,EACvDA,MAAOC,EADgD,EAChDA,OAEf,GAAID,EAAMxD,QAAUyD,GAAU,EAAG,CAE/Bf,EAAKa,SAASC,MAAQA,EAAME,MAAM,EAAGD,EAAS,GAG9C,IAAM/C,EAAQgC,EAAKa,SAASC,MAAMx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","file":"30.aa3f117980c15500c977.worker.js","sourcesContent":["/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n","/* @flow */\n/* global global */\n\nimport * as React from 'react';\n\ntype Props = React.ElementConfig<'div'> & {\n  // Props for the component\n  value: string,\n  onValueChange: (value: string) => mixed,\n  highlight: (value: string) => string | React.Node,\n  tabSize: number,\n  insertSpaces: boolean,\n  ignoreTabKey: boolean,\n  padding: number | string,\n  style?: {},\n\n  // Props for the textarea\n  textareaId?: string,\n  autoFocus?: boolean,\n  disabled?: boolean,\n  form?: string,\n  maxLength?: number,\n  minLength?: number,\n  name?: string,\n  placeholder?: string,\n  readOnly?: boolean,\n  required?: boolean,\n  onClick?: (e: MouseEvent) => mixed,\n  onFocus?: (e: FocusEvent) => mixed,\n  onBlur?: (e: FocusEvent) => mixed,\n  onKeyUp?: (e: KeyboardEvent) => mixed,\n  onKeyDown?: (e: KeyboardEvent) => mixed,\n};\n\ntype State = {\n  capture: boolean,\n};\n\ntype Record = {\n  value: string,\n  selectionStart: number,\n  selectionEnd: number,\n};\n\ntype History = {\n  stack: Array<Record & { timestamp: number }>,\n  offset: number,\n};\n\nconst KEYCODE_ENTER = 13;\nconst KEYCODE_TAB = 9;\nconst KEYCODE_BACKSPACE = 8;\nconst KEYCODE_Y = 89;\nconst KEYCODE_Z = 90;\nconst KEYCODE_M = 77;\nconst KEYCODE_PARENS = 57;\nconst KEYCODE_BRACKETS = 219;\nconst KEYCODE_QUOTE = 222;\nconst KEYCODE_BACK_QUOTE = 192;\n\nconst HISTORY_LIMIT = 100;\nconst HISTORY_TIME_GAP = 3000;\n\nconst isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\nconst isMacLike =\n  'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nconst className = 'npm__react-simple-code-editor__textarea';\n\nconst cssText = /* CSS */ `\n/**\n * Reset the text fill color so that placeholder is visible\n */\n.${className}:empty {\n  -webkit-text-fill-color: inherit !important;\n}\n\n/**\n * Hack to apply on some CSS on IE10 and IE11\n */\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n    * IE doesn't support '-webkit-text-fill-color'\n    * So we use 'color: transparent' to make the text transparent on IE\n    * Unlike other browsers, it doesn't affect caret color in IE\n    */\n  .${className} {\n    color: transparent !important;\n  }\n\n  .${className}::selection {\n    background-color: #accef7 !important;\n    color: transparent !important;\n  }\n}\n`;\n\nexport default class Editor extends React.Component<Props, State> {\n  static defaultProps = {\n    tabSize: 2,\n    insertSpaces: true,\n    ignoreTabKey: false,\n    padding: 0,\n  };\n\n  state = {\n    capture: true,\n  };\n\n  componentDidMount() {\n    this._recordCurrentState();\n  }\n\n  _recordCurrentState = () => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Save current state of the input\n    const { value, selectionStart, selectionEnd } = input;\n\n    this._recordChange({\n      value,\n      selectionStart,\n      selectionEnd,\n    });\n  };\n\n  _getLines = (text: string, position: number) =>\n    text.substring(0, position).split('\\n');\n\n  _recordChange = (record: Record, overwrite?: boolean = false) => {\n    const { stack, offset } = this._history;\n\n    if (stack.length && offset > -1) {\n      // When something updates, drop the redo operations\n      this._history.stack = stack.slice(0, offset + 1);\n\n      // Limit the number of operations to 100\n      const count = this._history.stack.length;\n\n      if (count > HISTORY_LIMIT) {\n        const extras = count - HISTORY_LIMIT;\n\n        this._history.stack = stack.slice(extras, count);\n        this._history.offset = Math.max(this._history.offset - extras, 0);\n      }\n    }\n\n    const timestamp = Date.now();\n\n    if (overwrite) {\n      const last = this._history.stack[this._history.offset];\n\n      if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n        // A previous entry exists and was in short interval\n\n        // Match the last word in the line\n        const re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n        // Get the previous line\n        const previous = this._getLines(last.value, last.selectionStart)\n          .pop()\n          .match(re);\n\n        // Get the current line\n        const current = this._getLines(record.value, record.selectionStart)\n          .pop()\n          .match(re);\n\n        if (previous && current && current[1].startsWith(previous[1])) {\n          // The last word of the previous line and current line match\n          // Overwrite previous entry so that undo will remove whole word\n          this._history.stack[this._history.offset] = { ...record, timestamp };\n\n          return;\n        }\n      }\n    }\n\n    // Add the new operation to the stack\n    this._history.stack.push({ ...record, timestamp });\n    this._history.offset++;\n  };\n\n  _updateInput = (record: Record) => {\n    const input = this._input;\n\n    if (!input) return;\n\n    // Update values and selection state\n    input.value = record.value;\n    input.selectionStart = record.selectionStart;\n    input.selectionEnd = record.selectionEnd;\n\n    this.props.onValueChange(record.value);\n  };\n\n  _applyEdits = (record: Record) => {\n    // Save last selection state\n    const input = this._input;\n    const last = this._history.stack[this._history.offset];\n\n    if (last && input) {\n      this._history.stack[this._history.offset] = {\n        ...last,\n        selectionStart: input.selectionStart,\n        selectionEnd: input.selectionEnd,\n      };\n    }\n\n    // Save the changes\n    this._recordChange(record);\n    this._updateInput(record);\n  };\n\n  _undoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the previous edit\n    const record = stack[offset - 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.max(offset - 1, 0);\n    }\n  };\n\n  _redoEdit = () => {\n    const { stack, offset } = this._history;\n\n    // Get the next edit\n    const record = stack[offset + 1];\n\n    if (record) {\n      // Apply the changes and update the offset\n      this._updateInput(record);\n      this._history.offset = Math.min(offset + 1, stack.length - 1);\n    }\n  };\n\n  _handleKeyDown = (e: *) => {\n    const { tabSize, insertSpaces, ignoreTabKey, onKeyDown } = this.props;\n\n    if (onKeyDown) {\n      onKeyDown(e);\n\n      if (e.defaultPrevented) {\n        return;\n      }\n    }\n\n    const { value, selectionStart, selectionEnd } = e.target;\n\n    const tabCharacter = (insertSpaces ? ' ' : '     ').repeat(tabSize);\n\n    if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.state.capture) {\n      // Prevent focus change\n      e.preventDefault();\n\n      if (e.shiftKey) {\n        // Unindent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const nextValue = value\n          .split('\\n')\n          .map((line, i) => {\n            if (\n              i >= startLine &&\n              i <= endLine &&\n              line.startsWith(tabCharacter)\n            ) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          })\n          .join('\\n');\n\n        if (value !== nextValue) {\n          const startLineText = linesBeforeCaret[startLine];\n\n          this._applyEdits({\n            value: nextValue,\n            // Move the start cursor if first line in selection was modified\n            // It was modified only if it started with a tab\n            selectionStart: startLineText.startsWith(tabCharacter)\n              ? selectionStart - tabCharacter.length\n              : selectionStart,\n            // Move the end cursor by total number of characters removed\n            selectionEnd: selectionEnd - (value.length - nextValue.length),\n          });\n        }\n      } else if (selectionStart !== selectionEnd) {\n        // Indent selected lines\n        const linesBeforeCaret = this._getLines(value, selectionStart);\n        const startLine = linesBeforeCaret.length - 1;\n        const endLine = this._getLines(value, selectionEnd).length - 1;\n        const startLineText = linesBeforeCaret[startLine];\n\n        this._applyEdits({\n          value: value\n            .split('\\n')\n            .map((line, i) => {\n              if (i >= startLine && i <= endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            })\n            .join('\\n'),\n          // Move the start cursor by number of characters added in first line of selection\n          // Don't move it if it there was no text before cursor\n          selectionStart: /\\S/.test(startLineText)\n            ? selectionStart + tabCharacter.length\n            : selectionStart,\n          // Move the end cursor by total number of characters added\n          selectionEnd:\n            selectionEnd + tabCharacter.length * (endLine - startLine + 1),\n        });\n      } else {\n        const updatedSelection = selectionStart + tabCharacter.length;\n\n        this._applyEdits({\n          // Insert tab character at caret\n          value:\n            value.substring(0, selectionStart) +\n            tabCharacter +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_BACKSPACE) {\n      const hasSelection = selectionStart !== selectionEnd;\n      const textBeforeCaret = value.substring(0, selectionStart);\n\n      if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n        // Prevent default delete behaviour\n        e.preventDefault();\n\n        const updatedSelection = selectionStart - tabCharacter.length;\n\n        this._applyEdits({\n          // Remove tab character at caret\n          value:\n            value.substring(0, selectionStart - tabCharacter.length) +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart: updatedSelection,\n          selectionEnd: updatedSelection,\n        });\n      }\n    } else if (e.keyCode === KEYCODE_ENTER) {\n      // Ignore selections\n      if (selectionStart === selectionEnd) {\n        // Get the current line\n        const line = this._getLines(value, selectionStart).pop();\n        const matches = line.match(/^\\s+/);\n\n        if (matches && matches[0]) {\n          e.preventDefault();\n\n          // Preserve indentation on inserting a new line\n          const indent = '\\n' + matches[0];\n          const updatedSelection = selectionStart + indent.length;\n\n          this._applyEdits({\n            // Insert indentation character at caret\n            value:\n              value.substring(0, selectionStart) +\n              indent +\n              value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      }\n    } else if (\n      e.keyCode === KEYCODE_PARENS ||\n      e.keyCode === KEYCODE_BRACKETS ||\n      e.keyCode === KEYCODE_QUOTE ||\n      e.keyCode === KEYCODE_BACK_QUOTE\n    ) {\n      let chars;\n\n      if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n        chars = ['(', ')'];\n      } else if (e.keyCode === KEYCODE_BRACKETS) {\n        if (e.shiftKey) {\n          chars = ['{', '}'];\n        } else {\n          chars = ['[', ']'];\n        }\n      } else if (e.keyCode === KEYCODE_QUOTE) {\n        if (e.shiftKey) {\n          chars = ['\"', '\"'];\n        } else {\n          chars = [\"'\", \"'\"];\n        }\n      } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n        chars = ['`', '`'];\n      }\n\n      // If text is selected, wrap them in the characters\n      if (selectionStart !== selectionEnd && chars) {\n        e.preventDefault();\n\n        this._applyEdits({\n          value:\n            value.substring(0, selectionStart) +\n            chars[0] +\n            value.substring(selectionStart, selectionEnd) +\n            chars[1] +\n            value.substring(selectionEnd),\n          // Update caret position\n          selectionStart,\n          selectionEnd: selectionEnd + 2,\n        });\n      }\n    } else if (\n      (isMacLike\n        ? // Trigger undo with ⌘+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z\n        : // Trigger undo with Ctrl+Z on other platforms\n          e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n      !e.shiftKey &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._undoEdit();\n    } else if (\n      (isMacLike\n        ? // Trigger redo with ⌘+Shift+Z on Mac\n          e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n        : isWindows\n          ? // Trigger redo with Ctrl+Y on Windows\n            e.ctrlKey && e.keyCode === KEYCODE_Y\n          : // Trigger redo with Ctrl+Shift+Z on other platforms\n            e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n      !e.altKey\n    ) {\n      e.preventDefault();\n\n      this._redoEdit();\n    } else if (\n      e.keyCode === KEYCODE_M &&\n      e.ctrlKey &&\n      (isMacLike ? e.shiftKey : true)\n    ) {\n      e.preventDefault();\n\n      // Toggle capturing tab key so users can focus away\n      this.setState(state => ({\n        capture: !state.capture,\n      }));\n    }\n  };\n\n  _handleChange = (e: *) => {\n    const { value, selectionStart, selectionEnd } = e.target;\n\n    this._recordChange(\n      {\n        value,\n        selectionStart,\n        selectionEnd,\n      },\n      true\n    );\n\n    this.props.onValueChange(value);\n  };\n\n  _history: History = {\n    stack: [],\n    offset: -1,\n  };\n\n  _input: ?HTMLTextAreaElement;\n\n  get session() {\n    return {\n      history: this._history,\n    };\n  }\n\n  set session(session: { history: History }) {\n    this._history = session.history;\n  }\n\n  render() {\n    const {\n      value,\n      style,\n      padding,\n      highlight,\n      textareaId,\n      autoFocus,\n      disabled,\n      form,\n      maxLength,\n      minLength,\n      name,\n      placeholder,\n      readOnly,\n      required,\n      onClick,\n      onFocus,\n      onBlur,\n      onKeyUp,\n      /* eslint-disable no-unused-vars */\n      onKeyDown,\n      onValueChange,\n      tabSize,\n      insertSpaces,\n      ignoreTabKey,\n      /* eslint-enable no-unused-vars */\n      ...rest\n    } = this.props;\n\n    const contentStyle = {\n      paddingTop: padding,\n      paddingRight: padding,\n      paddingBottom: padding,\n      paddingLeft: padding,\n    };\n\n    const highlighted = highlight(value);\n\n    return (\n      <div {...rest} style={{ ...styles.container, ...style }}>\n        <textarea\n          ref={c => (this._input = c)}\n          style={{\n            ...styles.editor,\n            ...styles.textarea,\n            ...contentStyle,\n          }}\n          className={className}\n          id={textareaId}\n          value={value}\n          onChange={this._handleChange}\n          onKeyDown={this._handleKeyDown}\n          onClick={onClick}\n          onKeyUp={onKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          disabled={disabled}\n          form={form}\n          maxLength={maxLength}\n          minLength={minLength}\n          name={name}\n          placeholder={placeholder}\n          readOnly={readOnly}\n          required={required}\n          autoFocus={autoFocus}\n          autoCapitalize=\"off\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          spellCheck={false}\n          data-gramm={false}\n        />\n        <pre\n          aria-hidden=\"true\"\n          style={{ ...styles.editor, ...styles.highlight, ...contentStyle }}\n          {...(typeof highlighted === 'string'\n            ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } }\n            : { children: highlighted })}\n        />\n        {/* eslint-disable-next-line react/no-danger */}\n        <style type=\"text/css\" dangerouslySetInnerHTML={{ __html: cssText }} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden',\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent',\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none',\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'inherit',\n    wordBreak: 'inherit',\n  },\n};\n","import React, { useEffect, useState } from 'react'\nimport { useDebounce } from '@jbrowse/core/util'\nimport { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings'\nimport {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  Tooltip,\n  IconButton,\n  makeStyles,\n} from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\nimport { getEnv } from 'mobx-state-tree'\nimport { observer, PropTypes } from 'mobx-react'\nimport Editor from 'react-simple-code-editor'\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n\n// Optimize by using system default fonts:\n// https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles(theme => ({\n  callbackEditor: {\n    marginTop: '16px',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    fontFamily,\n    fontSize,\n  },\n}))\n\nfunction CallbackEditor({ slot }) {\n  const classes = useStyles()\n\n  const [code, setCode] = useState(slot.value)\n  const [error, setCodeError] = useState()\n  const debouncedCode = useDebounce(code, 400)\n\n  useEffect(() => {\n    try {\n      const jexlDebouncedCode = debouncedCode.startsWith('jexl:')\n        ? debouncedCode\n        : `jexl:${debouncedCode}`\n      stringToJexlExpression(\n        jexlDebouncedCode,\n        getEnv(slot).pluginManager?.jexl,\n      )\n      slot.set(jexlDebouncedCode)\n      setCodeError(null)\n    } catch (e) {\n      console.error({ e })\n      setCodeError(e)\n    }\n  }, [debouncedCode, slot])\n\n  // if default value is a callback, will have to remove jexl:\n  // do this last\n  return (\n    <>\n      <FormControl>\n        <InputLabel shrink htmlFor=\"callback-editor\">\n          {slot.name}\n        </InputLabel>\n        <Editor\n          className={classes.callbackEditor}\n          value={code.startsWith('jexl:') ? code.split('jexl:')[1] : code}\n          onValueChange={newCode => setCode(newCode)}\n          highlight={newCode => newCode}\n          padding={10}\n          style={{ background: error ? '#fdd' : undefined }}\n        />\n        {error ? (\n          <FormHelperText\n            style={{ color: '#f00' }}\n          >{`${error}`}</FormHelperText>\n        ) : null}\n        <FormHelperText>{slot.description}</FormHelperText>\n      </FormControl>\n      <Tooltip\n        title={\n          <div>\n            Callbacks are written in Jexl format. Click to learn more.\n            <br /> Names of available context items: {slot.contextVariable}\n          </div>\n        }\n        arrow\n      >\n        <IconButton\n          color=\"primary\"\n          onClick={() => {\n            const newWindow = window.open(\n              'https://github.com/TomFrost/Jexl',\n              '_blank',\n              'noopener,noreferrer',\n            )\n            if (newWindow) {\n              newWindow.opener = null\n            }\n          }}\n        >\n          <HelpIcon />\n        </IconButton>\n      </Tooltip>\n    </>\n  )\n}\nCallbackEditor.propTypes = {\n  slot: PropTypes.objectOrObservableObject.isRequired,\n}\nexport default observer(CallbackEditor)\n","import React, { lazy, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport { Color, RGBColor } from 'react-color'\n\nconst ColorPicker = lazy(() => import('./ColorPicker'))\n\n// this is needed because passing a entire color object into the react-color\n// for alpha, can't pass in an rgba string for example\nfunction serializeColor(color: Color) {\n  if (color instanceof Object) {\n    const { r, g, b, a } = color as RGBColor\n    return a === undefined ? `rgb(${r},${g},${b})` : `rgba(${r},${g},${b},${a})`\n  }\n  return color\n}\n\nexport const ColorSlot = (props: {\n  value: string\n  label: string\n  TextFieldProps: {\n    helperText: string\n    fullWidth: boolean\n  }\n  onChange: (arg: string) => void\n}) => {\n  const { value, label, TextFieldProps, onChange } = props\n  const [displayed, setDisplayed] = useState(false)\n\n  return (\n    <>\n      <TextField\n        value={value}\n        label={label}\n        InputProps={{\n          style: {\n            color: value,\n            borderRightWidth: '25px',\n            borderRightStyle: 'solid',\n            borderRightColor: value,\n          },\n        }}\n        onClick={() => setDisplayed(!displayed)}\n        onChange={event => {\n          onChange(event.target.value)\n        }}\n        {...TextFieldProps}\n      />\n      {displayed ? (\n        <React.Suspense fallback={<div />}>\n          <ColorPicker\n            color={value}\n            onChange={event => {\n              onChange(serializeColor(event.rgb))\n            }}\n          />\n        </React.Suspense>\n      ) : null}\n    </>\n  )\n}\nColorSlot.propTypes = {\n  onChange: ReactPropTypes.func.isRequired,\n  label: ReactPropTypes.string,\n  TextFieldProps: ReactPropTypes.shape({}),\n  value: ReactPropTypes.string,\n}\nColorSlot.defaultProps = {\n  label: '',\n  value: '#000',\n  TextFieldProps: {},\n}\n\nfunction ColorEditorSlot(props: {\n  slot: {\n    name: string\n    value: string\n    description: string\n    set: (arg: string) => void\n  }\n}) {\n  const { slot } = props\n  return (\n    <ColorSlot\n      label={slot.name}\n      value={slot.value}\n      onChange={(color: string) => {\n        slot.set(color)\n      }}\n      TextFieldProps={{\n        helperText: slot.description,\n        fullWidth: true,\n      }}\n    />\n  )\n}\nColorEditorSlot.propTypes = {\n  slot: ReactPropTypes.shape({\n    name: ReactPropTypes.string.isRequired,\n    description: ReactPropTypes.string,\n    value: ReactPropTypes.string.isRequired,\n    set: ReactPropTypes.func.isRequired,\n  }).isRequired,\n}\nexport default observer(ColorEditorSlot)\n","import React, { useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getPropertyMembers, getEnv } from 'mobx-state-tree'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport {\n  getPropertyType,\n  getSubType,\n  getUnionSubTypes,\n} from '@jbrowse/core/util/mst-reflection'\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  List,\n  ListItem,\n  MenuItem,\n  Paper,\n  SvgIcon,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\n// icons\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddIcon from '@material-ui/icons/Add'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\n\n// locals\nimport CallbackEditor from './CallbackEditor'\nimport ColorEditor from './ColorEditor'\nimport JsonEditor from './JsonEditor'\n\nconst StringEditor = observer(({ slot }) => (\n  <TextField\n    label={slot.name}\n    // error={filterError}\n    helperText={slot.description}\n    fullWidth\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\nconst TextEditor = observer(({ slot }) => (\n  <TextField\n    label={slot.name}\n    helperText={slot.description}\n    fullWidth\n    multiline\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\n// checked checkbox, looks like a styled (x)\nconst SvgCheckbox = () => (\n  <SvgIcon>\n    <path d=\"M20.41,3C21.8,5.71 22.35,8.84 22,12C21.8,15.16 20.7,18.29 18.83,21L17.3,20C18.91,17.57 19.85,14.8 20,12C20.34,9.2 19.89,6.43 18.7,4L20.41,3M5.17,3L6.7,4C5.09,6.43 4.15,9.2 4,12C3.66,14.8 4.12,17.57 5.3,20L3.61,21C2.21,18.29 1.65,15.17 2,12C2.2,8.84 3.3,5.71 5.17,3M12.08,10.68L14.4,7.45H16.93L13.15,12.45L15.35,17.37H13.09L11.71,14L9.28,17.33H6.76L10.66,12.21L8.53,7.45H10.8L12.08,10.68Z\" />\n  </SvgIcon>\n)\n\nconst StringArrayEditor = observer(({ slot }) => {\n  const [value, setValue] = useState('')\n  return (\n    <>\n      {slot.name ? <InputLabel>{slot.name}</InputLabel> : null}\n      <List disablePadding>\n        {slot.value.map((val, idx) => (\n          <ListItem key={idx} disableGutters>\n            <TextField\n              value={val}\n              onChange={evt => slot.setAtIndex(idx, evt.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      color=\"secondary\"\n                      onClick={() => slot.removeAtIndex(idx)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </ListItem>\n        ))}\n        <ListItem disableGutters>\n          <TextField\n            value={value}\n            placeholder=\"add new\"\n            onChange={event => setValue(event.target.value)}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      slot.add(value)\n                      setValue('')\n                    }}\n                    disabled={value === ''}\n                    color=\"secondary\"\n                    data-testid={`stringArrayAdd-${slot.name}`}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </ListItem>\n      </List>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst useMapEditorStyles = makeStyles(theme => ({\n  card: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst StringArrayMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <StringArrayEditor\n              slot={{\n                value: val,\n                description: `Values associated with entry ${key}`,\n                setAtIndex: (idx, strValue) => {\n                  slot.setAtKeyIndex(key, idx, strValue)\n                },\n                removeAtIndex: idx => {\n                  slot.removeAtKeyIndex(key, idx)\n                },\n                add: strValue => {\n                  slot.addToKey(key, strValue)\n                },\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, [])\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <NumberEditor\n              slot={{\n                value: val,\n                set: numValue => slot.add(key, numValue),\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, 0)\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseFloat(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    } else {\n      slot.reset()\n    }\n  }, [slot, val])\n  return (\n    <TextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst IntegerEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseInt(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    }\n  }, [slot, val])\n  return (\n    <TextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst booleanEditor = observer(({ slot }) => (\n  <FormControl>\n    <FormControlLabel\n      label={slot.name}\n      control={\n        <Checkbox\n          checked={slot.value}\n          onChange={evt => slot.set(evt.target.checked)}\n        />\n      }\n    />\n    <FormHelperText>{slot.description}</FormHelperText>\n  </FormControl>\n))\n\nconst stringEnumEditor = observer(({ slot, slotSchema }) => {\n  const p = getPropertyMembers(getSubType(slotSchema))\n  const choices = getUnionSubTypes(\n    getUnionSubTypes(getSubType(getPropertyType(p, 'value')))[1],\n  ).map(t => t.value)\n\n  return (\n    <TextField\n      value={slot.value}\n      label={slot.name}\n      select\n      // error={filterError}\n      helperText={slot.description}\n      fullWidth\n      onChange={evt => slot.set(evt.target.value)}\n    >\n      {choices.map(str => (\n        <MenuItem key={str} value={str}>\n          {str}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nconst FileSelectorWrapper = observer(({ slot }) => {\n  return (\n    <FileSelector\n      location={slot.value}\n      setLocation={location => slot.set(location)}\n      name={slot.name}\n      description={slot.description}\n      rootModel={getEnv(slot).pluginManager?.rootModel}\n    />\n  )\n})\n\nconst valueComponents = {\n  string: StringEditor,\n  text: TextEditor,\n  fileLocation: FileSelectorWrapper,\n  stringArray: StringArrayEditor,\n  stringArrayMap: StringArrayMapEditor,\n  numberMap: NumberMapEditor,\n  number: NumberEditor,\n  integer: IntegerEditor,\n  color: ColorEditor,\n  stringEnum: stringEnumEditor,\n  boolean: booleanEditor,\n  frozen: JsonEditor,\n  configRelationships: JsonEditor,\n}\n\nexport const useSlotEditorStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    marginBottom: theme.spacing(2),\n    position: 'relative',\n  },\n  paperContent: {\n    width: '100%',\n  },\n  slotModeSwitch: {\n    width: 24,\n    background: theme.palette.secondary.light,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))\n\nconst SlotEditor = observer(({ slot, slotSchema }) => {\n  const classes = useSlotEditorStyles()\n  const { type } = slot\n  let ValueComponent = slot.isCallback ? CallbackEditor : valueComponents[type]\n  if (!ValueComponent) {\n    console.warn(`no slot editor defined for ${type}, editing as string`)\n    ValueComponent = StringEditor\n  }\n  if (!(type in valueComponents)) {\n    console.warn(`SlotEditor needs to implement ${type}`)\n  }\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.paperContent}>\n        <ValueComponent slot={slot} slotSchema={slotSchema} />\n      </div>\n      <div className={classes.slotModeSwitch}>\n        {slot.contextVariable.length ? (\n          <IconButton\n            className={classes.slotModeIcon}\n            onClick={() =>\n              slot.isCallback ? slot.convertToValue() : slot.convertToCallback()\n            }\n            title={`convert to ${\n              slot.isCallback ? 'regular value' : 'callback'\n            }`}\n            color=\"secondary\"\n          >\n            {!slot.isCallback ? <RadioButtonUncheckedIcon /> : <SvgCheckbox />}\n          </IconButton>\n        ) : null}\n      </div>\n    </Paper>\n  )\n})\n\nexport default SlotEditor\n","import MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { useSlotEditorStyles } from './SlotEditor'\n\nconst TypeSelector = observer(\n  ({ typeNameChoices, slot, slotName, onChange }) => {\n    const classes = useSlotEditorStyles()\n    return (\n      <Paper className={classes.paper}>\n        <div className={classes.paperContent}>\n          <TextField\n            value={slot.type}\n            label=\"Type\"\n            select\n            // error={filterError}\n            helperText={`Type of ${slotName} to use`}\n            fullWidth\n            onChange={onChange}\n          >\n            {typeNameChoices.map(str => (\n              <MenuItem key={str} value={str}>\n                {str}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n      </Paper>\n    )\n  },\n)\n\nexport default TypeSelector\n","import React from 'react'\nimport {\n  readConfObject,\n  getTypeNamesFromExplicitlyTypedUnion,\n  isConfigurationSchemaType,\n  isConfigurationSlotType,\n} from '@jbrowse/core/configuration'\nimport {\n  FormGroup,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { observer } from 'mobx-react'\nimport { getMembers } from 'mobx-state-tree'\nimport { singular } from 'pluralize'\n\n// icons\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\n// locals\nimport SlotEditor from './SlotEditor'\nimport TypeSelector from './TypeSelector'\n\nconst useStyles = makeStyles(theme => ({\n  expandIcon: {\n    color: '#fff',\n  },\n  root: {\n    padding: theme.spacing(1, 3, 1, 1),\n  },\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n\n  accordion: {\n    border: `1px solid ${theme.palette.text.primary}`,\n  },\n}))\n\nconst Member = observer(props => {\n  const classes = useStyles()\n  const {\n    slotName,\n    slotSchema,\n    schema,\n    slot = schema[slotName],\n    path = [],\n  } = props\n  let typeSelector\n  if (isConfigurationSchemaType(slotSchema)) {\n    if (slot.length) {\n      return slot.map((subslot, slotIndex) => {\n        const key = `${singular(slotName)} ${slotIndex + 1}`\n        return <Member {...props} key={key} slot={subslot} slotName={key} />\n      })\n    }\n    // if this is an explicitly typed schema, make a type-selecting dropdown\n    // that can be used to change its type\n    const typeNameChoices = getTypeNamesFromExplicitlyTypedUnion(slotSchema)\n    if (typeNameChoices.length) {\n      typeSelector = (\n        <TypeSelector\n          typeNameChoices={typeNameChoices}\n          slotName={slotName}\n          slot={slot}\n          onChange={evt => {\n            if (evt.target.value !== slot.type) {\n              schema.setSubschema(slotName, { type: evt.target.value })\n            }\n          }}\n        />\n      )\n    }\n    return (\n      <Accordion\n        defaultExpanded\n        className={classes.accordion}\n        TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n        >\n          <Typography>{[...path, slotName].join('🡒')}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.expansionPanelDetails}>\n          {typeSelector}\n          <FormGroup>\n            <Schema schema={slot} path={[...path, slotName]} />\n          </FormGroup>\n        </AccordionDetails>\n      </Accordion>\n    )\n  }\n\n  if (isConfigurationSlotType(slotSchema)) {\n    // this is a regular config slot\n    return <SlotEditor key={slotName} slot={slot} slotSchema={slotSchema} />\n  }\n\n  return null\n})\n\nconst Schema = observer(({ schema, path = [] }) => {\n  const properties = getMembers(schema).properties\n  return Object.entries(properties).map(([slotName, slotSchema]) => (\n    <Member\n      key={slotName}\n      slotName={slotName}\n      slotSchema={slotSchema}\n      path={path}\n      schema={schema}\n    />\n  ))\n})\n\nconst ConfigurationEditor = observer(({ model }) => {\n  const classes = useStyles()\n  // key forces a re-render, otherwise the same field can end up being used\n  // for different tracks since only the backing model changes for example\n  // see pr #804\n  const key = model.target && readConfObject(model.target, 'trackId')\n  const name = model.target && readConfObject(model.target, 'name')\n  return (\n    <Accordion\n      key={key}\n      defaultExpanded\n      className={classes.accordion}\n      TransitionProps={{ unmountOnExit: true, timeout: 150 }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n      >\n        <Typography>{name ? name : 'Configuration'}</Typography>\n      </AccordionSummary>\n      <AccordionDetails\n        className={classes.expansionPanelDetails}\n        data-testid=\"configEditor\"\n      >\n        {!model.target ? 'no target set' : <Schema schema={model.target} />}\n      </AccordionDetails>\n    </Accordion>\n  )\n})\n\nexport default ConfigurationEditor\n"],"sourceRoot":""}