{"version":3,"sources":["../../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../../../node_modules/@babel/runtime/helpers/inheritsLoose.js","../../../node_modules/react-virtualized-auto-sizer/dist/index.esm.js","../../../node_modules/@material-ui/icons/MoreHoriz.js","../../../node_modules/@material-ui/icons/PowerOutlined.js","../../../node_modules/memoize-one/dist/memoize-one.esm.js","../../src/timer.js","../../src/domHelpers.js","../../src/createGridComponent.js","../../src/createListComponent.js","../../src/VariableSizeList.js","../../src/index.tsx","../../../node_modules/react-vtree/dist/es/utils.js","../../../node_modules/react-vtree/dist/es/Tree.js","../../../node_modules/react-vtree/dist/es/VariableSizeTree.js","../../../node_modules/react-vtree/dist/es/FixedSizeTree.js","../../../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../../node_modules/@babel/runtime/helpers/extends.js"],"names":["module","exports","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","__esModule","setPrototypeOf","subClass","superClass","prototype","create","constructor","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","_extends","assign","arguments","hasOwnProperty","call","possibleConstructorReturn","self","ReferenceError","slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","sliceIterator","windowObject","window","global","cancelFrame","requestFrame","clearTimeoutFn","clearTimeout","setTimeoutFn","setTimeout","cancelAnimationFrameFn","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","requestAnimationFrameFn","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","createDetectElementResize","nonce","animationKeyframes","animationName","animationStartEvent","animationStyle","checkTriggers","resetTriggers","scrollListener","attachEvent","document","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","width","offsetWidth","height","offsetHeight","__resizeLast__","e","className","this","__resizeRAF__","__resizeListeners__","forEach","fn","animation","keyframeprefix","domPrefixes","split","startEvents","elm","createElement","toLowerCase","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","id","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","expandTrigger","contractTrigger","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","callback","_ref","_ref2","animationFrameID","timeoutID","AutoSizer","_React$PureComponent","_temp","_this","_len","args","_key","__proto__","getPrototypeOf","apply","concat","state","defaultHeight","defaultWidth","_onResize","_this$props","disableHeight","disableWidth","onResize","_parentNode","_height","_width","_style","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","setState","_setRef","autoSizer","_autoSizer","inherits","parentNode","defaultView","HTMLElement","_detectElementResize","_props","children","_state","outerStyle","overflow","childParams","bailoutOnChildren","ref","PureComponent","defaultProps","_interopRequireDefault","require","_interopRequireWildcard","default","React","_default","d","safeIsNaN","Number","isNaN","areInputsEqual","newInputs","lastInputs","first","second","memoizeOne","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","now","performance","Date","cancelTimeout","requestTimeout","start","cachedRTLResult","getRTLOffsetType","recalculate","outerDiv","innerDiv","innerStyle","defaultItemKey","index","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","isScrolling","scrollDirection","scrollOffset","scrollUpdateWasRequested","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","direction","itemSize","layout","itemStyleCache","offset","size","isHorizontal","isRtl","offsetHorizontal","left","right","top","event","clientWidth","prevState","Math","clientHeight","outerRef","validateSharedProps","nextProps","align","itemCount","initialScrollOffset","innerRef","innerElementType","innerTagName","itemData","itemKey","outerElementType","outerTagName","useIsScrolling","onScroll","startIndex","stopIndex","items","data","_getItemStyle","estimatedTotalSize","WebkitOverflowScrolling","willChange","pointerEvents","overscanCount","overscanBackward","overscanForward","getItemMetadata","itemMetadataMap","instanceProps","lastMeasuredIndex","itemMetadata","findNearestItemBinarySearch","low","middle","high","currentOffset","findNearestItemExponentialSearch","interval","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","maxOffset","minOffset","findNearestItem","shouldForceUpdate","refs","noop","createBasicRecord","pub","parent","child","isShown","public","isOpen","sibling","visited","getIdByIndex","getRecordData","createTreeComputer","creatorOptions","options","refresh","_ref3","createRecord","buildingTaskTimeout","placeholder","_ref3$async","async","treeWalker","shouldPreservePreviousState","records","previousRecords","order","Map","requestIdleCallbackOptions","timeout","meta","WeakMap","iter","root","rootRecord","get","set","currentRecord","isTraversingRoot","tempRecord","useIdleCallback","hasTime","deadline","timeRemaining","task","requestIdleCallback","childRecord","updateRequest","generateNewTree","_ref4","_ref5","opennessState","has","opts","ownerRecord","_ref6","open","_ref6$subtreeCallback","subtreeCallback","update","recordNextToSubtree","countToRemove","orderParts","record","currentOrderPart","MAX_FUNCTION_ARGUMENTS","_ref7","count","updateExistingTree","Tree","_PureComponent","context","bind","_assertThisInitialized","list","createRef","recomputeTree","_inheritsLoose","getDerivedStateFromProps","_props$listRef","listRef","computeTree","oldTreeWalker","attachRefs","mergeRefs","_proto","getItemData","component","treeData","_this$state","_this2","Promise","resolve","scrollTo","_this$state$list$curr","current","scrollToItem","_this$state$list$curr2","rowComponent","_ref$data","Node","previousRecord","isOpenByDefault","setOpen","_recomputeTree","resetAfterId","resize","VariableSizeTree","_Tree","_list$current","resetAfterIndex","then","_this2$state$list$cur","render","rest","_objectWithoutPropertiesLoose","_this$state2","_setPrototypeOf","o","p"],"mappings":"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","file":"static/js/31.f9364a4d.chunk.js","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inheritsLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import { createElement, PureComponent } from 'react';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n **/\n\n// Check `document` and `window` in case of server-side rendering\nvar windowObject = void 0;\nif (typeof window !== 'undefined') {\n  windowObject = window;\n\n  // eslint-disable-next-line no-restricted-globals\n} else if (typeof self !== 'undefined') {\n  // eslint-disable-next-line no-restricted-globals\n  windowObject = self;\n} else {\n  windowObject = global;\n}\n\nvar cancelFrame = null;\nvar requestFrame = null;\n\nvar TIMEOUT_DURATION = 20;\n\nvar clearTimeoutFn = windowObject.clearTimeout;\nvar setTimeoutFn = windowObject.setTimeout;\n\nvar cancelAnimationFrameFn = windowObject.cancelAnimationFrame || windowObject.mozCancelAnimationFrame || windowObject.webkitCancelAnimationFrame;\n\nvar requestAnimationFrameFn = windowObject.requestAnimationFrame || windowObject.mozRequestAnimationFrame || windowObject.webkitRequestAnimationFrame;\n\nif (cancelAnimationFrameFn == null || requestAnimationFrameFn == null) {\n  // For environments that don't support animation frame,\n  // fallback to a setTimeout based approach.\n  cancelFrame = clearTimeoutFn;\n  requestFrame = function requestAnimationFrameViaSetTimeout(callback) {\n    return setTimeoutFn(callback, TIMEOUT_DURATION);\n  };\n} else {\n  // Counter intuitively, environments that support animation frames can be trickier.\n  // Chrome's \"Throttle non-visible cross-origin iframes\" flag can prevent rAFs from being called.\n  // In this case, we should fallback to a setTimeout() implementation.\n  cancelFrame = function cancelFrame(_ref) {\n    var _ref2 = slicedToArray(_ref, 2),\n        animationFrameID = _ref2[0],\n        timeoutID = _ref2[1];\n\n    cancelAnimationFrameFn(animationFrameID);\n    clearTimeoutFn(timeoutID);\n  };\n  requestFrame = function requestAnimationFrameWithSetTimeoutFallback(callback) {\n    var animationFrameID = requestAnimationFrameFn(function animationFrameCallback() {\n      clearTimeoutFn(timeoutID);\n      callback();\n    });\n\n    var timeoutID = setTimeoutFn(function timeoutCallback() {\n      cancelAnimationFrameFn(animationFrameID);\n      callback();\n    }, TIMEOUT_DURATION);\n\n    return [animationFrameID, timeoutID];\n  };\n}\n\nfunction createDetectElementResize(nonce) {\n  var animationKeyframes = void 0;\n  var animationName = void 0;\n  var animationStartEvent = void 0;\n  var animationStyle = void 0;\n  var checkTriggers = void 0;\n  var resetTriggers = void 0;\n  var scrollListener = void 0;\n\n  var attachEvent = typeof document !== 'undefined' && document.attachEvent;\n  if (!attachEvent) {\n    resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth !== element.__resizeLast__.width || element.offsetHeight !== element.__resizeLast__.height;\n    };\n\n    scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n      this.__resizeRAF__ = requestFrame(function animationFrame() {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n          element.__resizeListeners__.forEach(function forEachResizeListener(fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n\n    /* Detect CSS Animations support to detect element display/re-attach */\n    var animation = false;\n    var keyframeprefix = '';\n    animationStartEvent = 'animationstart';\n    var domPrefixes = 'Webkit Moz O ms'.split(' ');\n    var startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' ');\n    var pfx = '';\n    {\n      var elm = document.createElement('fakeelement');\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationStartEvent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n\n    animationName = 'resizeanim';\n    animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n        var elementStyle = windowObject.getComputedStyle(element);\n        if (elementStyle && elementStyle.position === 'static') {\n          element.style.position = 'relative';\n        }\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var expandTrigger = doc.createElement('div');\n        expandTrigger.className = 'expand-trigger';\n        expandTrigger.appendChild(doc.createElement('div'));\n        var contractTrigger = doc.createElement('div');\n        contractTrigger.className = 'contract-trigger';\n        element.__resizeTriggers__.appendChild(expandTrigger);\n        element.__resizeTriggers__.appendChild(contractTrigger);\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n\n        /* Listen for a css animation to detect element display/re-attach */\n        if (animationStartEvent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName === animationName) {\n              resetTriggers(element);\n            }\n          };\n          element.__resizeTriggers__.addEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {\n          // Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}\n\nvar AutoSizer = function (_React$PureComponent) {\n  inherits(AutoSizer, _React$PureComponent);\n\n  function AutoSizer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = AutoSizer.__proto__ || Object.getPrototypeOf(AutoSizer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    }, _this._onResize = function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n\n        var _height = _this._parentNode.offsetHeight || 0;\n        var _width = _this._parentNode.offsetWidth || 0;\n\n        var _style = window.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(_style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(_style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(_style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(_style.paddingBottom, 10) || 0;\n\n        var newHeight = _height - paddingTop - paddingBottom;\n        var newWidth = _width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: _height - paddingTop - paddingBottom,\n            width: _width - paddingLeft - paddingRight\n          });\n\n          onResize({ height: _height, width: _width });\n        }\n      }\n    }, _this._setRef = function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(AutoSizer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n\n        // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n        this._detectElementResize = createDetectElementResize(nonce);\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeight = _props.disableHeight,\n          disableWidth = _props.disableWidth,\n          style = _props.style;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n\n      // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = { overflow: 'visible' };\n      var childParams = {};\n\n      // Avoid rendering children before the initial measurements have been collected.\n      // At best this would just be wasting cycles.\n      var bailoutOnChildren = false;\n\n      if (!disableHeight) {\n        if (height === 0) {\n          bailoutOnChildren = true;\n        }\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        if (width === 0) {\n          bailoutOnChildren = true;\n        }\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n\n      return createElement(\n        'div',\n        {\n          className: className,\n          ref: this._setRef,\n          style: _extends({}, outerStyle, style)\n        },\n        !bailoutOnChildren && children(childParams)\n      );\n    }\n  }]);\n  return AutoSizer;\n}(PureComponent);\n\nAutoSizer.defaultProps = {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n};\n\nexport default AutoSizer;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 9v4.66l-3.5 3.51V19h-1v-1.83L8 13.65V9h8m0-6h-2v4h-4V3H8v4h-.01C6.9 6.99 6 7.89 6 8.98v5.52L9.5 18v3h5v-3l3.5-3.51V9c0-1.1-.9-2-2-2V3z\"\n}), 'PowerOutlined');\n\nexports.default = _default;","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        columnCount,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        outerTagName,\n        rowCount,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      const items = [];\n      if (columnCount > 0 && rowCount) {\n        for (\n          let rowIndex = rowStartIndex;\n          rowIndex <= rowStopIndex;\n          rowIndex++\n        ) {\n          for (\n            let columnIndex = columnStartIndex;\n            columnIndex <= columnStopIndex;\n            columnIndex++\n          ) {\n            items.push(\n              createElement(children, {\n                columnIndex,\n                data: itemData,\n                isScrolling: useIsScrolling ? isScrolling : undefined,\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\n                rowIndex,\n                style: this._getItemStyle(rowIndex, columnIndex),\n              })\n            );\n          }\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll: this._onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: estimatedTotalHeight,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: estimatedTotalWidth,\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        const offset = getColumnOffset(\n          this.props,\n          columnIndex,\n          this._instanceProps\n        );\n        const isRtl = direction === 'rtl';\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offset,\n          right: isRtl ? offset : undefined,\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const isRtl = direction === 'rtl';\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offsetHorizontal,\n          right: isRtl ? offsetHorizontal : undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, itemCount, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","import * as React from \"react\";\n\nexport default function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport var noop = function noop() {};\nexport var identity = function identity(value) {\n  return value;\n};\nexport var createBasicRecord = function createBasicRecord(pub, parent) {\n  if (parent === void 0) {\n    parent = null;\n  }\n\n  return {\n    child: null,\n    isShown: parent ? parent.public.isOpen && parent.isShown : true,\n    parent: parent,\n    public: pub,\n    sibling: null,\n    visited: false\n  };\n};\nexport var getIdByIndex = function getIdByIndex(index, _ref) {\n  var getRecordData = _ref.getRecordData;\n\n  var _getRecordData = getRecordData(index),\n      id = _getRecordData.data.id;\n\n  return id;\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\n\n/* eslint-disable no-labels,max-depth,complexity */\nimport React, { createRef, PureComponent } from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { noop } from './utils';\n// eslint-disable-next-line @typescript-eslint/naming-convention,@typescript-eslint/prefer-readonly-parameter-types\nexport var Row = function Row(_ref) {\n  var index = _ref.index,\n      _ref$data = _ref.data,\n      Node = _ref$data.component,\n      getRecordData = _ref$data.getRecordData,\n      treeData = _ref$data.treeData,\n      style = _ref.style,\n      isScrolling = _ref.isScrolling;\n  var data = getRecordData(index);\n  return /*#__PURE__*/React.createElement(Node, Object.assign({\n    isScrolling: isScrolling,\n    style: style,\n    treeData: treeData\n  }, data));\n};\n\n// If refresh is required, we will run the TreeWalker. It will completely\n// update all requests and reset every state to default.\nvar generateNewTree = function generateNewTree(_ref2, _ref3, state) {\n  var createRecord = _ref2.createRecord;\n  var buildingTaskTimeout = _ref3.buildingTaskTimeout,\n      placeholder = _ref3.placeholder,\n      _ref3$async = _ref3.async,\n      async = _ref3$async === void 0 ? false : _ref3$async,\n      treeWalker = _ref3.treeWalker;\n  var shouldPreservePreviousState = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  async && state.records !== undefined;\n  var previousRecords = state.records;\n  var order = [];\n  var records = new Map();\n  var requestIdleCallbackOptions = buildingTaskTimeout ? {\n    timeout: buildingTaskTimeout\n  } : undefined;\n  var meta = new WeakMap();\n  var iter = treeWalker();\n\n  var _iter$next = iter.next(),\n      root = _iter$next.value; // Each record has a link to a parent, the next sibling and the next child.\n  // Having this info, we can perform a depth-first traverse.\n\n\n  var rootRecord = createRecord(root.data, state, undefined, shouldPreservePreviousState ? previousRecords.get(root.data.id) : undefined);\n  records.set(rootRecord.public.data.id, rootRecord);\n  meta.set(rootRecord, root);\n  var currentRecord = rootRecord;\n  var isTraversingRoot = true;\n  var tempRecord = rootRecord;\n  var useIdleCallback = typeof 'requestIdleCallback' !== 'undefined' && placeholder !== undefined && // If placeholder is set to null and this is the first build, idle callback\n  // won't be used. It is necessary for trees with async data which can be\n  // extremely complex but the first build is quite easy. During the following\n  // idle callbacks the old tree will be shown.\n  !(placeholder === null && !state.order);\n  var hasTime = useIdleCallback ? function (deadline) {\n    return deadline.timeRemaining() > 0;\n  } : function () {\n    return true;\n  };\n\n  var task = function task(deadline) {\n    while (currentRecord !== null) {\n      if (!hasTime(deadline)) {\n        requestIdleCallback(task, requestIdleCallbackOptions);\n        return;\n      }\n\n      if (!currentRecord.visited) {\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n        var _iter$next2 = iter.next(meta.get(currentRecord)),\n            child = _iter$next2.value; // When the generator returns the undefined value we consider that all\n        // children are already sent and we need to select the new parent\n        // element to get its children.\n\n\n        if (child === undefined) {\n          if (isTraversingRoot) {\n            isTraversingRoot = false;\n          } else {\n            if (currentRecord.isShown) {\n              order.push(currentRecord.public.data.id);\n            }\n\n            currentRecord.visited = currentRecord.child !== null;\n            currentRecord = currentRecord.child !== null ? currentRecord.child : currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n          }\n\n          tempRecord = currentRecord;\n          continue;\n        }\n\n        var childRecord = createRecord(child.data, state, isTraversingRoot ? undefined : currentRecord, shouldPreservePreviousState ? previousRecords.get(child.data.id) : undefined);\n        records.set(childRecord.public.data.id, childRecord);\n        meta.set(childRecord, child);\n\n        if (!isTraversingRoot && tempRecord === currentRecord) {\n          tempRecord.child = childRecord;\n        } else {\n          tempRecord.sibling = childRecord;\n        }\n\n        tempRecord = childRecord;\n      } else {\n        currentRecord.visited = false;\n        currentRecord = currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n        tempRecord = currentRecord;\n      }\n    }\n\n    if (useIdleCallback) {\n      state.setState({\n        order: order,\n        records: records,\n        updateRequest: {}\n      });\n    }\n  };\n\n  if (useIdleCallback) {\n    requestIdleCallback(task, requestIdleCallbackOptions);\n  } else {\n    task();\n  } // If we want to preserve the previous state and use the requestIdleCallback,\n  // we need to return the old state.\n\n\n  return placeholder !== undefined && async && state.order ? state : {\n    order: order,\n    records: records\n  };\n};\n\nvar MAX_FUNCTION_ARGUMENTS = 32768;\nvar SPLICE_DEFAULT_ARGUMENTS_NUMBER = 2; // If we need to perform only the update, treeWalker won't be used. Update will\n// work internally, traversing only the subtree of elements that require\n// update through the opennessState option.\n\nvar updateExistingTree = function updateExistingTree(_ref4, _ref5) {\n  var order = _ref4.order,\n      records = _ref4.records;\n  var opennessState = _ref5.opennessState;\n\n  if (typeof opennessState !== 'object') {\n    return null;\n  }\n\n  for (var id in opennessState) {\n    if (!records.has(id)) {\n      continue;\n    }\n\n    var opts = opennessState[id];\n    var ownerRecord = records.get(id); // Here we unify the shape of openness state options\n\n    var _ref6 = typeof opts === 'boolean' ? {\n      open: opts\n    } : opts,\n        open = _ref6.open,\n        _ref6$subtreeCallback = _ref6.subtreeCallback,\n        subtreeCallback = _ref6$subtreeCallback === void 0 ? noop : _ref6$subtreeCallback;\n\n    var update = noop;\n    var apply = noop;\n\n    if (ownerRecord.isShown) {\n      if (open) {\n        (function () {\n          // If received rules require us to open the subtree, we have 2 cases:\n          // 1. The node is not opened yet. In this case we simply have to\n          // calculate and add new ids.\n          // 2. The node is opened already. In this case we have to remove all\n          // existing ids and replace them with new ids.\n          var index = order.indexOf(id); // Here we calculate a count of visible subtree nodes to remove from\n          // `order`. Then we will replace the gap with the updated list of\n          // subtree nodes.\n\n          var recordNextToSubtree = ownerRecord;\n\n          while (recordNextToSubtree !== null) {\n            if (recordNextToSubtree.sibling !== null) {\n              recordNextToSubtree = recordNextToSubtree.sibling;\n              break;\n            }\n\n            recordNextToSubtree = recordNextToSubtree.parent;\n          }\n\n          var countToRemove = recordNextToSubtree === null ? order.length - 1 - index : order.indexOf(recordNextToSubtree.public.data.id) - 1 - index;\n          var orderParts = [[index + 1, countToRemove]]; // Unfortunately, splice cannot work with big arrays. If array exceeds\n          // some length it may fire an exception. The length is specific for\n          // each engine; e.g., MDN says about 65536 for Webkit. So, to avoid this\n          // overflow, I split `order` parts to chunks by 32768 elements in each\n          // one. These chunks will be sent as arguments to the `splice` method.\n          //\n          // To avoid array concatenations which may cause Major GC, I set two\n          // first arguments as `splice`'s `start` and `deleteCount` arguments.\n\n          update = function update(record) {\n            // We have to consider only the newly shown elements that are not in\n            // the order list yet. We should do it AFTER the visibility update\n            // happens because otherwise we won't be able to distinguish if the\n            // element should be included in the order list.\n            // Update record visibility\n            record.isShown = record.parent ? record.parent.public.isOpen && record.parent.isShown : true;\n\n            if (record.isShown) {\n              var currentOrderPart = orderParts[orderParts.length - 1];\n              currentOrderPart.push(record.public.data.id);\n\n              if (currentOrderPart.length === MAX_FUNCTION_ARGUMENTS + SPLICE_DEFAULT_ARGUMENTS_NUMBER) {\n                orderParts.push([index + 1 + MAX_FUNCTION_ARGUMENTS * orderParts.length, 0]);\n              }\n            }\n          };\n\n          apply = function apply() {\n            for (var i = 0; i < orderParts.length; i++) {\n              var _ref7;\n\n              // @ts-expect-error: too generic for TS\n              (_ref7 = order).splice.apply(_ref7, orderParts[i]);\n            }\n          };\n        })();\n      } else if (ownerRecord.public.isOpen) {\n        (function () {\n          // If received rules require us to close the subtree, we have to remove\n          // all subtree ids from the order list.\n          var index = order.indexOf(id);\n          var count = 0;\n\n          update = function update(record) {\n            // We have to consider only currently visible subtree nodes BEFORE\n            // their visibility is updated. Otherwise we will have incorrect\n            // number of items to remove: we cannot remove elements that are not\n            // in the order list.\n            //\n            // If we do it after the visibility update, we will be unable to\n            // understand if the element is still in the order list.\n            if (record.isShown) {\n              count += 1;\n            } // Update record visibility\n\n\n            record.isShown = record.parent ? record.parent.public.isOpen && record.parent.isShown : true;\n          };\n\n          apply = function apply() {\n            // Remove data after element with index\n            order.splice(index + 1, count);\n          };\n        })();\n      }\n    }\n\n    var currentRecord = ownerRecord;\n\n    while (currentRecord !== null) {\n      if (!currentRecord.visited) {\n        currentRecord.public.isOpen = currentRecord === ownerRecord ? open : currentRecord.public.isOpen;\n        subtreeCallback(currentRecord.public, ownerRecord.public);\n\n        if (currentRecord !== ownerRecord) {\n          update(currentRecord);\n        }\n\n        currentRecord.visited = currentRecord.child !== null; // This algorithm is a bit different from the visit algorithm in the\n        // tree generator. We are restricted with the bounds of a subtree and\n        // shouldn't go over it. So we cannot search for the ownerRecord's\n        // parent or sibling because it will lead us out of the subtree.\n\n        currentRecord = // Look for child in any case\n        currentRecord.child !== null ? currentRecord.child : // Stop looking for next element if currentRecord is root.\n        currentRecord === ownerRecord ? null : // Otherwise, look for sibling or parent\n        currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n      } else {\n        currentRecord.visited = false;\n        currentRecord = currentRecord === ownerRecord ? null : currentRecord.sibling !== null ? currentRecord.sibling : currentRecord.parent;\n      }\n    }\n\n    apply();\n  }\n\n  return {\n    order: order,\n    records: records,\n    updateRequest: {}\n  };\n};\n\nexport var createTreeComputer = function createTreeComputer(creatorOptions) {\n  return function (props, state, options) {\n    return options.refresh ? generateNewTree(creatorOptions, props, state) : updateExistingTree(state, options);\n  };\n};\n\nvar Tree = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(Tree, _PureComponent);\n\n  Tree.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    var _props$listRef = props.listRef,\n        listRef = _props$listRef === void 0 ? null : _props$listRef,\n        treeWalker = props.treeWalker;\n    var computeTree = state.computeTree,\n        list = state.list,\n        order = state.order,\n        oldTreeWalker = state.treeWalker;\n    return _extends({\n      attachRefs: mergeRefs([list, listRef])\n    }, treeWalker !== oldTreeWalker || !order ? computeTree(props, state, {\n      refresh: true\n    }) : null, {\n      treeWalker: treeWalker\n    });\n  };\n\n  function Tree(props, context) {\n    var _this;\n\n    _this = _PureComponent.call(this, props, context) || this;\n    _this.getRecordData = _this.getRecordData.bind(_assertThisInitialized(_this));\n    /* eslint-disable react/no-unused-state,@typescript-eslint/consistent-type-assertions */\n\n    _this.state = {\n      list: /*#__PURE__*/createRef(),\n      recomputeTree: _this.recomputeTree.bind(_assertThisInitialized(_this)),\n      setState: _this.setState.bind(_assertThisInitialized(_this))\n    };\n    /* eslint-enable react/no-unused-state,@typescript-eslint/consistent-type-assertions */\n\n    return _this;\n  }\n\n  var _proto = Tree.prototype;\n\n  _proto.getItemData = function getItemData() {\n    var _this$props = this.props,\n        component = _this$props.children,\n        treeData = _this$props.itemData;\n    return {\n      component: component,\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      getRecordData: this.getRecordData,\n      treeData: treeData\n    };\n  };\n\n  _proto.getRecordData = function getRecordData(index) {\n    var _this$state = this.state,\n        order = _this$state.order,\n        records = _this$state.records;\n    return records.get(order[index]).public;\n  };\n\n  _proto.recomputeTree = function recomputeTree(state) {\n    var _this2 = this;\n\n    return new Promise(function (resolve) {\n      _this2.setState(function (prevState) {\n        return prevState.computeTree(_this2.props, prevState, {\n          opennessState: state\n        });\n      }, resolve);\n    });\n  };\n\n  _proto.scrollTo = function scrollTo(scrollOffset) {\n    var _this$state$list$curr;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    (_this$state$list$curr = this.state.list.current) == null ? void 0 : _this$state$list$curr.scrollTo(scrollOffset);\n  };\n\n  _proto.scrollToItem = function scrollToItem(id, align) {\n    var _this$state$list$curr2;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    (_this$state$list$curr2 = this.state.list.current) == null ? void 0 : _this$state$list$curr2.scrollToItem(this.state.order.indexOf(id), align);\n  };\n\n  return Tree;\n}(PureComponent);\n\nTree.defaultProps = {\n  rowComponent: Row\n};\nexport default Tree;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from 'react';\nimport { VariableSizeList } from 'react-window';\nimport Tree, { createTreeComputer } from './Tree';\nimport { createBasicRecord, getIdByIndex } from './utils';\nvar computeTree = createTreeComputer({\n  createRecord: function createRecord(data, _ref, parent, previousRecord) {\n    var recomputeTree = _ref.recomputeTree,\n        resetAfterId = _ref.resetAfterId;\n    var record = createBasicRecord({\n      data: data,\n      height: previousRecord ? previousRecord.public.height : data.defaultHeight,\n      isOpen: previousRecord ? previousRecord.public.isOpen : data.isOpenByDefault,\n      resize: function resize(height, shouldForceUpdate) {\n        record.public.height = height;\n        resetAfterId(record.public.data.id, shouldForceUpdate);\n      },\n      setOpen: function setOpen(state) {\n        var _recomputeTree;\n\n        return recomputeTree((_recomputeTree = {}, _recomputeTree[data.id] = state, _recomputeTree));\n      }\n    }, parent);\n    return record;\n  }\n});\nexport var VariableSizeTree = /*#__PURE__*/function (_Tree) {\n  _inheritsLoose(VariableSizeTree, _Tree);\n\n  function VariableSizeTree(props, context) {\n    var _this;\n\n    _this = _Tree.call(this, props, context) || this;\n    _this.getItemSize = _this.getItemSize.bind(_assertThisInitialized(_this));\n    _this.state = _extends({}, _this.state, {\n      computeTree: computeTree,\n      resetAfterId: _this.resetAfterId.bind(_assertThisInitialized(_this))\n    });\n    return _this;\n  }\n\n  var _proto = VariableSizeTree.prototype;\n\n  _proto.resetAfterId = function resetAfterId(id, shouldForceUpdate) {\n    var _list$current;\n\n    if (shouldForceUpdate === void 0) {\n      shouldForceUpdate = false;\n    }\n\n    var _this$state = this.state,\n        list = _this$state.list,\n        order = _this$state.order;\n    (_list$current = list.current) == null ? void 0 : _list$current.resetAfterIndex(order.indexOf(id), shouldForceUpdate);\n  };\n\n  _proto.recomputeTree = function recomputeTree(state) {\n    var _this2 = this;\n\n    return _Tree.prototype.recomputeTree.call(this, state).then(function () {\n      var _this2$state$list$cur;\n\n      (_this2$state$list$cur = _this2.state.list.current) == null ? void 0 : _this2$state$list$cur.resetAfterIndex(0, true);\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        placeholder = _this$props.placeholder,\n        itemSize = _this$props.itemSize,\n        rowComponent = _this$props.rowComponent,\n        treeWalker = _this$props.treeWalker,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"placeholder\", \"itemSize\", \"rowComponent\", \"treeWalker\"]);\n\n    var _this$state2 = this.state,\n        attachRefs = _this$state2.attachRefs,\n        order = _this$state2.order;\n    return placeholder && order.length === 0 ? placeholder : /*#__PURE__*/React.createElement(VariableSizeList, Object.assign({}, rest, {\n      itemCount: order.length,\n      itemData: this.getItemData() // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      itemKey: getIdByIndex // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      itemSize: itemSize != null ? itemSize : this.getItemSize // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      ref: attachRefs\n    }), rowComponent);\n  };\n\n  _proto.getItemSize = function getItemSize(index) {\n    return this.getRecordData(index).height;\n  };\n\n  return VariableSizeTree;\n}(Tree);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from 'react';\nimport { FixedSizeList } from 'react-window';\nimport Tree, { createTreeComputer } from './Tree';\nimport { createBasicRecord, getIdByIndex } from './utils';\nvar computeTree = createTreeComputer({\n  createRecord: function createRecord(data, _ref, parent, previousRecord) {\n    var recomputeTree = _ref.recomputeTree;\n    return createBasicRecord({\n      data: data,\n      isOpen: previousRecord ? previousRecord.public.isOpen : data.isOpenByDefault,\n      setOpen: function setOpen(state) {\n        var _recomputeTree;\n\n        return recomputeTree((_recomputeTree = {}, _recomputeTree[data.id] = state, _recomputeTree));\n      }\n    }, parent);\n  }\n});\nexport var FixedSizeTree = /*#__PURE__*/function (_Tree) {\n  _inheritsLoose(FixedSizeTree, _Tree);\n\n  function FixedSizeTree(props, context) {\n    var _this;\n\n    _this = _Tree.call(this, props, context) || this;\n    _this.state = _extends({}, _this.state, {\n      computeTree: computeTree\n    });\n    return _this;\n  }\n\n  var _proto = FixedSizeTree.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        listRef = _this$props.listRef,\n        placeholder = _this$props.placeholder,\n        treeWalker = _this$props.treeWalker,\n        rowComponent = _this$props.rowComponent,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"listRef\", \"placeholder\", \"treeWalker\", \"rowComponent\"]);\n\n    var _this$state = this.state,\n        attachRefs = _this$state.attachRefs,\n        order = _this$state.order;\n    return placeholder && order.length === 0 ? placeholder : /*#__PURE__*/React.createElement(FixedSizeList, Object.assign({}, rest, {\n      itemCount: order.length,\n      itemData: this.getItemData() // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      itemKey: getIdByIndex // eslint-disable-next-line @typescript-eslint/unbound-method\n      ,\n      ref: attachRefs\n    }), rowComponent);\n  };\n\n  return FixedSizeTree;\n}(Tree);","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;"],"sourceRoot":""}