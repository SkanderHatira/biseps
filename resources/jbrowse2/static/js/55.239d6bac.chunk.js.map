{"version":3,"sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SetFeatureHeight.tsx"],"names":["useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","observer","props","classes","model","handleClose","featureHeightSetting","noSpacingSetting","noSpacing","useState","height","setHeight","setNoSpacing","ok","Number","isNaN","open","onClose","className","onClick","value","helperText","onChange","event","target","control","checked","val","label","variant","type","autoFocus","disabled","setFeatureHeight","undefined"],"mappings":"+RAiBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,YAAa,CACXC,SAAU,WACVC,MAAOH,EAAMI,QAAQ,GACrBC,IAAKL,EAAMI,QAAQ,GACnBE,MAAON,EAAMO,QAAQC,KAAK,UAqFfC,8BAjFf,SAA6BC,GAa3B,IAAMC,EAAUb,IACRc,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,YACPC,EAAsDF,EAAtDE,qBAAiCC,EAAqBH,EAAhCI,UAC9B,EAA4BC,mBAAS,GAAD,OAAIH,IAAxC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAkCF,mBAASF,GAA3C,mBAAOC,EAAP,KAAkBI,EAAlB,KAEMC,EAAgB,KAAXH,IAAkBI,OAAOC,OAAOL,GAE3C,OACE,kBAAC,IAAD,CAAQM,MAAI,EAACC,QAASZ,GACpB,kBAAC,IAAD,0BAEE,kBAAC,IAAD,CAAYa,UAAWf,EAAQV,YAAa0B,QAASd,GACnD,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,sKAKA,kBAAC,IAAD,CACEe,MAAOV,EACPW,WAAW,iBACXC,SAAU,SAAAC,GACRZ,EAAUY,EAAMC,OAAOJ,UAG3B,kBAAC,IAAD,CACEK,QACE,kBAAC,IAAD,CACEC,UAAWlB,EACXc,SAAU,kBAAMV,GAAa,SAAAe,GAAG,OAAKA,QAGzCC,MAAM,oDAER,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAAQ,YACR/B,MAAM,UACNgC,KAAK,SACLC,WAAS,EACTC,UAAWnB,EACXM,QAAS,WACPf,EAAM6B,iBACO,KAAXvB,GAAkBI,OAAOC,OAAOL,QAAoBwB,GAATxB,GAE7CN,EAAMQ,aAAaJ,GACnBH,MAXJ,UAgBA,kBAAC,IAAD,CACEwB,QAAQ,YACR/B,MAAM,YACNqB,QAAS,kBAAMd,MAHjB","file":"static/js/55.239d6bac.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  TextField,\n  Typography,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction SetFeatureHeightDlg(props: {\n  model: {\n    minScore: number\n    maxScore: number\n    setMinScore: Function\n    setMaxScore: Function\n    setFeatureHeight: Function\n    setNoSpacing: Function\n    featureHeightSetting: number\n    noSpacing: boolean\n  }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n  const { featureHeightSetting, noSpacing: noSpacingSetting } = model\n  const [height, setHeight] = useState(`${featureHeightSetting}`)\n  const [noSpacing, setNoSpacing] = useState(noSpacingSetting)\n\n  const ok = height !== '' && !Number.isNaN(+height)\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Set feature height\n        <IconButton className={classes.closeButton} onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>\n          Adjust the feature height and whether there is any spacing between\n          features. Setting feature height to 1 and removing spacing makes the\n          display very compact.\n        </Typography>\n        <TextField\n          value={height}\n          helperText=\"Feature height\"\n          onChange={event => {\n            setHeight(event.target.value)\n          }}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={!!noSpacing}\n              onChange={() => setNoSpacing(val => !val)}\n            />\n          }\n          label=\"Remove spacing between features in y-direction?\"\n        />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            autoFocus\n            disabled={!ok}\n            onClick={() => {\n              model.setFeatureHeight(\n                height !== '' && !Number.isNaN(+height) ? +height : undefined,\n              )\n              model.setNoSpacing(noSpacing)\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetFeatureHeightDlg)\n"],"sourceRoot":""}