{"version":3,"sources":["../../../node_modules/@babel/runtime-corejs2/helpers/awaitAsyncGenerator.js","../../../node_modules/@babel/runtime-corejs2/helpers/wrapAsyncGenerator.js","../../../node_modules/@babel/runtime-corejs2/helpers/asyncIterator.js","../../../node_modules/@gmod/nclist/node_modules/quick-lru/index.js","../../../node_modules/@gmod/nclist/dist/util.js","../../../node_modules/@babel/runtime-corejs2/helpers/AwaitValue.js","../../../node_modules/@babel/runtime-corejs2/helpers/asyncGeneratorDelegate.js","../../../node_modules/@babel/runtime-corejs2/helpers/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../../../node_modules/@gmod/nclist/dist/index.js","../../../node_modules/@gmod/nclist/dist/feature_store.js","../../../node_modules/@babel/runtime-corejs2/helpers/objectSpread.js","../../../node_modules/@babel/runtime-corejs2/helpers/AsyncGenerator.js","../../../node_modules/@gmod/nclist/dist/nclist.js","../../../node_modules/@gmod/nclist/dist/array_representation.js","../../../node_modules/@gmod/nclist/dist/lazy_array.js","../../../node_modules/@babel/runtime-corejs2/helpers/slicedToArray.js","../../../node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","../../../node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/get-own-property-descriptor.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js","../../../node_modules/@babel/runtime-corejs2/helpers/arrayWithHoles.js","../../../node_modules/@babel/runtime-corejs2/helpers/iterableToArrayLimit.js","../../../node_modules/@babel/runtime-corejs2/helpers/nonIterableRest.js","../../../node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/get-own-property-symbols.js"],"names":["AwaitValue","module","exports","value","__esModule","AsyncGenerator","fn","apply","this","arguments","_Symbol","_Symbol$iterator","iterable","method","asyncIterator","TypeError","call","QuickLRU","options","maxSize","cache","Map","oldCache","_size","key","set","has","get","delete","_set","deleted","clear","item","oldCacheSize","keys","Symbol","iterator","_interopRequireDefault","require","_Object$defineProperty","readJSON","_x","_x2","_readJSON","foo","_regenerator","_asyncToGenerator2","default","mark","_callee","url","readFile","_options$defaultConte","defaultContent","str","_args","wrap","_context","prev","next","length","undefined","encoding","sent","abrupt","JSON","parse","t0","code","status","stop","wrapped","_Promise","inner","awaitWrap","iter","waiting","pump","resolve","done","obj","enumerable","configurable","writable","_asyncIterator","_default","_slicedToArray2","_keys","_objectSpread2","_classCallCheck2","_createClass2","_awaitAsyncGenerator2","_wrapAsyncGenerator2","_asyncIterator2","_url","_quickLru","_abortablePromiseCache","_nclist","_array_representation","_lazy_array","_util","idfunc","_uniqueID","parentfunc","_parent","childrenfunc","NCListStore","_ref","baseUrl","urlTemplate","_ref$cacheSize","cacheSize","urlTemplates","root","Error","dataRootCache","fill","fetchDataRoot","bind","refData","trackInfo","listUrl","nclist","importExisting","intervals","attrs","lazyClass","refName","_this2","replace","then","parseTrackInfo","makeNCList","stats","featureCount","classes","loadNCList","histograms","meta","i","lazyArray","arrayParams","_histograms","forEach","entry","key2","String","Number","_getRegionStats","query","data","getDataRoot","ref","_getRegionFeatureDensities","_callee2","_ref2","start","end","numBins","basesPerBin","statEntry","histogramMeta","binRatio","firstServerBin","histogram","bin","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","_value3","_value4","_i","val","hist","_context2","Math","ceil","find","abs","round","floor","range","return","finish","bins","_ref3","_this","_callee3","accessors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_value2","_value5","_value6","feature","path","uniqueID","_context3","iterate","decorated","join","decorateFeature","concat","id","parent","_this3","tags","children","f","_Object$keys","_Object$getOwnPropertySymbols","_Object$getOwnPropertyDescriptor","defineProperty","target","source","Object","ownKeys","push","filter","sym","gen","front","back","resume","arg","result","wrappedAwait","settle","err","type","reject","_invoke","request","prototype","_toConsumableArray2","_asyncGeneratorDelegate2","NCList","topList","chunkCache","readChunkItems","baseURL","lazyUrlTemplate","makeFastGetter","arr","getter","mid","low","high","chunkNum","from","to","inc","searchGet","testGet","getChunk","getSublist","pendingPromises","sublist","makeGetter","binarySearch","chunkItemsP","delegateYield","iterateSublist","_histogram","binWidth","feat","firstBin","lastBin","Array","max","min","_x3","ArrayRepr","fields","cl","attributes","proto","isArrayAttr","attr","map","x","indexOf","toLowerCase","lcattr","adhocIndex","self","indices","attrIndices","_accessors","_makeAccessors","_tags","field","field_accessors","cdef","classnum","attrname","offset","c","LazyArray","chunkSize","callback","param","firstChunk","lastChunk","chunkreadFiles","chunk","chunkNumber","chunkData","filterChunkData","_getChunk","queryStart","queryEnd","firstIndex","chunkStart","chunkEnd","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","$Object","it","getOwnPropertyDescriptor","toIObject","$getOwnPropertyDescriptor","_Array$isArray","_s","_e","_arr","_n","_d","getOwnPropertySymbols"],"mappings":"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","file":"static/js/25.1e7811d2.chunk.js","sourcesContent":["var AwaitValue = require(\"./AwaitValue.js\");\n\nfunction _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}\n\nmodule.exports = _awaitAsyncGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var AsyncGenerator = require(\"./AsyncGenerator.js\");\n\nfunction _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}\n\nmodule.exports = _wrapAsyncGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nvar _Symbol$iterator = require(\"@babel/runtime-corejs2/core-js/symbol/iterator\");\n\nfunction _asyncIterator(iterable) {\n  var method;\n\n  if (typeof _Symbol !== \"undefined\") {\n    if (_Symbol.asyncIterator) method = iterable[_Symbol.asyncIterator];\n    if (method == null && _Symbol$iterator) method = iterable[_Symbol$iterator];\n  }\n\n  if (method == null) method = iterable[\"@@asyncIterator\"];\n  if (method == null) method = iterable[\"@@iterator\"];\n  if (method == null) throw new TypeError(\"Object is not async iterable\");\n  return method.call(iterable);\n}\n\nmodule.exports = _asyncIterator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst value = this.oldCache.get(key);\n\t\t\tthis.oldCache.delete(key);\n\t\t\tthis._set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tset(key, value) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, value);\n\t\t} else {\n\t\t\tthis._set(key, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\treturn this.cache.has(key) || this.oldCache.has(key);\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this.oldCache.get(key);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tyield item;\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget size() {\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn this._size + oldCacheSize;\n\t}\n}\n\nmodule.exports = QuickLRU;\n","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.readJSON = readJSON;exports.foo = foo;var _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));var _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));function readJSON(_x, _x2) {return _readJSON.apply(this, arguments);}function _readJSON() {_readJSON = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(url, readFile) {var options,_options$defaultConte,defaultContent,str,_args = arguments;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};_options$defaultConte =\n            options.defaultContent, defaultContent = _options$defaultConte === void 0 ? {} : _options$defaultConte;_context.prev = 2;_context.next = 5;return (\n\n\n              readFile(url, { encoding: 'utf8' }));case 5:str = _context.sent;return _context.abrupt(\"return\",\n            JSON.parse(str));case 9:_context.prev = 9;_context.t0 = _context[\"catch\"](2);if (!(\n\n            _context.t0.code === 'ENOENT' || _context.t0.status === 404)) {_context.next = 13;break;}return _context.abrupt(\"return\",\n            defaultContent);case 13:throw _context.t0;case 14:case \"end\":return _context.stop();}}}, _callee, null, [[2, 9]]);}));return _readJSON.apply(this, arguments);}\n\n\n\n\n\nfunction foo() {}","function _AwaitValue(value) {\n  this.wrapped = value;\n}\n\nmodule.exports = _AwaitValue;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nvar _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nvar _Symbol$iterator = require(\"@babel/runtime-corejs2/core-js/symbol/iterator\");\n\nfunction _asyncGeneratorDelegate(inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new _Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  iter[typeof _Symbol !== \"undefined\" && _Symbol$iterator || \"@@iterator\"] = function () {\n    return this;\n  };\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner[\"throw\"] === \"function\") {\n    iter[\"throw\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner[\"return\"] === \"function\") {\n    iter[\"return\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n}\n\nmodule.exports = _asyncGeneratorDelegate;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _feature_store = _interopRequireDefault(require(\"./feature_store\"));var _default =\n\n_feature_store.default;exports.default = _default;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/slicedToArray\"));var _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));var _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));var _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));var _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectSpread\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));var _awaitAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/awaitAsyncGenerator\"));var _wrapAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/wrapAsyncGenerator\"));var _asyncIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncIterator\"));var _url = _interopRequireDefault(require(\"url\"));\nvar _quickLru = _interopRequireDefault(require(\"quick-lru\"));\nvar _abortablePromiseCache = _interopRequireDefault(require(\"abortable-promise-cache\"));\n\nvar _nclist = _interopRequireDefault(require(\"./nclist\"));\nvar _array_representation = _interopRequireDefault(require(\"./array_representation\"));\nvar _lazy_array = _interopRequireDefault(require(\"./lazy_array\"));\nvar _util = require(\"./util\");\n\nfunction idfunc() {\n  return this._uniqueID;\n}\nfunction parentfunc() {\n  return this._parent;\n}\nfunction childrenfunc() {\n  return this.get('subfeatures');\n}\n\n/**\n   * Sequence feature store using nested containment\n   * lists held in JSON files that are lazily read.\n   *\n   * @param {object} args constructor args\n   * @param {string} args.baseUrl base URL for resolving relative URLs\n   * @param {string} args.urlTemplate Template string for\n   *  the root file of each reference sequence. The reference sequence\n   *  name will be interpolated into this string where `{refseq}` appears.\n   * @param {function} args.readFile function to use for reading remote from URLs.\n   */var\nNCListStore = /*#__PURE__*/function () {\n  function NCListStore(_ref) {var baseUrl = _ref.baseUrl,urlTemplate = _ref.urlTemplate,readFile = _ref.readFile,_ref$cacheSize = _ref.cacheSize,cacheSize = _ref$cacheSize === void 0 ? 10 : _ref$cacheSize;(0, _classCallCheck2.default)(this, NCListStore);\n    this.baseUrl = baseUrl;\n    this.urlTemplates = { root: urlTemplate };\n\n    this.readFile = readFile;\n    if (!this.readFile)\n    throw new Error(\"must provide a \\\"readFile\\\" function argument\");\n\n    this.dataRootCache = new _abortablePromiseCache.default({\n      cache: new _quickLru.default({ maxSize: cacheSize }),\n      fill: this.fetchDataRoot.bind(this) });\n\n  }(0, _createClass2.default)(NCListStore, [{ key: \"makeNCList\", value: function makeNCList()\n\n    {\n      return new _nclist.default({ readFile: this.readFile });\n    } }, { key: \"loadNCList\", value: function loadNCList(\n\n    refData, trackInfo, listUrl) {\n      refData.nclist.importExisting(\n      trackInfo.intervals.nclist,\n      refData.attrs,\n      listUrl,\n      trackInfo.intervals.urlTemplate,\n      trackInfo.intervals.lazyClass);\n\n    } }, { key: \"getDataRoot\", value: function getDataRoot(\n\n    refName) {\n      return this.dataRootCache.get(refName, refName);\n    } }, { key: \"fetchDataRoot\", value: function fetchDataRoot(\n\n    refName) {var _this2 = this;\n      var url = _url.default.resolve(\n      this.baseUrl,\n      this.urlTemplates.root.replace(/{\\s*refseq\\s*}/g, refName));\n\n\n      // fetch the trackdata\n      return (0, _util.readJSON)(url, this.readFile).then(function (trackInfo) {return (\n          // trackInfo = JSON.parse( trackInfo );\n          _this2.parseTrackInfo(trackInfo, url));});\n\n    } }, { key: \"parseTrackInfo\", value: function parseTrackInfo(\n\n    trackInfo, url) {\n      var refData = {\n        nclist: this.makeNCList(),\n        stats: {\n          featureCount: trackInfo.featureCount || 0 } };\n\n\n\n      if (trackInfo.intervals) {\n        refData.attrs = new _array_representation.default(trackInfo.intervals.classes);\n        this.loadNCList(refData, trackInfo, url);\n      }var\n\n      histograms = trackInfo.histograms;\n      if (histograms && histograms.meta) {\n        for (var i = 0; i < histograms.meta.length; i += 1) {\n          histograms.meta[i].lazyArray = new _lazy_array.default((0, _objectSpread2.default)({},\n          histograms.meta[i].arrayParams, { readFile: this.readFile }),\n          url);\n\n        }\n        refData._histograms = histograms;\n      }\n\n      // parse any strings in the histogram data that look like numbers\n      if (refData._histograms) {\n        (0, _keys.default)(refData._histograms).forEach(function (key) {\n          var entries = refData._histograms[key];\n          entries.forEach(function (entry) {\n            (0, _keys.default)(entry).forEach(function (key2) {\n              if (\n              typeof entry[key2] === 'string' &&\n              String(Number(entry[key2])) === entry[key2])\n              {\n                entry[key2] = Number(entry[key2]);\n              }\n            });\n          });\n        });\n      }\n\n      return refData;\n    } }, { key: \"getRegionStats\", value: function () {var _getRegionStats = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(\n\n      query) {var data;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.next = 2;return (\n                  this.getDataRoot(query.ref));case 2:data = _context.sent;return _context.abrupt(\"return\",\n                data.stats);case 4:case \"end\":return _context.stop();}}}, _callee, this);}));function getRegionStats(_x) {return _getRegionStats.apply(this, arguments);}return getRegionStats;}()\n\n\n    /**\n                                                                                                                                                                                                    * fetch binned counts of feature coverage in the given region.\n                                                                                                                                                                                                    *\n                                                                                                                                                                                                    * @param {object} query\n                                                                                                                                                                                                    * @param {string} query.refName reference sequence name\n                                                                                                                                                                                                    * @param {number} query.start region start\n                                                                                                                                                                                                    * @param {number} query.end region end\n                                                                                                                                                                                                    * @param {number} query.numBins number of bins desired in the feature counts\n                                                                                                                                                                                                    * @param {number} query.basesPerBin number of bp desired in each feature counting bin\n                                                                                                                                                                                                    * @returns {object} as:\n                                                                                                                                                                                                    *    `{ bins: hist, stats: statEntry }`\n                                                                                                                                                                                                    */ }, { key: \"getRegionFeatureDensities\", value: function () {var _getRegionFeatureDensities = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(_ref2) {var refName, start, end, numBins, basesPerBin, data, stats, statEntry, histogramMeta, i, binRatio, firstServerBin, histogram, bin, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, _value3, _value4, _i, val, hist;return _regenerator.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:\n\n                refName = _ref2.refName,\n                start = _ref2.start,\n                end = _ref2.end,\n                numBins = _ref2.numBins,\n                basesPerBin = _ref2.basesPerBin;_context2.next = 3;return (\n\n                  this.getDataRoot(refName));case 3:data = _context2.sent;if (!\n                numBins) {_context2.next = 8;break;}\n                basesPerBin = (end - start) / numBins;_context2.next = 13;break;case 8:if (!\n                basesPerBin) {_context2.next = 12;break;}\n                numBins = Math.ceil((end - start) / basesPerBin);_context2.next = 13;break;case 12:throw (\n\n                  new TypeError(\n                  'numBins or basesPerBin arg required for getRegionFeatureDensities'));case 13:\n\n\n\n                // pick the relevant entry in our pre-calculated stats\n                stats = data._histograms.stats || [];\n                statEntry = stats.find(function (entry) {return entry.basesPerBin >= basesPerBin;});\n\n                // The histogramMeta array describes multiple levels of histogram detail,\n                // going from the finest (smallest number of bases per bin) to the\n                // coarsest (largest number of bases per bin).\n                // We want to use coarsest histogramMeta that's at least as fine as the\n                // one we're currently rendering.\n                // TODO: take into account that the histogramMeta chosen here might not\n                // fit neatly into the current histogram (e.g., if the current histogram\n                // is at 50,000 bases/bin, and we have server histograms at 20,000\n                // and 2,000 bases/bin, then we should choose the 2,000 histogramMeta\n                // rather than the 20,000)\n                histogramMeta = data._histograms.meta[0];\n                for (i = 0; i < data._histograms.meta.length; i += 1) {\n                  if (basesPerBin >= data._histograms.meta[i].basesPerBin)\n                  histogramMeta = data._histograms.meta[i];\n                }\n\n                // number of bins in the server-supplied histogram for each current bin\n                binRatio = basesPerBin / histogramMeta.basesPerBin;\n\n                // if the server-supplied histogram fits neatly into our requested\n                if (!(binRatio > 0.9 && Math.abs(binRatio - Math.round(binRatio)) < 0.0001)) {_context2.next = 57;break;}\n                // console.log('server-supplied',query);\n                // we can use the server-supplied counts\n                firstServerBin = Math.floor(start / histogramMeta.basesPerBin);\n                binRatio = Math.round(binRatio);\n                histogram = [];\n                for (bin = 0; bin < numBins; bin += 1) {histogram[bin] = 0;}_iteratorNormalCompletion = true;_didIteratorError = false;_context2.prev = 25;_iterator = (0, _asyncIterator2.default)(\n\n                histogramMeta.lazyArray.range(\n                firstServerBin,\n                firstServerBin + binRatio * numBins - 1));case 27:_context2.next = 29;return _iterator.next();case 29:_step = _context2.sent;_iteratorNormalCompletion = _step.done;_context2.next = 33;return _step.value;case 33:_value = _context2.sent;if (_iteratorNormalCompletion) {_context2.next = 40;break;}_value3 = _value, _value4 = (0, _slicedToArray2.default)(_value3, 2), _i = _value4[0], val = _value4[1];\n\n                // this will count features that span the boundaries of\n                // the original histogram multiple times, so it's not\n                // perfectly quantitative.  Hopefully it's still useful, though.\n                histogram[Math.floor((_i - firstServerBin) / binRatio)] += val;case 37:_iteratorNormalCompletion = true;_context2.next = 27;break;case 40:_context2.next = 46;break;case 42:_context2.prev = 42;_context2.t0 = _context2[\"catch\"](25);_didIteratorError = true;_iteratorError = _context2.t0;case 46:_context2.prev = 46;_context2.prev = 47;if (!(!_iteratorNormalCompletion && _iterator.return != null)) {_context2.next = 51;break;}_context2.next = 51;return _iterator.return();case 51:_context2.prev = 51;if (!_didIteratorError) {_context2.next = 54;break;}throw _iteratorError;case 54:return _context2.finish(51);case 55:return _context2.finish(46);case 56:return _context2.abrupt(\"return\",\n\n                { bins: histogram, stats: statEntry });case 57:_context2.next = 59;return (\n\n\n\n                  data.nclist.histogram(start, end, numBins));case 59:hist = _context2.sent;return _context2.abrupt(\"return\",\n                { bins: hist, stats: statEntry });case 61:case \"end\":return _context2.stop();}}}, _callee2, this, [[25, 42, 46, 56], [47,, 51, 55]]);}));function getRegionFeatureDensities(_x2) {return _getRegionFeatureDensities.apply(this, arguments);}return getRegionFeatureDensities;}()\n\n\n    /**\n                                                                                                                                                                                                                                                                                                  * Fetch features in a given region. This method is an asynchronous generator\n                                                                                                                                                                                                                                                                                                  * yielding feature objects.\n                                                                                                                                                                                                                                                                                                  *\n                                                                                                                                                                                                                                                                                                  * @param {object} args\n                                                                                                                                                                                                                                                                                                  * @param {string} args.refName reference sequence name\n                                                                                                                                                                                                                                                                                                  * @param {number} args.start start of region. 0-based half-open.\n                                                                                                                                                                                                                                                                                                  * @param {number} args.end end of region. 0-based half-open.\n                                                                                                                                                                                                                                                                                                  * @yields {object}\n                                                                                                                                                                                                                                                                                                  */ }, { key: \"getFeatures\", value: function getFeatures(_ref3)\n    {var _this = this;var refName = _ref3.refName,start = _ref3.start,end = _ref3.end;return (0, _wrapAsyncGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {var data, accessors, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, _value5, _value6, feature, path, uniqueID;return _regenerator.default.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:_context3.next = 2;return (0, _awaitAsyncGenerator2.default)(\n                _this.getDataRoot(refName));case 2:data = _context3.sent;\n                accessors = data.attrs && data.attrs.accessors();_iteratorNormalCompletion2 = true;_didIteratorError2 = false;_context3.prev = 6;_iterator2 = (0, _asyncIterator2.default)(\n                data.nclist.iterate(start, end));case 8:_context3.next = 10;return (0, _awaitAsyncGenerator2.default)(_iterator2.next());case 10:_step2 = _context3.sent;_iteratorNormalCompletion2 = _step2.done;_context3.next = 14;return (0, _awaitAsyncGenerator2.default)(_step2.value);case 14:_value2 = _context3.sent;if (_iteratorNormalCompletion2) {_context3.next = 23;break;}_value5 = _value2, _value6 = (0, _slicedToArray2.default)(_value5, 2), feature = _value6[0], path = _value6[1];\n                // the unique ID is a stringification of the path in the\n                // NCList where the feature lives; it's unique across the\n                // top-level NCList (the top-level NCList covers a\n                // track/chromosome combination)\n\n                // only need to decorate a feature once\n                if (!feature.decorated) {\n                  uniqueID = path.join(',');\n                  _this.decorateFeature(accessors, feature, \"\".concat(refName, \",\").concat(uniqueID));\n                }_context3.next = 20;\n                return feature;case 20:_iteratorNormalCompletion2 = true;_context3.next = 8;break;case 23:_context3.next = 29;break;case 25:_context3.prev = 25;_context3.t0 = _context3[\"catch\"](6);_didIteratorError2 = true;_iteratorError2 = _context3.t0;case 29:_context3.prev = 29;_context3.prev = 30;if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {_context3.next = 34;break;}_context3.next = 34;return (0, _awaitAsyncGenerator2.default)(_iterator2.return());case 34:_context3.prev = 34;if (!_didIteratorError2) {_context3.next = 37;break;}throw _iteratorError2;case 37:return _context3.finish(34);case 38:return _context3.finish(29);case 39:case \"end\":return _context3.stop();}}}, _callee3, null, [[6, 25, 29, 39], [30,, 34, 38]]);}))();\n\n    }\n\n    // helper method to recursively add .get and .tags methods to a feature and its\n    // subfeatures\n  }, { key: \"decorateFeature\", value: function decorateFeature(accessors, feature, id, parent) {var _this3 = this;\n      feature.get = accessors.get;\n      feature.tags = accessors.tags;\n      feature._uniqueID = id;\n      feature.id = idfunc;\n      feature._parent = parent;\n      feature.parent = parentfunc;\n      feature.children = childrenfunc;\n      (feature.get('subfeatures') || []).forEach(function (f, i) {\n        _this3.decorateFeature(accessors, f, \"\".concat(id, \"-\").concat(i), feature);\n      });\n      feature.decorated = true;\n    } }]);return NCListStore;}();exports.default = NCListStore;","var _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\");\n\nvar defineProperty = require(\"./defineProperty.js\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, _Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nvar _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nvar AwaitValue = require(\"./AwaitValue.js\");\n\nfunction AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new _Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n\n      _Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nAsyncGenerator.prototype[typeof _Symbol === \"function\" && _Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n};\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};\n\nmodule.exports = AsyncGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));var _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));var _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/toConsumableArray\"));var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));var _wrapAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/wrapAsyncGenerator\"));var _awaitAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/awaitAsyncGenerator\"));var _asyncIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncIterator\"));var _asyncGeneratorDelegate2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncGeneratorDelegate\"));var _url = _interopRequireDefault(require(\"url\"));\nvar _quickLru = _interopRequireDefault(require(\"quick-lru\"));\nvar _abortablePromiseCache = _interopRequireDefault(require(\"abortable-promise-cache\"));\nvar _util = require(\"./util\");var\n\nNCList = /*#__PURE__*/function () {\n  function NCList(_ref) {var readFile = _ref.readFile,_ref$cacheSize = _ref.cacheSize,cacheSize = _ref$cacheSize === void 0 ? 100 : _ref$cacheSize;(0, _classCallCheck2.default)(this, NCList);\n    this.topList = [];\n    this.chunkCache = new _abortablePromiseCache.default({\n      cache: new _quickLru.default({ maxSize: cacheSize }),\n      fill: this.readChunkItems.bind(this) });\n\n    this.readFile = readFile;\n    if (!this.readFile) throw new Error(\"must provide a \\\"readFile\\\" function\");\n  }(0, _createClass2.default)(NCList, [{ key: \"importExisting\", value: function importExisting(\n\n    nclist, attrs, baseURL, lazyUrlTemplate, lazyClass) {\n      this.topList = nclist;\n      this.attrs = attrs;\n      this.start = attrs.makeFastGetter('Start');\n      this.end = attrs.makeFastGetter('End');\n      this.lazyClass = lazyClass;\n      this.baseURL = baseURL;\n      this.lazyUrlTemplate = lazyUrlTemplate;\n    } }, { key: \"binarySearch\", value: function binarySearch(\n\n    arr, item, getter) {\n      var low = -1;\n      var high = arr.length;\n      var mid;\n\n      while (high - low > 1) {\n        mid = low + high >>> 1;\n        if (getter(arr[mid]) >= item) high = mid;else\n        low = mid;\n      }\n\n      // if we're iterating rightward, return the high index;\n      // if leftward, the low index\n      if (getter === this.end) return high;\n      return low;\n    } }, { key: \"readChunkItems\", value: function readChunkItems(\n\n    chunkNum) {\n      var url = _url.default.resolve(\n      this.baseURL,\n      this.lazyUrlTemplate.replace(/\\{Chunk\\}/gi, chunkNum));\n\n      return (0, _util.readJSON)(url, this.readFile, { defaultContent: [] });\n    } }, { key: \"iterateSublist\", value: function iterateSublist(\n\n    arr, from, to, inc, searchGet, testGet, path) {var _this = this;return (0, _wrapAsyncGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {var getChunk, getSublist, pendingPromises, i, sublist, _i, _ref2, _ref3, item, chunkNum;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:\n                getChunk = _this.attrs.makeGetter('Chunk');\n                getSublist = _this.attrs.makeGetter('Sublist');\n\n                pendingPromises = [];\n\n                i = _this.binarySearch(arr, from, searchGet);case 4:if (!(\n                i < arr.length && i >= 0 && inc * testGet(arr[i]) < inc * to)) {_context.next = 17;break;}if (!(\n\n\n                arr[i][0] === _this.lazyClass)) {_context.next = 9;break;}(function () {\n                  // this is a lazily-loaded chunk of the nclist\n                  var chunkNum = getChunk(arr[i]);\n                  var chunkItemsP = _this.chunkCache.\n                  get(chunkNum, chunkNum).\n                  then(function (item) {return [item, chunkNum];});\n                  pendingPromises.push(chunkItemsP);})();_context.next = 11;break;case 9:_context.next = 11;\n\n\n                return [arr[i], path.concat(i)];case 11:\n\n\n                // if this node has a contained sublist, process that too\n                sublist = getSublist(arr[i]);if (!\n                sublist) {_context.next = 14;break;}\n                return _context.delegateYield((0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(_this.iterateSublist(\n                sublist,\n                from,\n                to,\n                inc,\n                searchGet,\n                testGet,\n                path.concat(i))), _awaitAsyncGenerator2.default), \"t0\", 14);case 14:i += inc;_context.next = 4;break;case 17:\n\n\n\n                _i = 0;case 18:if (!(_i < pendingPromises.length)) {_context.next = 30;break;}_context.next = 21;return (0, _awaitAsyncGenerator2.default)(\n                pendingPromises[_i]);case 21:_ref2 = _context.sent;_ref3 = (0, _slicedToArray2.default)(_ref2, 2);item = _ref3[0];chunkNum = _ref3[1];if (!\n                item) {_context.next = 27;break;}\n                return _context.delegateYield((0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(_this.iterateSublist(item, from, to, inc, searchGet, testGet, [].concat((0, _toConsumableArray2.default)(\n                path), [\n                chunkNum]))), _awaitAsyncGenerator2.default), \"t1\", 27);case 27:_i += 1;_context.next = 18;break;case 30:case \"end\":return _context.stop();}}}, _callee);}))();\n\n\n\n    } }, { key: \"iterate\", value: function iterate(\n\n    from, to) {var _this2 = this;return (0, _wrapAsyncGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {var inc, searchGet, testGet;return _regenerator.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:\n                // calls the given function once for each of the\n                // intervals that overlap the given interval\n                // if from <= to, iterates left-to-right, otherwise iterates right-to-left\n\n                // inc: iterate leftward or rightward\n                inc = from > to ? -1 : 1;\n                // searchGet: search on start or end\n                searchGet = from > to ? _this2.start : _this2.end;\n                // testGet: test on start or end\n                testGet = from > to ? _this2.end : _this2.start;if (!(\n\n                _this2.topList.length > 0)) {_context2.next = 5;break;}\n                return _context2.delegateYield((0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(_this2.iterateSublist(\n                _this2.topList,\n                from,\n                to,\n                inc,\n                searchGet,\n                testGet,\n                [0])), _awaitAsyncGenerator2.default), \"t0\", 5);case 5:case \"end\":return _context2.stop();}}}, _callee2);}))();\n\n\n    } }, { key: \"histogram\", value: function () {var _histogram = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(\n\n      from, to, numBins) {var result, binWidth, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, feat, firstBin, lastBin, bin;return _regenerator.default.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:\n                // calls callback with a histogram of the feature density\n                // in the given interval\n\n                result = new Array(numBins);\n                result.fill(0);\n                binWidth = (to - from) / numBins;_iteratorNormalCompletion = true;_didIteratorError = false;_context3.prev = 5;_iterator = (0, _asyncIterator2.default)(\n                this.iterate(from, to));case 7:_context3.next = 9;return _iterator.next();case 9:_step = _context3.sent;_iteratorNormalCompletion = _step.done;_context3.next = 13;return _step.value;case 13:_value = _context3.sent;if (_iteratorNormalCompletion) {_context3.next = 22;break;}feat = _value;\n                firstBin = Math.max(0, (this.start(feat) - from) / binWidth | 0);\n                lastBin = Math.min(\n                numBins,\n                (this.end(feat) - from) / binWidth | 0);\n\n                for (bin = firstBin; bin <= lastBin; bin += 1) {result[bin] += 1;}case 19:_iteratorNormalCompletion = true;_context3.next = 7;break;case 22:_context3.next = 28;break;case 24:_context3.prev = 24;_context3.t0 = _context3[\"catch\"](5);_didIteratorError = true;_iteratorError = _context3.t0;case 28:_context3.prev = 28;_context3.prev = 29;if (!(!_iteratorNormalCompletion && _iterator.return != null)) {_context3.next = 33;break;}_context3.next = 33;return _iterator.return();case 33:_context3.prev = 33;if (!_didIteratorError) {_context3.next = 36;break;}throw _iteratorError;case 36:return _context3.finish(33);case 37:return _context3.finish(28);case 38:return _context3.abrupt(\"return\",\n\n                result);case 39:case \"end\":return _context3.stop();}}}, _callee3, this, [[5, 24, 28, 38], [29,, 33, 37]]);}));function histogram(_x, _x2, _x3) {return _histogram.apply(this, arguments);}return histogram;}() }]);return NCList;}();exports.default = NCList;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _keys = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/keys\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\")); /**\nclass ArrayRepr\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Class for operating on indexed array representations of objects.\nnor example, if we have a lot of objects with similar attrbutes, e.g.:\nnpre class=\"code\">\nn{start: 1, end: 2, strand: -1},\n{start: 5, end: 6, strand: 1},\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *     ]\npre>\nndescription\nwe can represent them more compactly (e.g., in JSON) something like this:\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * <pre class=\"code\">\nclass = [\"start\", \"end\", \"strand\"]\nnnn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *         ...\nnpre>\nnf we want to represent a few different kinds of objects in our big list,\nwe can have multiple \"class\" arrays, and tag each object to identify\nwhich \"class\" array describes it.\nnor example, if we have a lot of instances of a few types of objects,\nlike this:\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * <pre class=\"code\">\nn{start: 1, end: 2, strand: 1, id: 1},\n{start: 5, end: 6, strand: 1, id: 2},\nn{start: 10, end: 20, chunk: 1},\n{start: 30, end: 40, chunk: 2},\nnnpre>\nne could use the first array position to indicate the \"class\" for the\nobject, like this:\nnpre class=\"code\">\nclasses = [[\"start\", \"end\", \"strand\", \"id\"], [\"start\", \"end\", \"chunk\"]]\nnnnnnnnpre>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\nlso, if we occasionally want to add an ad-hoc attribute, we could just\nstick an optional dictionary onto the end:\nnpre class=\"code\">\nclasses = [[\"start\", \"end\", \"strand\", \"id\"], [\"start\", \"end\", \"chunk\"]]\nnn{foo: 1}]\nnpre>\nniven that individual objects are being represented by arrays, generic\ncode needs some way to differentiate arrays that are meant to be objects\nfrom arrays that are actually meant to be arrays.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * So for each class, we include a dict with <attribute name>: true mappings\nfor each attribute that is meant to be an array.\nnlso, in cases where some attribute values are the same for all objects\nin a particular set, it may be convenient to define a \"prototype\"\nwith default values for all objects in the set\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * In the end, we get something like this:\nnpre class=\"code\">\nclasses=[\n{'attributes': ['Start', 'End', 'Subfeatures'],\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *          'proto': {'Chrom': 'chr1'},\nisArrayAttr': {Subfeatures: true}}\nnpre>\nnhat's what this class facilitates.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */var\nArrayRepr = /*#__PURE__*/function () {\n  function ArrayRepr(classes) {(0, _classCallCheck2.default)(this, ArrayRepr);\n    this.classes = classes;\n    this.fields = [];\n    for (var cl = 0; cl < classes.length; cl += 1) {\n      this.fields[cl] = {};\n      for (var f = 0; f < classes[cl].attributes.length; f += 1) {\n        this.fields[cl][classes[cl].attributes[f]] = f + 1;\n      }\n      if (classes[cl].proto === undefined) classes[cl].proto = {};\n      if (classes[cl].isArrayAttr === undefined) classes[cl].isArrayAttr = {};\n    }\n  }\n\n  /**\n     * @private\n     */(0, _createClass2.default)(ArrayRepr, [{ key: \"attrIndices\", value: function attrIndices(\n    attr) {\n      return this.classes.map(\n      function (x) {return (\n          x.attributes.indexOf(attr) + 1 ||\n          x.attributes.indexOf(attr.toLowerCase()) + 1 ||\n          undefined);});\n\n    } }, { key: \"get\", value: function get(\n\n    obj, attr) {\n      if (attr in this.fields[obj[0]]) {\n        return obj[this.fields[obj[0]][attr]];\n      }\n\n      // try lowercase\n      var lcattr = attr.toLowerCase();\n      if (lcattr in this.fields[obj[0]]) {\n        return obj[this.fields[obj[0]][lcattr]];\n      }\n\n      var adhocIndex = this.classes[obj[0]].attributes.length + 1;\n      if (adhocIndex >= obj.length || !(attr in obj[adhocIndex])) {\n        if (attr in this.classes[obj[0]].proto)\n        return this.classes[obj[0]].proto[attr];\n        return undefined;\n      }\n      return obj[adhocIndex][attr];\n    } }, { key: \"makeSetter\", value: function makeSetter(\n\n    attr) {\n      var self = this;\n      return function set(obj, val) {\n        self.set(obj, attr, val);\n      };\n    } }, { key: \"makeGetter\", value: function makeGetter(\n\n    attr) {\n      var self = this;\n      return function get(obj) {\n        return self.get(obj, attr);\n      };\n    } }, { key: \"makeFastGetter\", value: function makeFastGetter(\n\n    attr) {\n      // can be used only if attr is guaranteed to be in\n      // the \"classes\" array for this object\n      var indices = this.attrIndices(attr);\n      return function get(obj) {\n        if (indices[obj[0]] !== undefined) return obj[indices[obj[0]]];\n        return undefined;\n      };\n    }\n\n    // construct(self, obj, klass) {\n    //   const result = new Array(self.classes[klass].length)\n    //   Object.keys(obj).forEach(attr => {\n    //     this.set(result, attr, obj[attr])\n    //   })\n    //   return result\n    // }\n\n    /**\n     * Returns fast pre-compiled getter and setter functions for use with\n     * Arrays that use this representation.\n     * When the returned <code>get</code> and <code>set</code> functions are\n     * added as methods to an Array that contains data in this\n     * representation, they provide fast access by name to the data.\n     *\n     * @returns {Object} <code>{ get: function() {...}, set: function(val) {...} }</code>\n     *\n     * @example\n     * var accessors = attrs.accessors();\n     * var feature = get_feature_from_someplace();\n     * feature.get = accessors.get;\n     * // print out the feature start and end\n     * console.log( feature.get('start') + ',' + feature.get('end') );\n     */ }, { key: \"accessors\", value: function accessors()\n    {\n      if (!this._accessors) this._accessors = this._makeAccessors();\n      return this._accessors;\n    }\n\n    /**\n       * @private\n       */ }, { key: \"_makeAccessors\", value: function _makeAccessors()\n    {\n      var indices = {};\n\n      var _tags;\n\n      var accessors = {\n        get: function get(field) {\n          var f = this.get.field_accessors[field.toLowerCase()];\n          if (f) return f.call(this);\n          return undefined;\n        },\n        set: function set(field, val) {\n          var f = this.set.field_accessors[field];\n          if (f) return f.call(this, val);\n          return undefined;\n        },\n        tags: function tags() {\n          return _tags[this[0]] || [];\n        } };\n\n      accessors.get.field_accessors = {};\n      accessors.set.field_accessors = {};\n\n      // make a data structure as: { attr_name: [offset,offset,offset], }\n      // that will be convenient for finding the location of the attr\n      // for a given class like: indexForAttr{attrname}[classnum]\n      this.classes.forEach(function (cdef, classnum) {\n        ;(cdef.attributes || []).forEach(function (attrname, offset) {\n          indices[attrname] = indices[attrname] || [];\n          indices[attrname][classnum] = offset + 1;\n\n          attrname = attrname.toLowerCase();\n\n          indices[attrname] = indices[attrname] || [];\n          indices[attrname][classnum] = offset + 1;\n        });\n      });\n\n      // lowercase all the class attributes\n      _tags = this.classes.map(function (c) {return c.attributes;});\n\n      // use that to make precalculated get and set accessors for each field\n      (0, _keys.default)(indices).forEach(function (attrname) {\n        var attrIndices = indices[attrname];\n        // get\n        accessors.get.field_accessors[attrname] = !attrIndices ?\n        function get() {\n          return undefined;\n        } :\n        function get() {\n          return this[attrIndices[this[0]]];\n        };\n\n        // // set\n        // accessors.set.field_accessors[attrname] = !attrIndices\n        //   ? () => undefined\n        //   : v => {\n        //       this[attrIndices[this[0]]] = v\n        //       return v\n        //     }\n      });\n\n      return accessors;\n    } }]);return ArrayRepr;}();var _default =\n\nArrayRepr;\n\n/*\n           \n           Copyright (c) 2007-2010 The Evolutionary Software Foundation\n           \n           Created by Mitchell Skinner <mitch_skinner@berkeley.edu>\n           \n           This package and its accompanying libraries are free software; you can\n           redistribute it and/or modify it under the terms of the LGPL (either\n           version 2.1, or at your option, any later version) or the Artistic\n           License 2.0.  Refer to LICENSE for the full license text.\n           \n           */exports.default = _default;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");_Object$defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\"));var _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/createClass\"));var _wrapAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/wrapAsyncGenerator\"));var _awaitAsyncGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/awaitAsyncGenerator\"));var _asyncIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncIterator\"));var _asyncGeneratorDelegate2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/asyncGeneratorDelegate\"));var _url = _interopRequireDefault(require(\"url\"));\nvar _quickLru = _interopRequireDefault(require(\"quick-lru\"));\nvar _abortablePromiseCache = _interopRequireDefault(require(\"abortable-promise-cache\"));\nvar _util = require(\"./util\");\n\n/**\n                                * For a JSON array that gets too large to load in one go, this class\n                                * helps break it up into chunks and provides an\n                                * async API for using the information in the array.\n                                */var\nLazyArray = /*#__PURE__*/function () {\n  function LazyArray(_ref,\n\n  baseUrl)\n  {var urlTemplate = _ref.urlTemplate,chunkSize = _ref.chunkSize,length = _ref.length,_ref$cacheSize = _ref.cacheSize,cacheSize = _ref$cacheSize === void 0 ? 100 : _ref$cacheSize,readFile = _ref.readFile;(0, _classCallCheck2.default)(this, LazyArray);\n    this.urlTemplate = urlTemplate;\n    this.chunkSize = chunkSize;\n    this.length = length;\n    this.baseUrl = baseUrl === undefined ? '' : baseUrl;\n    this.readFile = readFile;\n    if (!readFile) throw new Error('must provide readFile callback');\n    this.chunkCache = new _abortablePromiseCache.default({\n      cache: new _quickLru.default({ maxSize: cacheSize }),\n      fill: this.getChunk.bind(this) });\n\n  }\n\n  /**\n     * call the callback on one element of the array\n     * @param i index\n     * @param callback callback, gets called with (i, value, param)\n     * @param param (optional) callback will get this as its last parameter\n     */(0, _createClass2.default)(LazyArray, [{ key: \"index\", value: function index(\n    i, callback, param) {\n      this.range(i, i, callback, undefined, param);\n    }\n\n    /**\n       * async generator for the elements in the range [start,end]\n       *\n       * @param start index of first element to call the callback on\n       * @param end index of last element to call the callback on\n       */ }, { key: \"range\", value: function range(\n    start, end) {var _this = this;return (0, _wrapAsyncGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {var firstChunk, lastChunk, chunkreadFiles, chunk, i, _ref2, _ref3, chunkNumber, chunkData;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:\n                start = Math.max(0, start);\n                end = Math.min(end, _this.length - 1);\n\n                firstChunk = Math.floor(start / _this.chunkSize);\n                lastChunk = Math.floor(end / _this.chunkSize);\n\n                chunkreadFiles = [];\n                for (chunk = firstChunk; chunk <= lastChunk; chunk += 1) {\n                  chunkreadFiles.push(_this.chunkCache.get(chunk, chunk));\n                }\n                i = 0;case 7:if (!(i < chunkreadFiles.length)) {_context.next = 18;break;}_context.next = 10;return (0, _awaitAsyncGenerator2.default)(\n                chunkreadFiles[i]);case 10:_ref2 = _context.sent;_ref3 = (0, _slicedToArray2.default)(_ref2, 2);chunkNumber = _ref3[0];chunkData = _ref3[1];\n                return _context.delegateYield((0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(_this.filterChunkData(start, end, chunkNumber, chunkData)), _awaitAsyncGenerator2.default), \"t0\", 15);case 15:i += 1;_context.next = 7;break;case 18:case \"end\":return _context.stop();}}}, _callee);}))();\n\n    } }, { key: \"getChunk\", value: function () {var _getChunk = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(\n\n      chunkNumber) {var url, data;return _regenerator.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:\n                url = this.urlTemplate.replace(/\\{Chunk\\}/gi, chunkNumber);\n                if (this.baseUrl) {\n                  url = _url.default.resolve(this.baseUrl, url);\n                }_context2.next = 4;return (\n                  (0, _util.readJSON)(url, this.readFile));case 4:data = _context2.sent;return _context2.abrupt(\"return\",\n                [chunkNumber, data]);case 6:case \"end\":return _context2.stop();}}}, _callee2, this);}));function getChunk(_x) {return _getChunk.apply(this, arguments);}return getChunk;}() }, { key: \"filterChunkData\", value: /*#__PURE__*/_regenerator.default.mark(function filterChunkData(\n\n\n    queryStart, queryEnd, chunkNumber, chunkData) {var firstIndex, chunkStart, chunkEnd, i;return _regenerator.default.wrap(function filterChunkData$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:\n              // index (in the overall lazy array) of the first position in this chunk\n              firstIndex = chunkNumber * this.chunkSize;\n              chunkStart = Math.max(0, queryStart - firstIndex);\n              chunkEnd = Math.min(queryEnd - firstIndex, this.chunkSize - 1);\n              i = chunkStart;case 4:if (!(i <= chunkEnd)) {_context3.next = 10;break;}_context3.next = 7;\n              return [i + firstIndex, chunkData[i]];case 7:i += 1;_context3.next = 4;break;case 10:case \"end\":return _context3.stop();}}}, filterChunkData, this);}) }]);return LazyArray;}();exports.default = LazyArray;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n","var _Array$isArray = require(\"@babel/runtime-corejs2/core-js/array/is-array\");\n\nfunction _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\n\nvar _Symbol$iterator = require(\"@babel/runtime-corejs2/core-js/symbol/iterator\");\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof _Symbol !== \"undefined\" && arr[_Symbol$iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","require('../../modules/es6.symbol');\nmodule.exports = require('../../modules/_core').Object.getOwnPropertySymbols;\n"],"sourceRoot":""}