{"version":3,"sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SetMaxHeight.tsx"],"names":["useStyles","makeStyles","theme","root","width","closeButton","position","right","spacing","top","color","palette","grey","field","margin","observer","props","model","handleClose","classes","maxHeight","useState","max","setMax","open","onClose","className","onClick","value","onChange","event","target","placeholder","variant","type","autoFocus","setMaxHeight","Number","isNaN","undefined"],"mappings":"2QAeMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,KAETC,YAAa,CACXC,SAAU,WACVC,MAAOL,EAAMM,QAAQ,GACrBC,IAAKP,EAAMM,QAAQ,GACnBE,MAAOR,EAAMS,QAAQC,KAAK,MAE5BC,MAAO,CACLC,OAAQZ,EAAMM,QAAQ,QAoEXO,8BAhEf,SAAyBC,GAOvB,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACTC,EAAUnB,IAChB,EAA2BiB,EAAnBG,iBAAR,MAAoB,GAApB,EACA,EAAsBC,mBAAS,GAAD,OAAID,IAAlC,mBAAOE,EAAP,KAAYC,EAAZ,KAEA,OACE,kBAAC,IAAD,CAAQC,MAAI,EAACC,QAASP,GACpB,kBAAC,IAAD,sBAEE,kBAAC,IAAD,CACE,aAAW,QACXQ,UAAWP,EAAQd,YACnBsB,QAAST,GAET,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAAeQ,UAAWP,EAAQhB,MAChC,kBAAC,IAAD,iHAIA,kBAAC,IAAD,CACEyB,MAAON,EACPO,SAAU,SAAAC,GACRP,EAAOO,EAAMC,OAAOH,QAEtBI,YAAY,gCAEd,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAAQ,YACRvB,MAAM,UACNwB,KAAK,SACLC,WAAS,EACTR,QAAS,WACPV,EAAMmB,aACI,KAARd,GAAee,OAAOC,OAAOhB,QAAciB,GAANjB,GAEvCJ,MATJ,UAcA,kBAAC,IAAD,CACEe,QAAQ,YACRvB,MAAM,YACNiB,QAAS,kBAAMT,MAHjB","file":"static/js/56.96c1853c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 500,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  field: {\n    margin: theme.spacing(2),\n  },\n}))\n\nfunction SetMaxHeightDlg(props: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: Function\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const classes = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog open onClose={handleClose}>\n      <DialogTitle>\n        Filter options\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        <Typography>\n          Set max height for the track. For example, you can increase this if\n          the layout says \"Max height reached\"\n        </Typography>\n        <TextField\n          value={max}\n          onChange={event => {\n            setMax(event.target.value)\n          }}\n          placeholder=\"Enter max height for layout\"\n        />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            autoFocus\n            onClick={() => {\n              model.setMaxHeight(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => handleClose()}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default observer(SetMaxHeightDlg)\n"],"sourceRoot":""}