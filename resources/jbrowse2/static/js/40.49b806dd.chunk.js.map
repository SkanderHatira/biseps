{"version":3,"sources":["../../../packages/core/ui/ErrorMessage.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/LinearSyntenyView.tsx"],"names":["useStyles","makeStyles","theme","message","border","background","overflow","maxHeight","margin","spacing","padding","errorBox","ErrorMessage","error","classes","str","snapshotError","match","className","slice","JSON","stringify","parse","headerBar","gridArea","display","spacer","flexGrow","emphasis","palette","secondary","main","hovered","light","displayName","paddingTop","paddingLeft","paddingRight","inputBase","color","contrastText","inputRoot","backgroundColor","inputFocused","borderColor","primary","InteractWithSquiggles","observer","model","IconButton","onClick","toggleInteract","title","interactToggled","LinkViews","toggleLinkViews","linkViews","Sync","toggleIntraviewLinks","showIntraviewLinks","Header","size","setHeaderHeight","height","withSize","monitorHeight","root","position","marginBottom","breakpointMarker","top","width","viewContainer","marginTop","container","overlay","zIndex","content","Overlays","tracks","map","track","displays","RenderingComponent","key","getConf","style","MiddleComparativeView","views","ReactComponent","getEnv","pluginManager","getViewType","type","OverlayComparativeView","view","id","LinearComparativeView","some","t","d","importFormContainer","formPaper","maxWidth","ImportForm","session","getSession","assemblyNames","assemblyManager","useState","selected","setSelected","uri","locationType","trackData","setTrackData","numRows","setError","assemblyError","length","a","get","filter","f","join","isSessionWithAddTracks","Promise","all","selection","waitForAssembly","assembly","Error","bpPerPx","offsetPx","hideHeader","displayedRegions","regions","setViews","forEach","setWidth","name","lastIndexOf","trackId","Date","now","addTrackConf","adapter","pafLocation","toggleTrack","console","displayError","Container","Paper","Grid","item","justifyContent","alignItems","Typography","Array","_","index","AssemblySelector","onChange","val","copy","textAlign","href","description","location","setLocation","loc","Button","disabled","variant","LinearSyntenyView","initialized"],"mappings":"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","file":"static/js/40.49b806dd.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  message: {\n    border: '1px solid black',\n    background: '#f88',\n    overflow: 'auto',\n    maxHeight: 200,\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n\n  errorBox: {\n    background: 'lightgrey',\n    border: '1px solid black',\n    margin: 20,\n  },\n}))\nconst ErrorMessage = ({ error }: { error: unknown }) => {\n  const classes = useStyles()\n\n  let str = `${error}`\n  let snapshotError = ''\n\n  // best effort to make a better error message than the default\n  // mobx-state-tree\n  const match = str.match(/.*at path \"(.*)\" snapshot `(.*)` is not assignable/)\n  if (match) {\n    str = `Failed to load element at ${match[1]}`\n    snapshotError = match[2]\n  }\n  return (\n    <div className={classes.message}>\n      {str.slice(0, 10000)}\n      {snapshotError ? (\n        <div>\n          ... Failed element had snapshot:\n          <pre className={classes.errorBox}>\n            {JSON.stringify(JSON.parse(snapshotError), null, 2)}\n          </pre>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ErrorMessage\n","import React from 'react'\nimport LeakAddIcon from '@material-ui/icons/LeakAdd'\nimport LeakRemoveIcon from '@material-ui/icons/LeakRemove'\nimport LinkIcon from '@material-ui/icons/Link'\nimport LinkOffIcon from '@material-ui/icons/LinkOff'\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching'\nimport LocationDisabledIcon from '@material-ui/icons/LocationDisabled'\nimport IconButton from '@material-ui/core/IconButton'\nimport { withSize } from 'react-sizeme'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { LinearComparativeViewModel } from '../model'\n\nconst useStyles = makeStyles(theme => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  emphasis: {\n    background: theme.palette.secondary.main,\n    padding: theme.spacing(1),\n  },\n  hovered: {\n    background: theme.palette.secondary.light,\n  },\n  displayName: {\n    background: theme.palette.secondary.main,\n    paddingTop: 3,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  inputBase: {\n    color: theme.palette.secondary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.light,\n  },\n}))\n\nconst InteractWithSquiggles = observer(\n  ({ model }: { model: LinearComparativeViewModel }) => {\n    return (\n      <IconButton\n        onClick={model.toggleInteract}\n        title=\"Toggle interacting with the overlay\"\n      >\n        {model.interactToggled ? (\n          <LocationSearchingIcon />\n        ) : (\n          <LocationDisabledIcon />\n        )}\n      </IconButton>\n    )\n  },\n)\n\nconst LinkViews = observer(\n  ({ model }: { model: LinearComparativeViewModel }) => {\n    return (\n      <IconButton\n        onClick={model.toggleLinkViews}\n        title=\"Toggle linked scrolls and behavior across views\"\n      >\n        {model.linkViews ? (\n          <LinkIcon color=\"secondary\" />\n        ) : (\n          <LinkOffIcon color=\"secondary\" />\n        )}\n      </IconButton>\n    )\n  },\n)\n\nconst Sync = observer(({ model }: { model: LinearComparativeViewModel }) => {\n  return (\n    <IconButton\n      onClick={model.toggleIntraviewLinks}\n      title=\"Toggle rendering intraview links\"\n    >\n      {model.showIntraviewLinks ? (\n        <LeakAddIcon color=\"secondary\" />\n      ) : (\n        <LeakRemoveIcon color=\"secondary\" />\n      )}\n    </IconButton>\n  )\n})\n\nconst Header = observer(\n  ({\n    model,\n    size,\n  }: {\n    model: LinearComparativeViewModel\n    size: { height: number }\n  }) => {\n    const classes = useStyles()\n\n    model.setHeaderHeight(size.height)\n    return (\n      <div className={classes.headerBar}>\n        <LinkViews model={model} />\n        <InteractWithSquiggles model={model} />\n        <Sync model={model} />\n\n        <div className={classes.spacer} />\n      </div>\n    )\n  },\n)\n\nexport default withSize({ monitorHeight: true })(Header)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { getConf } from '@jbrowse/core/configuration'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getEnv } from 'mobx-state-tree'\nimport { LinearComparativeViewModel } from '../model'\nimport Header from './Header'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      position: 'relative',\n      marginBottom: theme.spacing(1),\n      overflow: 'hidden',\n    },\n    breakpointMarker: {\n      position: 'absolute',\n      top: 0,\n      height: '100%',\n      width: '3px',\n      background: 'magenta',\n    },\n    viewContainer: {\n      marginTop: '3px',\n    },\n    container: {\n      display: 'grid',\n    },\n    overlay: {\n      zIndex: 100,\n      gridArea: '1/1',\n    },\n    content: {\n      gridArea: '1/1',\n    },\n  }\n})\n\ninterface Props {\n  model: LinearComparativeViewModel\n}\nconst Overlays = observer(({ model }: Props) => {\n  const classes = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={getConf(track, 'trackId')}\n            style={{ height: display.height }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(({ model }: Props) => {\n  const classes = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const viewType = pluginManager.getViewType(views[0].type) as any\n  const { ReactComponent } = viewType\n\n  return (\n    <div>\n      <Header model={model} />\n      <div className={classes.container}>\n        <ReactComponent model={views[0]} />\n        <div style={{ display: 'grid' }}>\n          <Overlays model={model} />\n        </div>\n        <ReactComponent model={views[1]} />\n      </div>\n    </div>\n  )\n})\nconst OverlayComparativeView = observer(({ model }: Props) => {\n  const classes = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  return (\n    <div>\n      <Header model={model} />\n      <div className={classes.container}>\n        <div className={classes.content}>\n          <div style={{ position: 'relative' }}>\n            {views.map(view => {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const viewType = pluginManager.getViewType(view.type) as any\n              const { ReactComponent } = viewType\n              return <ReactComponent key={view.id} model={view} />\n            })}\n          </div>\n          <Overlays model={model} />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nconst LinearComparativeView = observer(({ model }: Props) => {\n  const middle = model.tracks.some(t =>\n    t.displays.some((d: AnyConfigurationModel) => getConf(d, 'middle')),\n  )\n  return middle ? (\n    <MiddleComparativeView model={model} />\n  ) : (\n    <OverlayComparativeView model={model} />\n  )\n})\n\nexport default LinearComparativeView\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport AssemblySelector from '@jbrowse/core/ui/AssemblySelector'\nimport {\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { LinearSyntenyViewModel } from '../model'\nimport ErrorMessage from '@jbrowse/core/ui/ErrorMessage'\n\nconst useStyles = makeStyles(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n  },\n\n  formPaper: {\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: 12,\n    marginBottom: 10,\n  },\n}))\n\nconst ImportForm = observer(({ model }: { model: LinearSyntenyViewModel }) => {\n  const classes = useStyles()\n  const session = getSession(model)\n\n  const { assemblyNames, assemblyManager } = session\n  const [selected, setSelected] = useState([assemblyNames[0], assemblyNames[0]])\n  const [trackData, setTrackData] = useState<FileLocation>({\n    uri: '',\n    locationType: 'UriLocation',\n  })\n  const [numRows] = useState(2)\n  const [error, setError] = useState<unknown>()\n  const assemblyError = assemblyNames.length\n    ? selected\n        .map(a => assemblyManager.get(a)?.error)\n        .filter(f => !!f)\n        .join(', ')\n    : 'No configured assemblies'\n\n  async function onOpenClick() {\n    try {\n      if (!isSessionWithAddTracks(session)) {\n        return\n      }\n      model.setViews(\n        await Promise.all(\n          selected.map(async selection => {\n            const assembly = await assemblyManager.waitForAssembly(selection)\n            if (!assembly) {\n              throw new Error(`Assembly ${selection} failed to load`)\n            }\n            return {\n              type: 'LinearGenomeView' as 'LinearGenomeView',\n              bpPerPx: 1,\n              offsetPx: 0,\n              hideHeader: true,\n              displayedRegions: assembly.regions,\n            }\n          }),\n        ),\n      )\n\n      model.views.forEach(view => view.setWidth(model.width))\n\n      const name =\n        'uri' in trackData && trackData.uri\n          ? trackData.uri.slice(trackData.uri.lastIndexOf('/') + 1)\n          : 'MyTrack'\n\n      const trackId = `${name}-${Date.now()}`\n      session.addTrackConf({\n        trackId,\n        name,\n        assemblyNames: selected,\n        type: 'SyntenyTrack',\n        adapter: {\n          type: 'PAFAdapter',\n          pafLocation: trackData,\n          assemblyNames: selected,\n        },\n      })\n      model.toggleTrack(trackId)\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || assemblyError\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Paper className={classes.formPaper}>\n        <Grid\n          container\n          item\n          justifyContent=\"center\"\n          spacing={4}\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Typography>Select assemblies for synteny view</Typography>\n            {[...new Array(numRows)].map((_, index) => (\n              <AssemblySelector\n                key={`row_${index}_${selected[index]}`}\n                selected={selected[index]}\n                onChange={val => {\n                  // splice the value into the current array\n                  const copy = selected.slice(0)\n                  copy[index] = val\n                  setSelected(copy)\n                }}\n                session={session}\n              />\n            ))}\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Paper className={classes.formPaper}>\n        <Grid container justifyContent=\"center\">\n          <Typography style={{ textAlign: 'center' }}>\n            <b>Optional</b>: Add a PAF{' '}\n            <a href=\"https://github.com/lh3/miniasm/blob/master/PAF.md\">\n              (pairwise mapping format)\n            </a>{' '}\n            file for the linear synteny view. Note that the first assembly\n            should be the left column of the PAF and the second assembly should\n            be the right column\n          </Typography>\n          <Grid item>\n            <FileSelector\n              name=\"URL\"\n              description=\"\"\n              location={trackData}\n              setLocation={loc => setTrackData(loc)}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n      <Grid container justifyContent=\"center\">\n        <Grid item>\n          <Button\n            // only disable button on assemblyError. for other types of errors\n            // in the useState can retry\n            disabled={!!assemblyError}\n            onClick={onOpenClick}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Open\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default ImportForm\n\n/* ability to add another assembly commented out for now\n    Add another assembly...\n        <IconButton\n          onClick={() => setNumRows(rows => rows + 1)}\n          color=\"primary\"\n        >\n          <AddIcon />\n      </IconButton>\n            */\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport LinearComparativeViewComponent from '../../LinearComparativeView/components/LinearComparativeView'\nimport { LinearSyntenyViewModel } from '../model'\nimport ImportForm from './ImportForm'\n\nconst LinearSyntenyView = observer(\n  ({ model }: { model: LinearSyntenyViewModel }) => {\n    const { initialized } = model\n    if (!initialized) {\n      return <ImportForm model={model} />\n    }\n    return <LinearComparativeViewComponent model={model} />\n  },\n)\n\nexport default LinearSyntenyView\n"],"sourceRoot":""}