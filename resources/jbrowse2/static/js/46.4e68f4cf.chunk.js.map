{"version":3,"sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector.js"],"names":["CloseConnectionDialog","lazy","DeleteConnectionDialog","ManageConnectionsDialog","ToggleConnectionsDialog","useStyles","makeStyles","theme","searchBox","margin","spacing","menuIcon","marginRight","marginBottom","fab","position","bottom","right","compactCheckbox","padding","checkboxLabel","backgroundColor","accordionBase","display","accordionCard","cursor","nestingLevelMarker","borderLeft","accordionColor","background","palette","tertiary","_theme$palette$tertia","main","color","_theme$palette$tertia2","contrastText","width","paddingLeft","accordionText","Node","props","data","isOpen","style","setOpen","isLeaf","nestingLevel","checked","id","name","onChange","toggleCollapse","conf","onMoreInfo","drawerPosition","classes","marginLeft","unsupported","endsWith","description","readConfObject","React","className","undefined","Array","fill","map","_","idx","key","left","height","onClick","whiteSpace","Tooltip","title","placement","FormControlLabel","control","Checkbox","disabled","inputProps","label","IconButton","e","target","currentTarget","MoreIcon","Typography","ArrowDropDownIcon","ArrowRightIcon","getNodeData","node","extra","defaultHeight","isOpenByDefault","HierarchicalTree","observer","tree","model","filterText","view","treeRef","useRef","useState","info","setMoreInfo","session","getSession","useMemo","trackId","toggleTrack","pathName","toggleCategory","treeWalker","useCallback","i","children","length","_context","parentMeta","curr","menuItems","getTrackActionMenuItems","_session$getTrackActi","useEffect","current","recomputeTree","refreshNodes","useDefaultHeight","VariableSizeTree","ref","JBrowseMenu","anchorEl","onMenuItemClick","_event","callback","open","Boolean","onClose","AutoSizedHierarchicalTree","offset","jest","AutoSizer","disableWidth","Wrapper","overrideDimensions","HierarchicalTrackSelectorContainer","toolbarHeight","setAnchorEl","handleFabClose","HierarchicalTrackSelector","addConnectionConf","addTrackConf","Fab","event","AddIcon","Menu","MenuItem","widget","addWidget","showWidget","HierarchicalTrackSelectorHeader","setHeaderHeight","setAssemblyIdx","assemblyIdx","connectionAnchorEl","setConnectionAnchorEl","menuAnchorEl","setMenuAnchorEl","modalInfo","setModalInfo","deleteDialogDetails","setDeleteDialogDetails","connectionManagerOpen","setConnectionManagerOpen","connectionToggleOpen","setConnectionToggleOpen","assemblyNames","assemblyName","breakConnection","connectionConf","deletingConnection","result","prepareToBreakConnection","safelyBreakConnection","dereferenceTypeCount","Object","keys","connectionMenuItems","unshift","push","assemblyMenuItems","subMenu","getBoundingClientRect","MenuIcon","makeConnection","Cable","TextField","value","setFilterText","fullWidth","InputProps","endAdornment","InputAdornment","clearFilterText","ClearIcon","Suspense","fallback","handleClose","headerHeight","hierarchy"],"mappings":"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","file":"static/js/46.4e68f4cf.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, {\n  Suspense,\n  lazy,\n  useCallback,\n  useMemo,\n  useState,\n  useRef,\n  useEffect,\n} from 'react'\nimport {\n  Checkbox,\n  Fab,\n  FormControlLabel,\n  IconButton,\n  InputAdornment,\n  Menu,\n  MenuItem,\n  TextField,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core'\n\n// icons\nimport ClearIcon from '@material-ui/icons/Clear'\nimport AddIcon from '@material-ui/icons/Add'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport MoreIcon from '@material-ui/icons/MoreHoriz'\nimport { Cable } from '@jbrowse/core/ui/Icons'\n\n// other\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport { getSession } from '@jbrowse/core/util'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\nimport { VariableSizeTree } from 'react-vtree'\n\nconst CloseConnectionDialog = lazy(() => import('./CloseConnectionDialog'))\nconst DeleteConnectionDialog = lazy(() => import('./DeleteConnectionDialog'))\nconst ManageConnectionsDialog = lazy(() => import('./ManageConnectionsDialog'))\nconst ToggleConnectionsDialog = lazy(() => import('./ToggleConnectionsDialog'))\n\nconst useStyles = makeStyles(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n  menuIcon: {\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n  compactCheckbox: {\n    padding: 0,\n  },\n\n  checkboxLabel: {\n    marginRight: 0,\n    '&:hover': {\n      backgroundColor: '#eee',\n    },\n  },\n\n  // this accordionBase element's small padding is used to give a margin to\n  // accordionColor it a \"margin\" because the virtualized elements can't really\n  // use margin in a conventional way (it doesn't affect layout)\n  accordionBase: {\n    display: 'flex',\n  },\n\n  accordionCard: {\n    padding: 3,\n    cursor: 'pointer',\n    display: 'flex',\n  },\n\n  nestingLevelMarker: {\n    position: 'absolute',\n    borderLeft: '1.5px solid #555',\n  },\n  // accordionColor set's display:flex so that the child accordionText use\n  // vertically centered text\n  accordionColor: {\n    background: theme.palette.tertiary?.main,\n    color: theme.palette.tertiary?.contrastText,\n    width: '100%',\n    display: 'flex',\n    paddingLeft: 5,\n  },\n\n  // margin:auto 0 to center text vertically\n  accordionText: {\n    margin: 'auto 0',\n  },\n}))\n\n// An individual node in the track selector. Note: manually sets cursor:\n// pointer improves usability for what can be clicked\nconst Node = props => {\n  const { data, isOpen, style, setOpen } = props\n  const {\n    isLeaf,\n    nestingLevel,\n    checked,\n    id,\n    name,\n    onChange,\n    toggleCollapse,\n    conf,\n    onMoreInfo,\n    drawerPosition,\n  } = data\n\n  const classes = useStyles()\n  const width = 10\n  const marginLeft = nestingLevel * width + (isLeaf ? width : 0)\n  const unsupported =\n    name && (name.endsWith('(Unsupported)') || name.endsWith('(Unknown)'))\n  const description = (conf && readConfObject(conf, ['description'])) || ''\n\n  return (\n    <div style={style} className={!isLeaf ? classes.accordionBase : undefined}>\n      {new Array(nestingLevel).fill(0).map((_, idx) => (\n        <div\n          key={`mark-${idx}`}\n          style={{ left: idx * width + 4, height: style.height }}\n          className={classes.nestingLevelMarker}\n        />\n      ))}\n      <div\n        className={!isLeaf ? classes.accordionCard : undefined}\n        onClick={() => {\n          toggleCollapse(id)\n          setOpen(!isOpen)\n        }}\n        style={{\n          marginLeft,\n          whiteSpace: 'nowrap',\n          width: '100%',\n        }}\n      >\n        <div className={!isLeaf ? classes.accordionColor : undefined}>\n          {!isLeaf ? (\n            <div className={classes.accordionText}>\n              <Typography>\n                {isOpen ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\n                {name}\n              </Typography>\n            </div>\n          ) : (\n            <>\n              <Tooltip\n                title={description}\n                placement={drawerPosition === 'left' ? 'right' : 'left'}\n              >\n                <FormControlLabel\n                  className={classes.checkboxLabel}\n                  control={\n                    <Checkbox\n                      className={classes.compactCheckbox}\n                      checked={checked}\n                      onChange={() => onChange(id)}\n                      color=\"primary\"\n                      disabled={unsupported}\n                      inputProps={{\n                        'data-testid': `htsTrackEntry-${id}`,\n                      }}\n                    />\n                  }\n                  label={name}\n                />\n              </Tooltip>\n              <IconButton\n                onClick={e => onMoreInfo({ target: e.currentTarget, id, conf })}\n                color=\"secondary\"\n                data-testid={`htsTrackEntryMenu-${id}`}\n              >\n                <MoreIcon />\n              </IconButton>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst getNodeData = (node, nestingLevel, extra) => {\n  const isLeaf = !!node.conf\n  return {\n    data: {\n      defaultHeight: isLeaf ? 22 : 40,\n      isLeaf,\n      isOpenByDefault: true,\n      nestingLevel,\n      ...node,\n      ...extra,\n    },\n    nestingLevel,\n    node,\n  }\n}\n\n// this is the main tree component for the hierarchical track selector in note:\n// in jbrowse-web the toolbar is position=\"sticky\" which means the autosizer\n// includes the height of the toolbar, so we subtract the given offsets\nconst HierarchicalTree = observer(({ height, tree, model }) => {\n  const { filterText, view } = model\n  const treeRef = useRef(null)\n  const [info, setMoreInfo] = useState()\n  const session = getSession(model)\n  const { drawerPosition } = session\n\n  const extra = useMemo(\n    () => ({\n      onChange: trackId => view.toggleTrack(trackId),\n      toggleCollapse: pathName => model.toggleCategory(pathName),\n      onMoreInfo: setMoreInfo,\n      drawerPosition,\n    }),\n    [view, model, drawerPosition],\n  )\n  const treeWalker = useCallback(\n    function* treeWalker() {\n      for (let i = 0; i < tree.children.length; i++) {\n        yield getNodeData(tree.children[i], 0, extra)\n      }\n\n      while (true) {\n        const parentMeta = yield\n\n        for (let i = 0; i < parentMeta.node.children.length; i++) {\n          const curr = parentMeta.node.children[i]\n          yield getNodeData(curr, parentMeta.nestingLevel + 1, extra)\n        }\n      }\n    },\n    [tree, extra],\n  )\n\n  const conf = info?.conf\n  const menuItems = (conf && session.getTrackActionMenuItems?.(conf)) || []\n\n  useEffect(() => {\n    treeRef.current.recomputeTree({\n      refreshNodes: true,\n      useDefaultHeight: true,\n    })\n  }, [tree, filterText])\n  return (\n    <>\n      <VariableSizeTree ref={treeRef} treeWalker={treeWalker} height={height}>\n        {Node}\n      </VariableSizeTree>\n      <JBrowseMenu\n        anchorEl={info?.target}\n        menuItems={menuItems}\n        onMenuItemClick={(_event, callback) => {\n          callback()\n          setMoreInfo(undefined)\n        }}\n        open={Boolean(info)}\n        onClose={() => setMoreInfo(undefined)}\n      />\n    </>\n  )\n})\n\n// Don't use autosizer in jest and instead hardcode a height, otherwise fails\n// jest tests\nconst AutoSizedHierarchicalTree = ({ tree, model, offset }) => {\n  return typeof jest === 'undefined' ? (\n    <AutoSizer disableWidth>\n      {({ height }) => {\n        return (\n          <HierarchicalTree\n            height={height - offset}\n            model={model}\n            tree={tree}\n          />\n        )\n      }}\n    </AutoSizer>\n  ) : (\n    <HierarchicalTree height={9000} model={model} tree={tree} />\n  )\n}\n\nconst Wrapper = ({ overrideDimensions, children }) => {\n  return overrideDimensions ? (\n    <div style={{ ...overrideDimensions }}>{children}</div>\n  ) : (\n    <>{children}</>\n  )\n}\nconst HierarchicalTrackSelectorContainer = observer(\n  ({ model, toolbarHeight, overrideDimensions }) => {\n    const classes = useStyles()\n    const session = getSession(model)\n    const [anchorEl, setAnchorEl] = useState(null)\n\n    function handleFabClose() {\n      setAnchorEl(null)\n    }\n    return (\n      <Wrapper overrideDimensions={overrideDimensions}>\n        <HierarchicalTrackSelector\n          model={model}\n          toolbarHeight={toolbarHeight}\n          overrideDimensions={overrideDimensions}\n        />\n        {session.addConnectionConf || session.addTrackConf ? (\n          <>\n            <Fab\n              color=\"secondary\"\n              className={classes.fab}\n              onClick={event => {\n                setAnchorEl(event.currentTarget)\n              }}\n            >\n              <AddIcon />\n            </Fab>\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={() => setAnchorEl(null)}\n            >\n              {session.addConnectionConf ? (\n                <MenuItem\n                  onClick={() => {\n                    handleFabClose()\n                    const widget = session.addWidget(\n                      'AddConnectionWidget',\n                      'addConnectionWidget',\n                    )\n                    session.showWidget(widget)\n                  }}\n                >\n                  Add connection\n                </MenuItem>\n              ) : null}\n              {session.addTrackConf ? (\n                <MenuItem\n                  onClick={() => {\n                    handleFabClose()\n                    const widget = session.addWidget(\n                      'AddTrackWidget',\n                      'addTrackWidget',\n                      {\n                        view: model.view.id,\n                      },\n                    )\n                    session.showWidget(widget)\n                  }}\n                >\n                  Add track\n                </MenuItem>\n              ) : null}\n            </Menu>\n          </>\n        ) : null}\n      </Wrapper>\n    )\n  },\n)\n\nconst HierarchicalTrackSelectorHeader = observer(\n  ({ model, setHeaderHeight, setAssemblyIdx, assemblyIdx }) => {\n    const classes = useStyles()\n    const session = getSession(model)\n    const [connectionAnchorEl, setConnectionAnchorEl] = useState()\n    const [menuAnchorEl, setMenuAnchorEl] = useState()\n    const [modalInfo, setModalInfo] = useState()\n    const [deleteDialogDetails, setDeleteDialogDetails] = useState()\n    const [connectionManagerOpen, setConnectionManagerOpen] = useState(false)\n    const [connectionToggleOpen, setConnectionToggleOpen] = useState(false)\n    const { assemblyNames } = model\n    const assemblyName = assemblyNames[assemblyIdx]\n\n    function breakConnection(connectionConf, deletingConnection) {\n      const name = readConfObject(connectionConf, 'name')\n      const result = session.prepareToBreakConnection(connectionConf)\n      if (result) {\n        const [safelyBreakConnection, dereferenceTypeCount] = result\n        if (Object.keys(dereferenceTypeCount).length > 0) {\n          setModalInfo({\n            connectionConf,\n            safelyBreakConnection,\n            dereferenceTypeCount,\n            name,\n          })\n        } else {\n          safelyBreakConnection()\n        }\n      }\n      if (deletingConnection) {\n        setDeleteDialogDetails({ name, connectionConf })\n      }\n    }\n\n    const connectionMenuItems = [\n      {\n        label: 'Turn on/off connections...',\n        onClick: () => setConnectionToggleOpen(true),\n      },\n    ]\n\n    if (session.addConnectionConf) {\n      connectionMenuItems.unshift({\n        label: 'Add connection',\n        onClick: () => {\n          session.showWidget(\n            session.addWidget('AddConnectionWidget', 'addConnectionWidget'),\n          )\n        },\n      })\n\n      connectionMenuItems.push({\n        label: 'Delete connections...',\n        onClick: () => setConnectionManagerOpen(true),\n      })\n    }\n\n    const assemblyMenuItems =\n      assemblyNames.length > 1\n        ? [\n            {\n              label: 'Select assembly...',\n              subMenu: assemblyNames.map((name, idx) => ({\n                label: name,\n                onClick: () => {\n                  setAssemblyIdx(idx)\n                },\n              })),\n            },\n          ]\n        : []\n\n    const menuItems = [\n      {\n        label: 'Add track...',\n        onClick: () => {\n          session.showWidget(\n            session.addWidget('AddTrackWidget', 'addTrackWidget', {\n              view: model.view.id,\n            }),\n          )\n        },\n      },\n\n      ...assemblyMenuItems,\n    ]\n\n    return (\n      <div\n        ref={ref => setHeaderHeight(ref?.getBoundingClientRect().height || 0)}\n        data-testid=\"hierarchical_track_selector\"\n      >\n        <div style={{ display: 'flex' }}>\n          {session.addTrackConf && (\n            <IconButton\n              className={classes.menuIcon}\n              onClick={event => {\n                setMenuAnchorEl(event.currentTarget)\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n\n          {session.makeConnection && (\n            <IconButton\n              className={classes.menuIcon}\n              onClick={event => {\n                setConnectionAnchorEl(event.currentTarget)\n              }}\n            >\n              <Cable />\n            </IconButton>\n          )}\n\n          <TextField\n            className={classes.searchBox}\n            label=\"Filter tracks\"\n            value={model.filterText}\n            onChange={event => model.setFilterText(event.target.value)}\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton color=\"secondary\" onClick={model.clearFilterText}>\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </div>\n        <JBrowseMenu\n          anchorEl={connectionAnchorEl}\n          open={Boolean(connectionAnchorEl)}\n          onMenuItemClick={(_, callback) => {\n            callback()\n            setConnectionAnchorEl(undefined)\n          }}\n          onClose={() => setConnectionAnchorEl(undefined)}\n          menuItems={connectionMenuItems}\n        />\n        <JBrowseMenu\n          anchorEl={menuAnchorEl}\n          open={Boolean(menuAnchorEl)}\n          onMenuItemClick={(_, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          onClose={() => setMenuAnchorEl(undefined)}\n          menuItems={menuItems}\n        />\n        <Suspense fallback={<div />}>\n          {modalInfo ? (\n            <CloseConnectionDialog\n              modalInfo={modalInfo}\n              setModalInfo={setModalInfo}\n              session={session}\n            />\n          ) : deleteDialogDetails ? (\n            <DeleteConnectionDialog\n              handleClose={() => setDeleteDialogDetails(undefined)}\n              deleteDialogDetails={deleteDialogDetails}\n              session={session}\n            />\n          ) : null}\n          {connectionManagerOpen ? (\n            <ManageConnectionsDialog\n              handleClose={() => setConnectionManagerOpen(false)}\n              breakConnection={breakConnection}\n              session={session}\n            />\n          ) : null}\n          {connectionToggleOpen ? (\n            <ToggleConnectionsDialog\n              handleClose={() => setConnectionToggleOpen(false)}\n              session={session}\n              breakConnection={breakConnection}\n              assemblyName={assemblyName}\n            />\n          ) : null}\n        </Suspense>\n      </div>\n    )\n  },\n)\nconst HierarchicalTrackSelector = observer(({ model, toolbarHeight = 0 }) => {\n  const [assemblyIdx, setAssemblyIdx] = useState(0)\n  const [headerHeight, setHeaderHeight] = useState(0)\n\n  const { assemblyNames } = model\n  const assemblyName = assemblyNames[assemblyIdx]\n  return assemblyName ? (\n    <>\n      <HierarchicalTrackSelectorHeader\n        model={model}\n        setHeaderHeight={setHeaderHeight}\n        setAssemblyIdx={setAssemblyIdx}\n        assemblyIdx={assemblyIdx}\n      />\n      <AutoSizedHierarchicalTree\n        tree={model.hierarchy(assemblyName)}\n        model={model}\n        offset={toolbarHeight + headerHeight}\n      />\n    </>\n  ) : null\n})\n\nexport default HierarchicalTrackSelectorContainer\n"],"sourceRoot":""}