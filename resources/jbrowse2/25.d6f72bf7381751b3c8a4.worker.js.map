{"version":3,"sources":["../../../node_modules/node-libs-browser/node_modules/util/util.js","../../../node_modules/node-libs-browser/node_modules/util/support/isBufferBrowser.js","../../../node_modules/node-libs-browser/node_modules/inherits/inherits_browser.js","../../../node_modules/hic-straw/dist/hic-straw.esm.js","../../../node_modules/node-fetch/browser.js","../../../plugins/hic/src/HicAdapter/HicAdapter.ts"],"names":["getOwnPropertyDescriptors","Object","obj","keys","descriptors","i","length","getOwnPropertyDescriptor","formatRegExp","exports","format","f","isString","objects","arguments","push","inspect","join","args","len","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","process","noDeprecation","apply","this","warned","throwDeprecation","Error","traceDeprecation","console","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","value","recurseTimes","isFunction","constructor","prototype","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","array","hash","forEach","val","idx","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","name","isRegExp","RegExp","toString","call","isDate","Date","output","base","braces","isArray","toUTCString","l","hasOwnProperty","formatProperty","key","match","formatArray","map","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","get","set","split","line","substr","ar","Array","arg","re","objectToString","d","e","o","pad","n","debuglog","NODE_DEBUG","toUpperCase","test","pid","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","require","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","log","inherits","origin","add","kCustomPromisifiedSymbol","Symbol","undefined","callbackifyOnRejected","reason","cb","newReason","promisify","original","TypeError","defineProperty","enumerable","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","then","nextTick","rej","module","copy","fill","readUInt8","create","ctor","superCtor","super_","TempCtor","Zlib","Huffman","Util","CRC32","DEFLATE","RESERVED","opt_params","files","comment","password","Zip","CompressionMethod","STORE","OperatingSystem","MSDOS","UNIX","MACINTOSH","Flags","ENCRYPT","DESCRIPTOR","UTF8","FileHeaderSignature","LocalFileHeaderSignature","CentralDirectorySignature","addFile","input","compressed","size","crc32","Uint8Array","calc","deflateWithOption","buffer","option","encrypted","setPassword","compress","file","op1","op2","op3","endOfCentralDirectorySize","offset","flags","compressionMethod","date","plainSize","filenameLength","extraFieldLength","commentLength","filename","extraField","tmp","il","j","jl","localFileSize","centralDirectorySize","createEncryptionKey","encode","Math","random","needVersion","getFullYear","RawDeflate","getByte","updateKeys","single","Uint32Array","buildHuffmanTable","lengths","table","bitLength","code","skip","reversed","rtemp","listSize","maxCodeLength","minCodeLength","POSITIVE_INFINITY","RawInflate","blocks","bufferSize","totalpos","ip","bitsbuf","bitsbuflen","op","bfinal","bufferType","BufferType","ADAPTIVE","resize","BLOCK","MaxBackwardLength","MaxCopyLength","decompress","parseBlock","concatBufferBlock","concatBufferDynamic","Order","Uint16Array","LengthCodeTable","LengthExtraTable","DistCodeTable","DistExtraTable","FixedLiteralLengthTable","FixedDistanceTable","hdr","readBits","parseUncompressedBlock","parseFixedHuffmanBlock","parseDynamicHuffmanBlock","octet","readCodeByTable","codeWithLength","codeLength","inputLength","codeTable","preCopy","olength","subarray","expandBufferBlock","expandBufferAdaptive","fixRatio","decodeHuffmanAdaptive","decodeHuffmanBlock","codeLengthsTable","litlenTable","distTable","lengthTable","repeat","hlit","hdist","hclen","codeLengths","litlen","dist","currentLitlenTable","ti","codeDist","lengthCodeTable","lengthExtraTable","distCodeTable","distExtraTable","opt_param","backward","newSize","maxInflateSize","ratio","addRatio","block","pos","limit","RawInflateStream","opt_buffersize","ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE","blockLength","sp","status","Status","INITIALIZED","ip_","bitsbuflen_","bitsbuf_","BlockType","UNCOMPRESSED","FIXED","DYNAMIC","BLOCK_HEADER_START","BLOCK_HEADER_END","BLOCK_BODY_START","BLOCK_BODY_END","DECODE_BLOCK_START","DECODE_BLOCK_END","newInput","stop","readBlockHeader","currentBlockType","readUncompressedBlockHeader","decodeHuffman","concatBuffer","save_","restore_","expandBuffer","bits","Inflate","cmf","flg","rawinflate","verify","method","Adler32","InflateStream","readHeader","Gunzip","member","decompressed","getMembers","slice","decodeMember","concatMember","isize","inflated","inflen","c","ci","mtime","GunzipMember","id1","id2","cm","xfl","os","Gzip","FlagsMask","FEXTRA","xlen","decodeSubField","FNAME","fromCharCode","FCOMMENT","FHCRC","crc16","data","p","getName","getData","getMtime","deflateOptions","DefaultBufferSize","rawdeflate","now","UNKNOWN","charCodeAt","byteLength","FAT","AMIGA","VMS","VM_CMS","ATARI_TOS","HPFS","Z_SYSTEM","CP_M","TOPS_20","NTFS","QDOS","ACORN_RISCOS","FTEXT","Heap","getParent","index","getChild","current","parent","swap","heap","compressionType","CompressionType","lazy","freqsLitLen","freqsDist","NONE","Lz77MinLength","Lz77MaxLength","WindowSize","MaxCodeLength","HUFMAX","FixedHuffmanTable","blockArray","position","makeNocompressBlock","makeFixedHuffmanBlock","makeDynamicHuffmanBlock","isFinalBlock","btype","nlen","stream","BitStream","writeBits","lz77","fixedHuffman","finish","litLenLengths","litLenCodes","distLengths","distCodes","treeSymbols","treeLengths","treeCodes","bitlen","hclenOrder","transLengths","getLengths_","getCodesFromLengths_","getTreeSymbols_","freqs","codes","dynamicHuffman","dataArray","litLen","literal","Lz77Match","backwardDistance","getDistanceCode_","r","toLz77Array","codeArray","matchKey","matchList","longestMatch","prevMatch","windowSize","lz77buf","skipLength","writeMatch","lz77Array","shift","searchLongestMatch_","currentMatch","matchLength","matchMax","dl","permatch","litlenLengths","runLength","nResult","rpt","src","result","nodes","values","nSymbols","reversePackageMerge_","symbols","t","weight","next","minimumCost","flag","type","currentPosition","excess","half","takePackage","m","count","startCode","Unzip","eocdrOffset","numberOfThisDisk","startDisk","totalEntriesThisDisk","totalEntries","centralDirectoryOffset","fileHeaderList","filenameToIndex","FileHeader","version","compression","compressedSize","fileNameLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","relativeOffset","parse","LocalFileHeader","searchEndOfCentralDirectoryRecord","parseEndOfCentralDirectoryRecord","parseFileHeader","fileHeader","filelist","filetable","getFileData","localFileHeader","createDecryptionKey","decode","getFilenames","filenameList","stringToByteArray","update","adler","tlen","s1","s2","OptimizationParameter","bufferPosition","bitindex","DefaultBlockSize","oldbuf","number","reverse","ReverseTable","rev32_","s","crc","Table","num","Table_","Deflate","rawDeflate","rawDeflateOption","flevel","LOG2E","fdict","fs","fsOpen","fsRead","crossFetch","versions","node","fetch","BrowserLocalFile","blob","a","fullfill","fileReader","FileReader","onload","onerror","readAsArrayBuffer","util","open","read","NodeLocalFile","path","Buffer","alloc","fd","close","b","arrayBuffer","byteOffset","isNode$2","RemoteFile","url","config","includes","startsWith","resolveToken","token","ceil","headers","rangeString","oauthToken","navigator","vendor","userAgent","isChrome","isAmazonV4Signed","addParameter","apiKey","redirect","mode","response","statusText","paramSeparator","ThrottledFile","rateLimiter","fulfill","limiter","RateLimiter","wait","isCalled","calls","caller","setTimeout","bind","BufferedFile","bufferStart","bufferLength","start","end","bufferEnd","sliceEnd","sliceStart","l1","a1","l2","a2","concatBuffers","buffer1","buffer2","BinaryParser","dataView","littleEndian","view","VPointer","available","remLength","hasNext","retValue","getUint8","getShort","getInt16","getUShort","getUint16","getInt","getInt32","getUInt","getUint32","getLong","getString","getFixedLengthString","getFixedLengthTrimmedString","getFloat","getFloat32","getDouble","getFloat64","getVPointer","isLessThan","vp","isGreaterThan","print","MatrixZoomData","chr1","chr2","zoom","unit","binSize","region1","region2","chr","sameChr","binsize","blockBinCount","blockColumnCount","x1","x2","y1","y2","col1","floor","col2","row1","row2","blockNumbers","row","column","blockNumber","getBlockNumbersV8","binX1","binX2","binY1","binY2","translatedLowerPAD","translatedHigherPAD","translatedNearerDepth","log2","abs","sqrt","translatedFurtherDepth","nearerDepth","min","furtherDepth","max","block_number","getBlockNumbersV9","dis","zd","zoomIndex","sumCounts","occupiedCellCount","stdDev","percent95","nBlocks","blockIndex","StaticBlockIndex","avgCount","averageCount","filePosition","Matrix","zoomDataList","bpZoomData","fragZoomData","zdArray","chrIdx1","chrIdx2","chromosomes","DataView","c1","c2","nResolutions","zdList","parseMatrixZoomData","ContactRecord","bin1","bin2","counts","LRU","Map","item","delete","has","first","clear","NormalizationVector","nValues","dataType","cache","adjustedStart","adjustedEnd","startPosition","sizeInBytes","parser","getKey","chrIdx","resolution","isNode$3","GoogleRateLimiter","HicFile","loadFragData","fragmentSitesCache","normVectorCache","normalizationTypes","matrixCache","blockCache","BlockCache","remote","remoteFile","initialized","readHeaderAndFooter","binaryParser","magic","init","meta","footerPosition","readFooter","bodyPostion","masterIndex","currentValue","MAX_VALUE","remainingSize","genomeId","normVectorIndexPosition","normVectorIndexSize","attributes","nAttributes","chromosomeIndexMap","nChrs","toLowerCase","wholeGenomeChromosome","wholeGenomeResolution","round","bpResolutions","nBpResolutions","fragResolutions","nFragResolutions","chrAliasTable","chrName","nBytes","nEntries","miSize","expectedValueVectors","normExpectedValueVectorsPosition","maxSize","entry","readMatrix","matrix","parseMatrix","normalization","units","allRecords","idx1","getFileChrName","idx2","getBlocks","contactRecords","nvX1","nvX2","nvY1","nvY2","normVector1","normVector2","isNorm","getNormalizationVector","nv1","nv2","getValues","records","rec","y","nvnv","isNaN","getMatrix","getZoomData","getBlockNumbers","blockNumbersToQuery","promises","readBlock","all","newBlocks","concat","getBlockIndexEntry","inflate","plain","nRecords","binX","binY","binXOffset","binYOffset","useFloatContact","useIntXPos","useIntYPos","rowCount","dy","colCount","dx","nPts","w","Block","isInteger","canonicalName","getNormalizationVectorKey","getNormVectorIndex","normVectorIndex","nv","nvi","URL","encodeURIComponent","hostname","pathname","nviResponse","text","nviArray","decodeURIComponent","range","parseInt","readNormVectorIndex","readNormExpectedValuesAndNormVectorIndex","normalizationVectorIndexRange","parseNormVectorEntry","processEntries","byteCount","sizeEstimate","nviStart","skipExpectedValues","normalizedExpectedValueVectors","parseNext","chunkSize","p0","nChrScaleFactors","resolutionArray","chrAlias","zoomData","Straw","hicFile","getMetaData","getContactRecords","getNormalizationOptions","printIndexStats","global","window","getGlobal","default","Headers","Request","Response","GenericFilehandleWrapper","filehandle","allocUnsafe","bytesRead","openFilehandleWrapper","location","openLocation","HicAdapter","getSubAdapter","pluginManager","hic","hicLocation","readConfObject","HicStraw","statusCallback","setup","rest","metadata","bpPerPx","resolutions","chosenResolution","region","ObservableCreate","observer","refName","getResolution","res","record","complete","signal","BaseFeatureDataAdapter"],"mappings":"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AC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,SAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,SAAY,WAC5D,WAAY,WAAY,SAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,WAAY,WAC5D,WAAY,SAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,SAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAOtCjZ,EAAKG,MAAM4Y,MAAU,IAAI3U,YAAYpE,EAAKG,MAAM8Y,QAahDjZ,EAAKkZ,QAAU,SAASzX,EAAOnB,GAE7B/J,KAAKkL,MAAQA,EAEblL,KAAKuD,OACH,IAAM+H,WAAa7B,EAAKkZ,QAAQ3K,mBAElChY,KAAK2Z,gBAAkBlQ,EAAKkZ,QAAQ/I,gBAAgB1F,QAEpDlU,KAAK4iB,WAEL,IAEIjc,EAFAkc,EAAmB,GAYvB,IAAKlc,KAPDoD,IAAgBA,EAAa,KACc,kBAAlCA,EAAU,kBACnB/J,KAAK2Z,gBAAkB5P,EAAU,iBAKxBA,EACX8Y,EAAiBlc,GAAQoD,EAAWpD,GAItCkc,EAAgB,aAAmB7iB,KAAKuD,OAExCvD,KAAK4iB,WAAa,IAAInZ,EAAKgE,WAAWzN,KAAKkL,MAAO2X,IAOpDpZ,EAAKkZ,QAAQ3K,kBAAoB,MAKjCvO,EAAKkZ,QAAQ/I,gBAAkBnQ,EAAKgE,WAAWmM,gBAQ/CnQ,EAAKkZ,QAAQ9W,SAAW,SAASX,EAAOnB,GACtC,OAAQ,IAAIN,EAAKkZ,QAAQzX,EAAOnB,GAAa8B,YAO/CpC,EAAKkZ,QAAQ5gB,UAAU8J,SAAW,WAEhC,IAAIgL,EAIAxB,EAEAC,EAMAwN,EAEArB,EAEAle,EAEA2P,EAAM,EAMV,GAJA3P,EAASvD,KAAKuD,QAGdsT,EAAKpN,EAAKW,kBAAkBP,WAErBJ,EAAKW,kBAAkBP,QAI1B,MAAM,IAAI1J,MAAM,8BAOpB,GALAkV,EALYhI,KAAK0V,MAAQ1V,KAAKzG,IAAI6C,EAAKgE,WAAW0M,YAAc,GAKhD,EAAKtD,EACrBtT,EAAO2P,KAASmC,EAGR,EACAwB,IACDpN,EAAKW,kBAAkBP,QAS1B,MAAM,IAAI1J,MAAM,8BARhB,OAAQH,KAAK2Z,iBACX,KAAKlQ,EAAKkZ,QAAQ/I,gBAAgBI,KAAM8I,EAAS,EAAG,MACpD,KAAKrZ,EAAKkZ,QAAQ/I,gBAAgB3F,MAAO6O,EAAS,EAAG,MACrD,KAAKrZ,EAAKkZ,QAAQ/I,gBAAgB1F,QAAS4O,EAAS,EAAG,MACvD,QAAS,MAAM,IAAI3iB,MAAM,gCAoC/B,OA9BAmV,EAAOwN,GAAU,EAAME,EAEvB1N,GADS,IAAY,IAAND,EAAYC,GAAO,GAElC/R,EAAO2P,KAASoC,EAGhBmM,EAAQhY,EAAKiM,QAAQ1V,KAAKkL,OAE1BlL,KAAK4iB,WAAW3T,GAAKiE,EAErBA,GADA3P,EAASvD,KAAK4iB,WAAW/W,YACZ3N,QAIXqF,EAAS,IAAI+H,WAAW/H,EAAOkI,SAEpBvN,QAAUgV,EAAM,IACzBlT,KAAKuD,OAAS,IAAI+H,WAAW/H,EAAOrF,OAAS,GAC7C8B,KAAKuD,OAAOoB,IAAIpB,GAChBA,EAASvD,KAAKuD,SAEhBA,EAASA,EAAO4N,SAAS,EAAG+B,EAAM,IAI7BA,KAAUuO,GAAS,GAAM,IAChCle,EAAO2P,KAAUuO,GAAS,GAAM,IAChCle,EAAO2P,KAAUuO,GAAU,EAAK,IAChCle,EAAO2P,KAAyB,IAAfuO,EAEVle,GAGT,IA8CI0f,EACAC,EACAC,EA1CEC,EALiB,qBAAZvjB,GACa,MAApBA,EAAQwjB,UACiB,MAAzBxjB,EAAQwjB,SAASC,KAGOpd,EAAQ,MAAgBqd,MAE9CC,E,WAEF,WAAYC,GAAM,oBACdzjB,KAAK8L,KAAO2X,E,+EAGhB,WAAWjJ,EAAUtc,GAArB,eAAAwlB,EAAA,6DAEU5X,EAAO9L,KAAK8L,KAFtB,kBAIW,IAAI7D,SAAQ,SAAU0b,EAAUxb,GAEnC,IAAMyb,EAAa,IAAIC,WAWvB,GATAD,EAAWE,OAAS,SAAUze,GAC1Bse,EAASC,EAAWzF,SAGxByF,EAAWG,QAAU,SAAU1e,GAC3BhF,QAAQ+H,IAAI,4BAA8B0D,EAAK9I,MAC/CmF,EAAO,KAAMyb,SAGA1c,IAAbsT,EAAwB,CACxB,IAAMiJ,EAAO3X,EAAKmK,MAAMuE,EAAUA,EAAWtc,GAC7C0lB,EAAWI,kBAAkBP,QAG7BG,EAAWI,kBAAkBlY,OAtBzC,gD,gEAoCJ,GANoC,qBAAZjM,GAA+C,MAApBA,EAAQwjB,UAA6C,MAAzBxjB,EAAQwjB,SAASC,KAMlF,CACV,IAAMW,EAAO/d,EAAQ,MACrB+c,EAAK/c,EAAQ,KACbgd,EAASD,GAAMgB,EAAK1c,UAAU0b,EAAGiB,MACjCf,EAASF,GAAMgB,EAAK1c,UAAU0b,EAAGkB,M,IAG/BC,E,WAEF,WAAYtlB,GAAM,oBACdkB,KAAKqkB,KAAOvlB,EAAKulB,K,+EAIrB,WAAW7J,EAAUtc,GAArB,uBAAAwlB,EAAA,6DAEUjY,EAAS6Y,EAAOC,MAAMrmB,GAFhC,SAGqBglB,EAAOljB,KAAKqkB,KAAM,KAHvC,cAGUG,EAHV,gBAIyBrB,EAAOqB,EAAI/Y,EAAQ,EAAGvN,EAAQsc,GAJvD,cAIU2D,EAJV,OAMI8E,EAAGwB,MAAMD,GAAI,SAAUjkB,OAKjBmkB,EAAIvG,EAAO1S,OACXkZ,EAAcD,EAAEjZ,OAAOwK,MAAMyO,EAAEE,WAAYF,EAAEE,WAAaF,EAAErM,YAZtE,kBAaWsM,GAbX,iD,gEAiBGE,EAA8B,qBAAZhlB,GAA+C,MAApBA,EAAQwjB,UAA6C,MAAzBxjB,EAAQwjB,SAASC,KAE3FwB,E,WAEF,WAAYhmB,GAsEhB,IAAgBimB,EAtEM,oBACd/kB,KAAKglB,OAASlmB,EACdkB,KAAK+kB,KAoEGA,EApEUjmB,EAAKulB,MAAQvlB,EAAKimB,KAsEhCE,SAAS,qBACNF,EAAI7lB,QAAQ,oBAAqB,+BACjC6lB,EAAIG,WAAW,8BACfH,EAAI7lB,QAAQ,SAAU,YAEtB6lB,E,+EAvEX,WAAWvK,EAAUtc,GAArB,sBAoDmBinB,EApDnB,WAAAzB,EAAA,iGAAAA,EAAA,MAoDI,WAA4B0B,GAA5B,SAAA1B,EAAA,yDACyB,oBAAV0B,EADf,gCAEqBnd,QAAQC,QAAQkd,KAFrC,wEAIeA,GAJf,2CApDJ,yBAoDmBD,EApDnB,4CAEIjnB,EAASmP,KAAKgY,KAAKnnB,GACbonB,EAAUtlB,KAAKglB,OAAOM,SAAW,GACjCC,EAAc,SAAW/K,EAAW,KAAOA,EAAWtc,EAAS,GACrEonB,EAAO,MAAYC,EAEfR,EAAM/kB,KAAK+kB,IAAI9O,QACf4O,EACAS,EAAQ,cAAgB,SAEpBtlB,KAAKglB,OAAOQ,aACNJ,EAAQD,EAAanlB,KAAKglB,OAAOQ,YACvCF,EAAO,cAAP,iBAAqCF,IAEa,GAArCK,UAAUC,OAAO5iB,QAAQ,UAAiB,aAAa8C,KAAK6f,UAAUE,WACjFC,EAAWH,UAAUE,UAAU7iB,QAAQ,WAAa,EACpD+iB,EAAmB7lB,KAAK+kB,IAAIjiB,QAAQ,oBAAsB,EAE5D8iB,IAAaC,IACbd,EAAMe,EAAaf,EAAK,aAAc1X,KAAKC,SAASnK,SAAS,OAIjEnD,KAAKglB,OAAOe,SACZhB,EAAMe,EAAaf,EAAK,MAAO/kB,KAAKglB,OAAOe,SAzBnD,UA4B2B3C,EAAW2B,EAAK,CACnCtP,OAAQ,MACR6P,QAASA,EACTU,SAAU,SACVC,KAAM,SAhCd,WA4BUC,EA5BV,UAoCUzS,EAASyS,EAASzS,SAEV,KAtClB,uBAuCQpT,QAAQE,MAAR,UAAiBkT,EAAjB,aAA4BzT,KAAKglB,OAAOD,OAClC3c,EAAMjI,MAAM+lB,EAASC,aACvBjY,KAAOuF,EACLrL,EA1Cd,iCA4Ce8d,EAASvB,eA5CxB,iD,gEA4EJ,SAASmB,EAAaf,EAAK/hB,EAAMrB,GAC7B,IAAMykB,EAAiBrB,EAAIE,SAAS,KAAO,IAAM,IACjD,OAAOF,EAAMqB,EAAiBpjB,EAAO,IAAMrB,E,IAGzC0kB,E,WAEF,WAAYva,EAAMwa,GAAa,oBAC3BtmB,KAAK8L,KAAOA,EACZ9L,KAAKsmB,YAAcA,E,+EAIvB,WAAW9L,EAAUtc,GAArB,iBAAAwlB,EAAA,6DAEU5X,EAAO9L,KAAK8L,KACZwa,EAActmB,KAAKsmB,YAH7B,kBAKW,IAAIre,SAAQ,SAAUse,EAASpe,GAClCme,EAAYE,QAAZ,uCAAoB,WAAgBjoB,GAAhB,eAAAmlB,EAAA,+EAESnlB,EAAE4lB,KAAK3J,EAAUtc,GAF1B,OAENigB,EAFM,OAGZoI,EAAQpI,GAHI,gDAKZhW,EAAO,EAAD,IALM,yDAApB,sDAAAme,CAOGxa,OAbX,gD,gEAkBE2a,E,WAEF,WAAYC,GAAM,oBACd1mB,KAAK0mB,UAAgBxf,IAATwf,EAAqB,IAAMA,EAEvC1mB,KAAK2mB,UAAW,EAChB3mB,KAAK4mB,MAAQ,G,2CAIjB,SAAQjnB,GAEJ,IAAMiJ,EAAO5I,KAET6mB,EAAS,SAATA,IAEIje,EAAKge,MAAM1oB,SAAW0K,EAAK+d,WAC3B/d,EAAK+d,UAAW,EAChB/d,EAAKge,MAAMrJ,QAAQna,OACnB0jB,YAAW,WACPle,EAAK+d,UAAW,EAChBE,MACDje,EAAK8d,QAIhB,OAAO,WACH9d,EAAKge,MAAMjoB,KAAKgB,EAAGonB,KAAH,MAAApnB,EAAE,CAAMK,MAAN,kCAAetB,cACjCmoB,S,KAMNG,E,WAEF,WAAYloB,GAAM,oBACdkB,KAAK8L,KAAOhN,EAAKgN,KACjB9L,KAAKoL,KAAOtM,EAAKsM,MAAQ,KACzBpL,KAAKwa,SAAW,EAChBxa,KAAKinB,YAAc,EACnBjnB,KAAKknB,aAAe,EACpBlnB,KAAKyL,YAASvE,E,+EAIlB,WAAWsT,EAAUtc,GAArB,2CAAAwlB,EAAA,yDAEUyD,EAAQ3M,EACR4M,EAAM5M,EAAWtc,EACjB+oB,EAAcjnB,KAAKinB,YACnBI,EAAYrnB,KAAKinB,YAAcjnB,KAAKknB,eAGtChpB,EAAS8B,KAAKoL,MARtB,uBAWQpL,KAAKyL,YAASvE,EACdlH,KAAKinB,YAAc,EACnBjnB,KAAKknB,aAAe,EAb5B,kBAcelnB,KAAK8L,KAAKqY,KAAK3J,EAAUtc,IAdxC,YAiBQipB,GAASF,GAAeG,GAAOC,GAjBvC,wBAqBcC,GADAC,EAAaJ,EAAQF,GACG/oB,EArBtC,kBAsBe8B,KAAKyL,OAAOwK,MAAMsR,EAAYD,IAtB7C,aAyBaH,EAAQF,GAAeG,EAAMH,GAzB1C,wBA4BcO,EAAKP,EAAcE,EA5BjC,UA6ByBnnB,KAAK8L,KAAKqY,KAAK3J,EAAUgN,GA7BlD,WA6BcC,EA7Bd,UA8BcC,EAAKxpB,EAASspB,GACX,GA/BjB,wBAiCkBG,EAAK3nB,KAAKyL,OAAOwK,MAAM,EAAGyR,GAjC5C,kBAkCmBE,EAAcH,EAAIE,IAlCrC,iCAoCmBF,GApCnB,6CAyCaN,EAAQE,GAAaD,EAAMC,GAzCxC,oBA4CcG,EAAKH,EAAYF,EACjBI,EAAavnB,KAAKknB,aAAeM,EACjCC,EAAKznB,KAAKyL,OAAOwK,MAAMsR,EAAYvnB,KAAKknB,iBAExCQ,EAAKxpB,EAASspB,GACX,GAjDjB,4CAmDoCxnB,KAAK8L,KAAKqY,KAAKkD,EAAWrnB,KAAKoL,MAnDnE,eAmDgBpL,KAAKyL,OAnDrB,OAoDgBzL,KAAKinB,YAAcI,EACnBrnB,KAAKknB,aAAelnB,KAAKyL,OAAO4M,WAC1BsP,EAAK3nB,KAAKyL,OAAOwK,MAAM,EAAGyR,GAtDhD,kBAuDuBE,EAAcH,EAAIE,IAvDzC,uCA0DoB,KAAEzZ,MAAmB,MAAX,KAAEA,KA1DhC,0CA2D2BuZ,GA3D3B,4EAmEmBA,GAnEnB,yBA2E4BznB,KAAK8L,KAAKqY,KAAK3J,EAAUxa,KAAKoL,MA3E1D,eA2EQpL,KAAKyL,OA3Eb,OA4EQzL,KAAKinB,YAAczM,EACnBxa,KAAKknB,aAAelnB,KAAKyL,OAAO4M,WA7ExC,kBA8EerY,KAAKyL,OAAOwK,MAAM,EAAG/X,IA9EpC,2D,gEA8FA0pB,EAAgB,SAAUC,EAASC,GACnC,IAAIjb,EAAM,IAAIvB,WAAWuc,EAAQxP,WAAayP,EAAQzP,YAGtD,OAFAxL,EAAIlI,IAAI,IAAI2G,WAAWuc,GAAU,GACjChb,EAAIlI,IAAI,IAAI2G,WAAWwc,GAAUD,EAAQxP,YAClCxL,EAAIpB,QAKTsc,EAAe,SAAUC,EAAUC,GAErCjoB,KAAKioB,kBAAgC/gB,IAAjB+gB,GAA6BA,EACjDjoB,KAAKwa,SAAW,EAChBxa,KAAKkoB,KAAOF,EACZhoB,KAAK9B,OAAS8pB,EAAS3P,YA6K3B,SAAS8P,EAASlV,EAAO9G,GACrBnM,KAAKiT,MAAQA,EACbjT,KAAKmM,OAASA,EA5KlB4b,EAAahmB,UAAUqmB,UAAY,WAC/B,OAAOpoB,KAAK9B,OAAS8B,KAAKwa,UAG9BuN,EAAahmB,UAAUsmB,UAAY,WAC/B,OAAOroB,KAAK9B,OAAS8B,KAAKwa,UAG9BuN,EAAahmB,UAAUumB,QAAU,WAC7B,OAAOtoB,KAAKwa,SAAWxa,KAAK9B,OAAS,GAGzC6pB,EAAahmB,UAAU2L,QAAU,WAC7B,IAAI6a,EAAWvoB,KAAKkoB,KAAKM,SAASxoB,KAAKwa,SAAUxa,KAAKioB,cAEtD,OADAjoB,KAAKwa,WACE+N,GAGXR,EAAahmB,UAAU0mB,SAAW,WAE9B,IAAIF,EAAWvoB,KAAKkoB,KAAKQ,SAAS1oB,KAAKwa,SAAUxa,KAAKioB,cAEtD,OADAjoB,KAAKwa,UAAY,EACV+N,GAGXR,EAAahmB,UAAU4mB,UAAY,WAQ/B,IAAIJ,EAAWvoB,KAAKkoB,KAAKU,UAAU5oB,KAAKwa,SAAUxa,KAAKioB,cAEvD,OADAjoB,KAAKwa,UAAY,EACV+N,GAIXR,EAAahmB,UAAU8mB,OAAS,WAE5B,IAAIN,EAAWvoB,KAAKkoB,KAAKY,SAAS9oB,KAAKwa,SAAUxa,KAAKioB,cAEtD,OADAjoB,KAAKwa,UAAY,EACV+N,GAIXR,EAAahmB,UAAUgnB,QAAU,WAC7B,IAAIR,EAAWvoB,KAAKkoB,KAAKc,UAAUhpB,KAAKwa,SAAUxa,KAAKioB,cAEvD,OADAjoB,KAAKwa,UAAY,EACV+N,GAGXR,EAAahmB,UAAUknB,QAAU,WAI7B,IAAIvE,EAAI,GACRA,EAAE,GAAK1kB,KAAKkoB,KAAKM,SAASxoB,KAAKwa,UAC/BkK,EAAE,GAAK1kB,KAAKkoB,KAAKM,SAASxoB,KAAKwa,SAAW,GAC1CkK,EAAE,GAAK1kB,KAAKkoB,KAAKM,SAASxoB,KAAKwa,SAAW,GAC1CkK,EAAE,GAAK1kB,KAAKkoB,KAAKM,SAASxoB,KAAKwa,SAAW,GAC1CkK,EAAE,GAAK1kB,KAAKkoB,KAAKM,SAASxoB,KAAKwa,SAAW,GAC1CkK,EAAE,GAAK1kB,KAAKkoB,KAAKM,SAASxoB,KAAKwa,SAAW,GAC1CkK,EAAE,GAAK1kB,KAAKkoB,KAAKM,SAASxoB,KAAKwa,SAAW,GAC1CkK,EAAE,GAAK1kB,KAAKkoB,KAAKM,SAASxoB,KAAKwa,SAAW,GAE1C,IAAI7Y,EAAQ,EACZ,GAAI3B,KAAKioB,aACL,IAAK,IAAIhqB,EAAIymB,EAAExmB,OAAS,EAAGD,GAAK,EAAGA,IAC/B0D,EAAiB,IAARA,EAAe+iB,EAAEzmB,QAG9B,IAASA,EAAI,EAAGA,EAAIymB,EAAExmB,OAAQD,IAC1B0D,EAAiB,IAARA,EAAe+iB,EAAEzmB,GAMlC,OADA+B,KAAKwa,UAAY,EACV7Y,GAGXomB,EAAahmB,UAAUmnB,UAAY,SAAUnqB,GAIzC,IAFA,IACIwX,EADA+L,EAAI,GAE4C,IAA5C/L,EAAIvW,KAAKkoB,KAAKM,SAASxoB,KAAKwa,eAChC8H,GAAKrjB,OAAOqY,aAAaf,IACrBxX,GAAOujB,EAAEpkB,QAAUa,KAE3B,OAAOujB,GAGXyF,EAAahmB,UAAUonB,qBAAuB,SAAUpqB,GAEpD,IACId,EACAsY,EAFA+L,EAAI,GAGR,IAAKrkB,EAAI,EAAGA,EAAIc,EAAKd,KACjBsY,EAAIvW,KAAKkoB,KAAKM,SAASxoB,KAAKwa,aACpB,IACJ8H,GAAKrjB,OAAOqY,aAAaf,IAGjC,OAAO+L,GAGXyF,EAAahmB,UAAUqnB,4BAA8B,SAAUrqB,GAE3D,IACId,EACAsY,EAFA+L,EAAI,GAGR,IAAKrkB,EAAI,EAAGA,EAAIc,EAAKd,KACjBsY,EAAIvW,KAAKkoB,KAAKM,SAASxoB,KAAKwa,aACpB,KACJ8H,GAAKrjB,OAAOqY,aAAaf,IAGjC,OAAO+L,GAGXyF,EAAahmB,UAAUsnB,SAAW,WAE9B,IAAId,EAAWvoB,KAAKkoB,KAAKoB,WAAWtpB,KAAKwa,SAAUxa,KAAKioB,cAExD,OADAjoB,KAAKwa,UAAY,EACV+N,GAKXR,EAAahmB,UAAUwnB,UAAY,WAE/B,IAAIhB,EAAWvoB,KAAKkoB,KAAKsB,WAAWxpB,KAAKwa,SAAUxa,KAAKioB,cAExD,OADAjoB,KAAKwa,UAAY,EACV+N,GAGXR,EAAahmB,UAAUoM,KAAO,SAAU3I,GAGpC,OADAxF,KAAKwa,UAAYhV,EACVxF,KAAKwa,UAShBuN,EAAahmB,UAAU0nB,YAAc,WAEjC,IAAIjP,EAAWxa,KAAKwa,SAChBrO,EAAUnM,KAAKkoB,KAAKM,SAAShO,EAAW,IAAM,EAAMxa,KAAKkoB,KAAKM,SAAShO,GAMvEvH,EALqD,YAAR,IAAnCjT,KAAKkoB,KAAKM,SAAShO,EAAW,IACa,UAAR,IAAnCxa,KAAKkoB,KAAKM,SAAShO,EAAW,IACa,OAAR,IAAnCxa,KAAKkoB,KAAKM,SAAShO,EAAW,IACa,KAAR,IAAnCxa,KAAKkoB,KAAKM,SAAShO,EAAW,KACK,IAAnCxa,KAAKkoB,KAAKM,SAAShO,EAAW,IAO5C,OALAxa,KAAKwa,UAAY,EAKV,IAAI2N,EAASlV,EAAO9G,IAU/Bgc,EAASpmB,UAAU2nB,WAAa,SAAUC,GACtC,OAAO3pB,KAAKiT,MAAQ0W,EAAG1W,OAClBjT,KAAKiT,QAAU0W,EAAG1W,OAASjT,KAAKmM,OAASwd,EAAGxd,QAGrDgc,EAASpmB,UAAU6nB,cAAgB,SAAUD,GACzC,OAAO3pB,KAAKiT,MAAQ0W,EAAG1W,OAClBjT,KAAKiT,QAAU0W,EAAG1W,OAASjT,KAAKmM,OAASwd,EAAGxd,QAGrDgc,EAASpmB,UAAU8nB,MAAQ,WACvB,OAAY7pB,KAAKiT,MAAQ,IAAMjT,KAAKmM,Q,IAGlC2d,E,WAEF,WAAYC,EAAMC,GAAM,oBAEpBhqB,KAAK+pB,KAAOA,EACZ/pB,KAAKgqB,KAAOA,E,0CAGhB,WACI,OAAOhqB,KAAK+pB,KAAK/mB,KAAO,IAAMhD,KAAKgqB,KAAKhnB,KAAO,IAAMhD,KAAKiqB,KAAKC,KAAO,IAAMlqB,KAAKiqB,KAAKE,U,6BAG1F,SAAgBC,EAASC,EAASrK,GAG9B,GAAGoK,EAAQE,KAAOtqB,KAAKgqB,MAAQK,EAAQC,MAAQtqB,KAAK+pB,KAAM,CACtD,IAAMld,EAAMud,EACZA,EAAUC,EACVA,EAAUxd,EAGd,IAAM0d,EAAUvqB,KAAK+pB,OAAS/pB,KAAKgqB,KAC7BQ,EAAUxqB,KAAKiqB,KAAKE,QACpBM,EAAgBzqB,KAAKyqB,cACrBC,EAAmB1qB,KAAK0qB,iBAC9B,OAAQ1K,EAAU,IAAMuK,EAExB,WAaI,IAXA,IAAMI,EAAKP,EAAQjD,MAAQqD,EACrBI,EAAKR,EAAQhD,IAAMoD,EACnBK,EAAKR,EAAQlD,MAAQqD,EACrBM,EAAKT,EAAQjD,IAAMoD,EAEnBO,EAAO1d,KAAK2d,MAAML,EAAKF,GACvBQ,EAAO5d,KAAK2d,OAAOJ,EAAK,GAAKH,GAC7BS,EAAO7d,KAAK2d,MAAMH,EAAKJ,GACvBU,EAAO9d,KAAK2d,OAAOF,EAAK,GAAKL,GAE7BW,EAAe,GACZC,EAAMH,EAAMG,GAAOF,EAAME,IAC9B,IAAK,IAAIC,EAASP,EAAMO,GAAUL,EAAMK,IAAU,CAC9C,IAAIC,OAAW,EAEXA,EADAhB,GAAWc,EAAMC,EACHA,EAASZ,EAAmBW,EAE5BA,EAAMX,EAAmBY,EAEtCF,EAAanG,SAASsG,IACvBH,EAAazsB,KAAK4sB,GAI9B,OAAOH,EA5BwBI,GA+BnC,WAqBI,IAlBA,IAAMC,EAAQrB,EAAQjD,MAAQqD,EACxBkB,EAAQtB,EAAQhD,IAAMoD,EACtBmB,EAAQtB,EAAQlD,MAAQqD,EACxBoB,EAAQvB,EAAQjD,IAAMoD,EAItBqB,EAAqBxe,KAAK2d,OAAOS,EAAQE,GAAS,EAAIlB,GACtDqB,EAAsBze,KAAK2d,OAAOU,EAAQE,GAAS,EAAInB,GACvDsB,EAAwB1e,KAAK2d,MAAM3d,KAAK2e,KAAK,EAAI3e,KAAK4e,IAAIR,EAAQG,GAASve,KAAK6e,KAAK,GAAKzB,IAC1F0B,EAAyB9e,KAAK2d,MAAM3d,KAAK2e,KAAK,EAAI3e,KAAK4e,IAAIP,EAAQC,GAASte,KAAK6e,KAAK,GAAKzB,IAI3F2B,GADoBV,EAAQC,IAAUF,EAAQG,GAAS,EACtB,EAAIve,KAAKgf,IAAIN,EAAuBI,GACrEG,EAAejf,KAAKkf,IAAIR,EAAuBI,GAE/Cf,EAAe,GACZrqB,EAAQqrB,EAAarrB,GAASurB,EAAcvrB,IACjD,IAAK,IAAIwE,EAAMsmB,EAAoBtmB,GAAOumB,EAAqBvmB,IAAO,CAClE,IAAMinB,EAAezrB,EAAQ2pB,EAAmBnlB,EAChD6lB,EAAazsB,KAAK6tB,GAG1B,OAAOpB,EA1D8CqB,M,kCA8D7D,SAA2B1C,EAAMC,EAAM0C,GAEnC,IAAMC,EAAK,IAAI7C,EAAeC,EAAMC,GAE9BE,EAAOwC,EAAIxD,YACX0D,EAAYF,EAAI7D,SAChBgE,EAAYH,EAAIrD,WAChByD,EAAoBJ,EAAIrD,WACxB0D,EAASL,EAAIrD,WACb2D,EAAYN,EAAIrD,WAChBc,EAAUuC,EAAI7D,SACpB8D,EAAIlC,cAAgBiC,EAAI7D,SACxB8D,EAAIjC,iBAAmBgC,EAAI7D,SAC3B,IAAMoE,EAAUP,EAAI7D,SAEpB8D,EAAI1C,KAAO,CAAC5Q,MAAOuT,EAAW1C,KAAMA,EAAMC,QAASA,GAEnDwC,EAAGO,WAAa,IAAIC,EAAiBF,EAASP,GAE9C,IAEMU,EAAYP,GAFF9C,EAAK3e,KAAO+e,IACZH,EAAK5e,KAAO+e,GAS5B,OANAwC,EAAGU,aAAeD,EAClBT,EAAGE,UAAYA,EACfF,EAAGI,OAASA,EACZJ,EAAGG,kBAAoBA,EACvBH,EAAGK,UAAYA,EAERL,M,KAKTQ,E,WAEF,WAAYF,EAASP,GAEjB,IAFsB,oBACtB1sB,KAAKktB,WAAa,GACXD,KAAY,GAAG,CAClB,IAAM1B,EAAcmB,EAAI7D,SAClByE,EAAeZ,EAAIzD,UACnB7d,EAAOshB,EAAI7D,SACjB7oB,KAAKktB,WAAW3B,GAAe,CAAC+B,eAAcliB,S,sDAItD,SAAmBmgB,GACf,OAAOvrB,KAAKktB,WAAW3B,O,KAIzBgC,E,WAEF,WAAYxD,EAAMC,EAAMwD,GAAc,oBAClCxtB,KAAK+pB,KAAOA,EACZ/pB,KAAKgqB,KAAOA,EACZhqB,KAAKytB,WAAa,GAClBztB,KAAK0tB,aAAe,GAJc,oBAKnBF,GALmB,IAKlC,2BAA6B,KAApBb,EAAoB,QACJ,OAAjBA,EAAG1C,KAAKC,KACRlqB,KAAKytB,WAAW9uB,KAAKguB,GAErB3sB,KAAK0tB,aAAa/uB,KAAKguB,IATG,+B,yDAoBtC,SAAsBxC,EAASD,GAE3B,IADA,IAAMyD,EAAU,SAAWzD,EAAOlqB,KAAK0tB,aAAe1tB,KAAKytB,WAClDxvB,EAAI,EAAGA,EAAI0vB,EAAQzvB,OAAQD,IAAK,CAErC,GADS0vB,EAAQ1vB,GACVgsB,KAAKE,QAAUA,EAClB,OAAOlsB,EAAI,EAGnB,OAAO0vB,EAAQzvB,OAAS,I,yBAW5B,SAAYisB,EAASD,GAGjB,IADA,IAAMyD,EAAmB,QADzBzD,EAAOA,GAAQ,MACiBlqB,KAAKytB,WAAaztB,KAAK0tB,aAC9CzvB,EAAI,EAAGA,EAAI0vB,EAAQzvB,OAAQD,IAAK,CACrC,IAAI0uB,EAAKgB,EAAQ1vB,GACjB,GAAIksB,IAAYwC,EAAG1C,KAAKE,QACpB,OAAOwC,K,gCAYnB,SAAmBtT,EAAO6Q,GAEtB,OADgB,SAAWA,EAAOlqB,KAAK0tB,aAAe1tB,KAAKytB,YAC5CpU,M,qBAGnB,SAAcuU,EAASC,GACnB,GAAID,EAAUC,EAAS,CACnB,IAAMhhB,EAAM+gB,EACZA,EAAUC,EACVA,EAAUhhB,EAEd,gBAAU+gB,EAAV,YAAqBC,K,yBAGzB,SAAmBnW,EAAMoW,GAcrB,IAZA,IAAMpB,EAAM,IAAI3E,EAAa,IAAIgG,SAASrW,IACpCsW,EAAKtB,EAAI7D,SACToF,EAAKvB,EAAI7D,SAGTkB,EAAO+D,EAAYE,GACnBhE,EAAO8D,EAAYG,GAGrBC,EAAexB,EAAI7D,SACjBsF,EAAS,GAERD,KAAiB,GAAG,CACvB,IAAMvB,EAAK7C,EAAesE,oBAAoBrE,EAAMC,EAAM0C,GAC1DyB,EAAOxvB,KAAKguB,GAEhB,OAAO,IAAIY,EAAOS,EAAIC,EAAIE,O,KAK5BE,E,WAEF,WAAYC,EAAMC,EAAMC,GAAQ,oBAC5BxuB,KAAKsuB,KAAOA,EACZtuB,KAAKuuB,KAAOA,EACZvuB,KAAKwuB,OAASA,E,0CAGlB,WACI,OAAYxuB,KAAKsuB,KAAO,IAAMtuB,KAAKuuB,S,KAIrCE,E,WACF,aAAsB,IAAVlC,EAAU,uDAAJ,GAAI,oBAClBvsB,KAAKusB,IAAMA,EACXvsB,KAAKkE,IAAM,IAAIwqB,I,uCAGnB,SAAI3qB,GACA,IAAI4qB,EAAO3uB,KAAKkE,IAAIQ,IAAIX,GAMxB,OALI4qB,IAEA3uB,KAAKkE,IAAI0qB,OAAO7qB,GAChB/D,KAAKkE,IAAIS,IAAIZ,EAAK4qB,IAEfA,I,iBAGX,SAAI5qB,EAAKtB,GAEDzC,KAAKkE,IAAI2qB,IAAI9qB,GAAM/D,KAAKkE,IAAI0qB,OAAO7qB,GAE9B/D,KAAKkE,IAAIkH,OAASpL,KAAKusB,KAC5BvsB,KAAKkE,IAAI0qB,OAAO5uB,KAAK8uB,SAEzB9uB,KAAKkE,IAAIS,IAAIZ,EAAKtB,K,iBAGtB,SAAIsB,GACA,OAAO/D,KAAKkE,IAAI2qB,IAAI9qB,K,mBAGxB,WACI/D,KAAKkE,IAAI6qB,U,mBAGb,WACI,OAAO/uB,KAAKkE,IAAInG,OAAO4gB,OAAOhd,U,KA4BhCqtB,E,WAEF,WAAYljB,EAAMwhB,EAAc2B,EAASC,GAAU,oBAC/ClvB,KAAK8L,KAAOA,EACZ9L,KAAKstB,aAAeA,EACpBttB,KAAKivB,QAAUA,EACfjvB,KAAKkvB,SAAWA,EAChBlvB,KAAKmvB,WAAQjoB,E,oFAGjB,WAAgBigB,EAAOC,GAAvB,mCAAA1D,EAAA,4DAEQ1jB,KAAKmvB,OAAShI,EAAQnnB,KAAKmvB,MAAMhI,OAASC,EAAMpnB,KAAKmvB,MAAM/H,KAFnE,wBAGcgI,EAAgB/hB,KAAKkf,IAAI,EAAGpF,EAAQ,KACpCkI,EAAchiB,KAAKgf,IAAIrsB,KAAKivB,QAAS7H,EAAM,KAC3CkI,EAAgBtvB,KAAKstB,aAAe8B,EAAgBpvB,KAAKkvB,SAEzDK,GADA/pB,EAAI6pB,EAAcD,GACCpvB,KAAKkvB,SAPtC,SAQ2BlvB,KAAK8L,KAAKqY,KAAKmL,EAAeC,GARzD,UAQc7X,EARd,sDAUmBxQ,GAVnB,QAeQ,IAHMsoB,EAAS,IAAIzH,EAAa,IAAIgG,SAASrW,IAEvC2G,EAAS,GACNpgB,EAAI,EAAGA,EAAIuH,EAAGvH,IACnBogB,EAAOpgB,GA5BR,IA4Ba+B,KAAKkvB,SAAsBM,EAAOjG,YAAciG,EAAOnG,WAGvErpB,KAAKmvB,MAAQ,CACThI,MAAOiI,EACPhI,IAAKiI,EACLhR,OAAQA,GAtBpB,eA0BUkJ,EAAaJ,EAAQnnB,KAAKmvB,MAAMhI,MAChCG,EAAWC,GAAcH,EAAMD,GA3BzC,kBA4BWnnB,KAAKmvB,MAAM9Q,OAAOpI,MAAMsR,EAAYD,IA5B/C,iD,6EA+BA,WACI,OAAO0H,EAAoBS,OAAOzvB,KAAK8e,KAAM9e,KAAK0vB,OAAQ1vB,KAAKkqB,KAAMlqB,KAAK2vB,e,wCAI9E,SAAiC7Q,EAAM4Q,EAAQxF,EAAMyF,GACjD,OAAO7Q,EAAO,IAAM4Q,EAAS,IAAMxF,EAAO,IAAMyF,M,KAIlDC,EAA8B,qBAAZ/vB,GAA+C,MAApBA,EAAQwjB,UAA6C,MAAzBxjB,EAAQwjB,SAASC,KAK1FuM,EAAoB,IAAIpJ,EAAY,KAGpCqJ,E,WAEF,WAAYhxB,GAYR,GAZc,oBAEdkB,KAAKglB,OAASlmB,EAEdkB,KAAK+vB,aAAejxB,EAAKixB,aACzB/vB,KAAKgwB,mBAAqB,GAC1BhwB,KAAKiwB,gBAAkB,IAAIxB,EAAI,IAC/BzuB,KAAKkwB,mBAAqB,CAAC,QAC3BlwB,KAAKmwB,YAAc,IAAI1B,EAAI,IAC3BzuB,KAAKowB,WAAa,IAAIC,EAGlBvxB,EAAKgN,KACL9L,KAAK8L,KAAOhN,EAAKgN,UACd,GAAIhN,EAAK2kB,KACZzjB,KAAK8L,KAAO,IAAI0X,EAAiB1kB,EAAK2kB,WACnC,GAAI3kB,EAAKimB,KAAQjmB,EAAKulB,OAASuL,EAAW,CAC7C5vB,KAAK+kB,IAAMjmB,EAAKimB,KAAO/kB,KAAKqkB,KAC5BrkB,KAAKswB,QAAS,EAGd,IAAMC,EAAa,IAAIzL,EAAWhmB,IA6xBvBimB,EA5xBO/kB,KAAK+kB,KA6xBpBjiB,QAAQ,qBAAuB,GAAKiiB,EAAIjiB,QAAQ,4BAA8B,EA5xB7E9C,KAAK8L,KAAO,IAAIua,EAAckK,EAAYV,GAE1C7vB,KAAK8L,KAAOykB,MAEb,KAAIzxB,EAAKulB,KAKZ,MAAMlkB,MAAM,mDAHZH,KAAK8L,KAAO,IAAIsY,EAAc,CAACC,KAAMvlB,EAAKulB,OAqxBtD,IAAuBU,E,+EA7wBnB,sBAAArB,EAAA,0DAEQ1jB,KAAKwwB,YAFb,iEAKcxwB,KAAKywB,sBALnB,OAQQzwB,KAAKwwB,aAAc,EAR3B,gD,qHAYA,8BAAA9M,EAAA,8DACyBxc,IAAjBlH,KAAKggB,QADb,iCAE2BhgB,KAAK8L,KAAKqY,KAAK,EAAG,KAF7C,UAEczM,EAFd,qDAImBxQ,GAJnB,cAMcwpB,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IACnD1X,KAAK2wB,MAAQD,EAAaxH,YAC1BlpB,KAAKggB,QAAU0Q,EAAa7H,SARpC,kBASe7oB,KAAKggB,SATpB,iCAWehgB,KAAKggB,SAXpB,iD,sHAeA,sBAAA0D,EAAA,sEACU1jB,KAAK4wB,OADf,gCAEW5wB,KAAK6wB,MAFhB,gD,8HAKA,oDAAAnN,EAAA,sEAGqB1jB,KAAK8L,KAAKqY,KAAK,EAAG,IAHvC,WAGQzM,EAHR,SAIqC,IAApBA,EAAKW,WAJtB,sBAKclY,MAAM,yBALpB,UAOQuwB,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IACjD1X,KAAK2wB,MAAQD,EAAaxH,YAC1BlpB,KAAKggB,QAAU0Q,EAAa7H,WACxB7oB,KAAKggB,QAAU,GAVvB,uBAWc7f,MAAM,4BAA8BH,KAAKggB,SAXvD,eAaIhgB,KAAK8wB,eAAiBJ,EAAazH,UAbvC,UAiBUjpB,KAAK+wB,aAjBf,eAmBUC,EAAcnzB,OAAOwgB,OAAOre,KAAKixB,aAAa7sB,QAAO,SAACioB,EAAK6E,GAC7D,OAAO7jB,KAAKgf,IAAIA,EAAK6E,EAAa/J,SACnC/nB,OAAO+xB,WAEJC,EAAgBJ,EAAc,GAvBxC,UAwBiBhxB,KAAK8L,KAAKqY,KAAK,GAAIiN,GAxBpC,QAoCI,IAZA1Z,EAxBJ,OAyBIgZ,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IAE7C1X,KAAKqxB,SAAWX,EAAaxH,YAEzBlpB,KAAKggB,SAAW,IAChBhgB,KAAKsxB,wBAA0BZ,EAAazH,UAC5CjpB,KAAKuxB,oBAAsBb,EAAazH,WAG5CjpB,KAAKwxB,WAAa,GACdC,EAAcf,EAAa7H,SACxB4I,KAAgB,GACnBzxB,KAAKwxB,WAAWd,EAAaxH,aAAewH,EAAaxH,YAO7D,IAJAlpB,KAAK8tB,YAAc,GACnB9tB,KAAK0xB,mBAAqB,GACtBC,EAAQjB,EAAa7H,SACrB5qB,EAAI,EACD0zB,KAAU,GAMkB,SALzBrH,EAAM,CACRjR,MAAOpb,EACP+E,KAAM0tB,EAAaxH,YACnB9d,KAAMpL,KAAKggB,QAAU,EAAI0Q,EAAa7H,SAAW6H,EAAazH,YAE1DjmB,KAAK4uB,gBACT5xB,KAAK6xB,sBAAwBvH,EAC7BtqB,KAAK8xB,sBAAwBzkB,KAAK0kB,MAAM,EAAAzH,EAAIlf,OAEhDpL,KAAK8tB,YAAYnvB,KAAK2rB,GACtBtqB,KAAK0xB,mBAAmBpH,EAAItnB,MAAQsnB,EAAIjR,MACxCpb,IAKJ,IAFA+B,KAAKgyB,cAAgB,GACjBC,EAAiBvB,EAAa7H,SAC3BoJ,KAAmB,GACtBjyB,KAAKgyB,cAAcrzB,KAAK+xB,EAAa7H,UAGzC,GAAI7oB,KAAK+vB,eACL/vB,KAAKkyB,gBAAkB,IACnBC,EAAmBzB,EAAa7H,UACb,GACnB,KAAOsJ,KAAqB,GACxBnyB,KAAKkyB,gBAAgBvzB,KAAK+xB,EAAa7H,UAkBnD,IADA7oB,KAAKoyB,cAAgB,GACrB,MAAoBv0B,OAAOE,KAAKiC,KAAK0xB,oBAArC,gBAASW,EAAiD,MAE1CnN,WAAW,OACnBllB,KAAKoyB,cAAcC,EAAQvtB,OAAO,IAAMutB,EACrB,OAAZA,EACPryB,KAAKoyB,cAAL,KAA6BC,EAE7BryB,KAAKoyB,cAAc,MAAQC,GAAWA,EAM9CryB,KAAK6wB,KAAO,CACR,QAAW7wB,KAAKggB,QAChB,OAAUhgB,KAAKqxB,SACf,YAAerxB,KAAK8tB,YACpB,YAAe9tB,KAAKgyB,eAzG5B,iD,qHA+GA,8CAAAtO,EAAA,6DAGUvV,EAAOnO,KAAKggB,QAAU,EAAI,EAAI,GAHxC,SAIqBhgB,KAAK8L,KAAKqY,KAAKnkB,KAAK8wB,eAAgB3iB,GAJzD,UAIQuJ,EAJR,gDAMe,MANf,cASQgZ,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IAC3C4a,EAAStyB,KAAKggB,QAAU,EAAI0Q,EAAa7H,SAAW6H,EAAazH,UACnEsJ,EAAW7B,EAAa7H,SAItB2J,EAAoB,IAAXD,EAfnB,UAgBiBvyB,KAAK8L,KAAKqY,KAAKnkB,KAAK8wB,eAAiB3iB,EAAMd,KAAKgf,IAAImG,EAAQF,IAhB7E,QAqBI,IALA5a,EAhBJ,OAkBIgZ,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IAE7C1X,KAAKixB,YAAc,GACZsB,KAAa,GACVxuB,EAAM2sB,EAAaxH,YACnBhW,EAAMwd,EAAazH,UACnB7d,EAAOslB,EAAa7H,SAC1B7oB,KAAKixB,YAAYltB,GAAO,CAACojB,MAAOjU,EAAK9H,KAAMA,GAzBnD,OA4BIpL,KAAKyyB,qBAAuB,GA2BxBzyB,KAAKggB,QAAU,IACT7R,EAAOnO,KAAKggB,QAAU,EAAI,EAAI,EACpChgB,KAAK0yB,iCAAmC1yB,KAAK8wB,eAAiB3iB,EAAOmkB,GAzD7E,kBA2DWtyB,MA3DX,iD,0HA8DA,oCAAA0jB,EAAA,6DAEoB,EACZiP,EAAU,EAHlB,SAIgB3yB,KAAK4wB,OAJrB,OAKI,UAAgB/yB,OAAOE,KAAKiC,KAAKixB,aAAjC,eAASltB,EAAsC,KACrC6uB,EAAQ5yB,KAAKixB,YAAYltB,GAElB6uB,EAAMxnB,KACfwnB,EAAMxnB,KAAOunB,IACbA,EAAUC,EAAMxnB,MAV5B,gD,oHAgBA,WAAgBwiB,EAASC,GAAzB,iBAAAnK,EAAA,yDACU3f,EAAMwpB,EAAOkC,OAAO7B,EAASC,IAC/B7tB,KAAKmwB,YAAYtB,IAAI9qB,GAF7B,yCAGe/D,KAAKmwB,YAAYzrB,IAAIX,IAHpC,uBAK6B/D,KAAK6yB,WAAWjF,EAASC,GALtD,cAKciF,EALd,OAMQ9yB,KAAKmwB,YAAYxrB,IAAIZ,EAAK+uB,GANlC,kBAOeA,GAPf,iD,wHAWA,WAAiBlF,EAASC,GAA1B,qBAAAnK,EAAA,sEAEU1jB,KAAK4wB,OAFf,UAIQhD,EAAUC,IACJhhB,EAAM+gB,EACZA,EAAUC,EACVA,EAAUhhB,GAGR9I,EAAMwpB,EAAOkC,OAAO7B,EAAUC,GAC9BnrB,EAAM1C,KAAKixB,YAAYltB,GAXjC,8CAaemD,GAbf,uBAeuBlH,KAAK8L,KAAKqY,KAAKzhB,EAAIykB,MAAOzkB,EAAI0I,MAfrD,UAeUsM,EAfV,sDAiBexQ,GAjBf,iCAoBWqmB,EAAOwF,YAAYrb,EAAM1X,KAAK8tB,cApBzC,iD,+HAwBA,WAAwBkF,EAAe5I,EAASC,EAAS4I,EAAOzI,GAAhE,uFAAA9G,EAAA,6DAAyEwP,EAAzE,yCAEUlzB,KAAK4wB,OAFf,cAIUuC,EAAOnzB,KAAK0xB,mBAAmB1xB,KAAKozB,eAAehJ,EAAQE,MAC3D+I,EAAOrzB,KAAK0xB,mBAAmB1xB,KAAKozB,eAAe/I,EAAQC,OAE9C6I,EAAOE,GAAUF,IAASE,GAAQjJ,EAAQjD,OAASkD,EAAQjD,OAEpEva,EAAMud,EACZA,EAAUC,EACVA,EAAUxd,GAXlB,SAcyB7M,KAAKszB,UAAUlJ,EAASC,EAAS4I,EAAOzI,GAdjE,WAcU7b,EAdV,SAeqC,IAAlBA,EAAOzQ,OAf1B,0CAgBe,IAhBf,QAmBUq1B,EAAiB,GACjB5I,EAAKP,EAAQjD,MAAQqD,EACrBI,EAAKR,EAAQhD,IAAMoD,EACnBK,EAAKR,EAAQlD,MAAQqD,EACrBM,EAAKT,EAAQjD,IAAMoD,EACnBgJ,EAAOnmB,KAAK2d,MAAML,GAClB8I,EAAOpmB,KAAKgY,KAAKuF,GACjB8I,EAAOrmB,KAAK2d,MAAMH,GAClB8I,EAAOtmB,KAAKgY,KAAKyF,GA3B3B,cA4BsBnc,GA5BtB,gEA4BasE,EA5Bb,6BA8BgB2gB,OA9BhB,EA+BgBC,OA/BhB,EAgCgBC,EAASd,GAAmC,SAAlBA,EACxBjJ,EAAO/pB,KAAKozB,eAAehJ,EAAQE,KACnCN,EAAOhqB,KAAKozB,eAAe/I,EAAQC,MACrCwJ,EAnChB,kCAoCkC9zB,KAAK+zB,uBAAuBf,EAAejJ,EAAMkJ,EAAOzI,GApC1F,WAoCsBwJ,EApCtB,OAqC6BjK,IAASC,EArCtC,sBAqC8CgK,EArC9C,yCAqC0Dh0B,KAAK+zB,uBAAuBf,EAAehJ,EAAMiJ,EAAOzI,GArClH,+BAqCsByJ,EArCtB,MAuCoBD,IAAOC,EAvC3B,kCAwCwCD,EAAIE,UAAUV,EAAMC,GAxC5D,eAwCoBG,EAxCpB,iBAyCwCK,EAAIC,UAAUR,EAAMC,GAzC5D,QAyCoBE,EAzCpB,+BA2CoBC,GAAS,EA3C7B,sBAgD4B7gB,EAAMkhB,SAhDlC,IAgDY,2BAASC,EAAsB,SACvBlB,GAAekB,EAAI9F,MAAQ3D,GAAMyJ,EAAI9F,KAAO1D,GAAMwJ,EAAI7F,MAAQ1D,GAAMuJ,EAAI7F,KAAOzD,KAC3EgJ,GACM30B,EAAIi1B,EAAI9F,KACR+F,EAAID,EAAI7F,KAED,KADP+F,EAAOV,EAAYz0B,EAAIq0B,GAAQK,EAAYQ,EAAIX,KAClCa,MAAMD,KACf9F,EAAS4F,EAAI5F,OAAS8F,EAC5Bf,EAAe50B,KAAK,IAAI0vB,EAAclvB,EAAGk1B,EAAG7F,MAGhD+E,EAAe50B,KAAKy1B,IA3D5C,wMAkEWb,GAlEX,iE,6HAqEA,WAAgBnJ,EAASC,EAASH,EAAMC,GAAxC,wDAAAzG,EAAA,sEAEU1jB,KAAK4wB,OAFf,UAGU7G,EAAO/pB,KAAKozB,eAAehJ,EAAQE,KACnCN,EAAOhqB,KAAKozB,eAAe/I,EAAQC,KACnC6I,EAAOnzB,KAAK0xB,mBAAmB3H,GAC/BsJ,EAAOrzB,KAAK0xB,mBAAmB1H,QAExB9iB,IAATisB,EARR,yCASe,IATf,eAWiBjsB,IAATmsB,EAXR,0CAYe,IAZf,yBAeyBrzB,KAAKw0B,UAAUrB,EAAME,GAf9C,WAeUP,EAfV,iDAiBe,IAjBf,WAoBUnG,EAAKmG,EAAO2B,YAAYtK,EAASD,GApB3C,uBAsBYtqB,EAtBZ,6CAsBwDuqB,EAtBxD,qBAsB4EC,EAAQE,IAtBpF,YAsB2FD,EAAQC,KACrF,IAAInqB,MAAMP,GAvBxB,QA0BUwrB,EAAeuB,EAAG+H,gBAAgBtK,EAASC,EAASrqB,KAAKggB,SAEzDrR,EAAS,GACTgmB,EAAsB,GA7BhC,cA8BoBvJ,GA9BpB,IA8BI,2BAAS3I,EAAqB,QACtBziB,KAAKowB,WAAWvB,IAAI1E,EAAS1H,GAC7B9T,EAAOhQ,KAAKqB,KAAKowB,WAAW1rB,IAAIylB,EAAS1H,IAEzCkS,EAAoBh2B,KAAK8jB,GAlCrC,qCAsCUmS,EAAWD,EAAoBzwB,KAAI,SAAAqnB,GAAW,OAAI,EAAKsJ,UAAUtJ,EAAaoB,MAtCxF,UAuC4B1kB,QAAQ6sB,IAAIF,GAvCxC,QAuCUG,EAvCV,qBAwCsBA,GAxCtB,IAwCI,4BAAS9hB,EAAoB,UAErBjT,KAAKowB,WAAWzrB,IAAIwlB,EAASlX,EAAMsY,YAAatY,GA1C5D,uDA6CWtE,EAAOqmB,OAAOD,IA7CzB,iD,2HAgDA,WAAgBxJ,EAAaoB,GAA7B,iFAAAjJ,EAAA,sEAEsBiJ,EAAGO,WAAW+H,mBAAmB1J,GAFvD,UAEU7oB,EAFV,qDAKewE,GALf,uBAOyBlH,KAAK8L,KAAKqY,KAAKzhB,EAAI4qB,aAAc5qB,EAAI0I,MAP9D,UAOYsM,EAPZ,sDASmBxQ,GATnB,WAYcguB,EAAU,IAAIzrB,EAAK2L,QAAQ,IAAI9J,WAAWoM,IAC1Cyd,EAAQD,EAAQxlB,aAEtBgI,EAAOyd,EAAM1pB,OAEP+jB,EAAS,IAAIzH,EAAa,IAAIgG,SAASrW,IACvC0d,EAAW5F,EAAO3G,SAClBsL,EAAU,KAEZn0B,KAAKggB,QAAU,GArB3B,iBAsBY,IAAS/hB,EAAI,EAAGA,EAAIm3B,EAAUn3B,IACpBo3B,EAAO7F,EAAO3G,SACdyM,EAAO9F,EAAO3G,SACd2F,EAASgB,EAAOnG,WACtB8K,EAAQx1B,KAAK,IAAI0vB,EAAcgH,EAAMC,EAAM9G,IA1B3D,2BA8BkB+G,EAAa/F,EAAO3G,SACpB2M,EAAahG,EAAO3G,SAEpB4M,EAAuC,IAArBjG,EAAO9hB,UACzBgoB,IAAa11B,KAAKggB,QAAU,IAAgC,GAApBwP,EAAO9hB,UAC/CioB,IAAa31B,KAAKggB,QAAU,IAAgC,GAApBwP,EAAO9hB,UAGxC,KAFPoR,EAAO0Q,EAAO9hB,WApChC,iBAyCgB,IADMkoB,EAAWD,EAAanG,EAAO3G,SAAW2G,EAAO/G,WAC9CxqB,EAAI,EAAGA,EAAI23B,EAAU33B,IAI1B,IAHM43B,EAAKF,EAAanG,EAAO3G,SAAW2G,EAAO/G,WAC3C6M,EAAOE,EAAaK,EACpBC,EAAWJ,EAAalG,EAAO3G,SAAW2G,EAAO/G,WAC9C1b,EAAI,EAAGA,EAAI+oB,EAAU/oB,IACpBgpB,EAAKL,EAAalG,EAAO3G,SAAW2G,EAAO/G,WAC3C4M,EAAOE,EAAaQ,EACpBvH,EAASiH,EAAkBjG,EAAOnG,WAAamG,EAAO/G,WAC5D0L,EAAQx1B,KAAK,IAAI0vB,EAAcgH,EAAMC,EAAM9G,IAjDnE,2BAoD+B,GAAR1P,EApDvB,iBAyDgB,IAHMkX,EAAOxG,EAAO3G,SACdoN,EAAIzG,EAAO/G,WAERxqB,EAAI,EAAGA,EAAI+3B,EAAM/3B,IAEhBotB,EAAMhe,KAAK2d,MAAM/sB,EAAIg4B,GAErB3H,EAAOiH,GADDt3B,EAAIotB,EAAM4K,GAEhB1H,EAAOiH,EAAanK,EAEtBoK,GACMjH,EAASgB,EAAOnG,WACjBkL,MAAM/F,IACP2F,EAAQx1B,KAAK,IAAI0vB,EAAcC,EAAMC,EAAMC,MAtenD,QAyeUA,EAASgB,EAAO/G,aAElB0L,EAAQx1B,KAAK,IAAI0vB,EAAcC,EAAMC,EAAMC,IAxEvE,8BA6EsB,IAAIruB,MAAM,uBAAyB2e,GA7EzD,iCAkFe,IAAIoX,EAAM3K,EAAaoB,EAAIwH,EAASzxB,IAlFnD,iD,oIAwFA,WAA6Boc,EAAMwL,EAAKJ,EAAMC,GAA9C,qBAAAzG,EAAA,sEACU1jB,KAAK4wB,OADf,cAGQxxB,OAAO+2B,UAAU7L,GACjBoF,EAASpF,GAEH8L,EAAgBp2B,KAAKozB,eAAe9I,GAC1CoF,EAAS1vB,KAAK0xB,mBAAmB0E,IAE/BryB,EAAMsyB,EAA0BvX,EAAM4Q,EAAQxF,EAAK/mB,WAAYgnB,GATzE,SAUkCnqB,KAAKs2B,qBAVvC,cAUUC,EAVV,yBAWWA,GAAmBA,EAAgBxyB,IAX9C,gD,wIAcA,WAA6B+a,EAAMwL,EAAKJ,EAAMC,GAA9C,mCAAAzG,EAAA,sEAEU1jB,KAAK4wB,OAFf,UAKQxxB,OAAO+2B,UAAU7L,GACjBoF,EAASpF,GAEH8L,EAAgBp2B,KAAKozB,eAAe9I,GAC1CoF,EAAS1vB,KAAK0xB,mBAAmB0E,IAG/BryB,EAAMsyB,EAA0BvX,EAAM4Q,EAAQxF,EAAK/mB,WAAYgnB,IAEjEnqB,KAAKiwB,gBAAgBpB,IAAI9qB,GAdjC,yCAee/D,KAAKiwB,gBAAgBvrB,IAAIX,IAfxC,uBAkBkC/D,KAAKs2B,qBAlBvC,UAkBUC,EAlBV,sDAqBervB,GArBf,WAwBUxE,EAAM6zB,EAAgBxyB,GAxBhC,+CA2BemD,GA3Bf,yBA8BuBlH,KAAK8L,KAAKqY,KAAKzhB,EAAI4qB,aAAc,GA9BxD,WA8BU5V,EA9BV,sDAiCexQ,GAjCf,eAoCUsoB,EAAS,IAAIzH,EAAa,IAAIgG,SAASrW,IACvCuX,EAAUjvB,KAAKggB,QAAU,EAAIwP,EAAO3G,SAAW2G,EAAOvG,UACtDiG,EAAWlvB,KAAKggB,QAAU,EA9iBvB,EACH,EA8iBAsN,EAAettB,KAAKggB,QAAU,EAAItd,EAAI4qB,aAAe,EAAI5qB,EAAI4qB,aAAe,EAC5EkJ,EAAK,IAAIxH,EAAoBhvB,KAAK8L,KAAMwhB,EAAc2B,EAASC,GACrElvB,KAAKiwB,gBAAgBtrB,IAAIZ,EAAKyyB,GAzClC,kBA0CWA,GA1CX,iD,oIA8CA,sCAAA9S,EAAA,2DAEQ1jB,KAAKggB,QAAU,GAFvB,8CAGe9Y,GAHf,UAMSlH,KAAKu2B,gBANd,oBASav2B,KAAKglB,OAAOyR,MAAOz2B,KAAKswB,SAAUtwB,KAAK+kB,IATpD,wBAUkBA,EAAM,IAAI2R,IAAI12B,KAAK+kB,KACnBhhB,EAAM4yB,mBAAmB5R,EAAI6R,SAAW7R,EAAI8R,UAX9D,SAYsCzT,EAAW,kEAAoErf,GAZrH,UAauC,OADrB+yB,EAZlB,QAa4BrjB,OAb5B,kCAckCqjB,EAAYC,OAd9C,SAcsBN,EAdtB,UAgBoBz2B,KAAKglB,OAAOyR,IAAMA,GAhBtC,YAqBYz2B,KAAKglB,OAAOyR,IArBxB,wBAsBkBO,EAAWC,mBAAmBj3B,KAAKglB,OAAOyR,KAAK7xB,MAAM,KACrDsyB,EAAQ,CAAC/P,MAAOgQ,SAASH,EAAS,IAAK5rB,KAAM+rB,SAASH,EAAS,KAvBjF,kBAwBmBh3B,KAAKo3B,oBAAoBF,IAxB5C,mCA2BsBl3B,KAAKq3B,2CA3B3B,iCA4BuBr3B,KAAKu2B,iBA5B5B,mCA8B+B,QAAX,KAAEroB,MAA6B,MAAX,KAAEA,KAEtBlO,KAAK0yB,sCAAmCxrB,EAExC7G,QAAQE,MAAR,MAlCpB,iCAwCWP,KAAKu2B,iBAxChB,2D,kIA2CA,sBAAA7S,EAAA,sEAGU1jB,KAAKs2B,qBAHf,gCAIWt2B,KAAKkwB,oBAJhB,gD,8HAcA,WAA0BgH,GAA1B,mBAAAxT,EAAA,sEAEU1jB,KAAK4wB,OAFf,cAII5wB,KAAKs3B,8BAAgCJ,EAJzC,SAMuBl3B,KAAK8L,KAAKqY,KAAK+S,EAAM/P,MAAO+P,EAAM9rB,MANzD,OAaI,IAPMsM,EANV,OAQUgZ,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IAEnD1X,KAAKu2B,gBAAkB,GAEnBhE,EAAW7B,EAAa7H,SACrB0J,KAAa,GAChBvyB,KAAKu3B,qBAAqB7G,GAdlC,yBAiBW1wB,KAAKu2B,iBAjBhB,iD,oJA4BA,6BA8BmBiB,EA9BnB,WAAA9T,EAAA,iGAAAA,EAAA,MA8BI,WAA8B6O,EAAU7a,GAAxC,qBAAAgM,EAAA,sDAEUgN,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IAFvD,YAIW6a,KAAa,GAJxB,sBAMY7B,EAAatI,YAAc,KANvC,wBAQYmK,IAEAkF,GAAa/G,EAAalW,SACpBkd,EAAerqB,KAAKkf,IAAI,IAAiB,GAAXgG,GAC9B2E,EAAQ,CAAC/P,MAAOwQ,EAAWF,EAAWrsB,KAAMssB,GAZ9D,SAa+B13B,KAAK8L,KAAKqY,KAAK+S,EAAM/P,MAAO+P,EAAM9rB,MAbjE,cAakBsM,EAblB,yBAcmB8f,EAAep0B,KAAKpD,KAAMuyB,EAAU7a,IAdvD,QAiBQ1X,KAAKu3B,qBAAqB7G,GAjBlC,uBAoBI+G,GAAa/G,EAAalW,SApB9B,iDA9BJ,yBA8BmBgd,EA9BnB,uDAEUx3B,KAAK4wB,OAFf,eAIkD1pB,IAA1ClH,KAAK0yB,iCAJb,iEAQ2B1yB,KAAK43B,mBAAmB53B,KAAK0yB,kCARxD,cAQUiF,EARV,OASQF,EAlpBA,EAyoBR,UAWqBz3B,KAAK8L,KAAKqY,KAAKwT,EAppB5B,GAyoBR,WAY4B,KADpBjgB,EAXR,QAYaW,WAZb,0DAgBUqY,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IAC7C6a,EAAW7B,EAAa7H,SAExBqO,EAAQ,CAAC/P,MAAOwQ,EAAWF,EAAWrsB,KADZ,GAAXmnB,GAlBzB,UAqBiBvyB,KAAK8L,KAAKqY,KAAK+S,EAAM/P,MAAO+P,EAAM9rB,MArBnD,eAqBIsM,EArBJ,OAsBI1X,KAAK63B,+BAAiC,GACtC73B,KAAKu2B,gBAAkB,GAvB3B,UA0BUiB,EAAep0B,KAAKpD,KAAMuyB,EAAU7a,GA1B9C,QA4BI1X,KAAKglB,OAAOyR,IAAMkB,EAASx0B,WAAa,IAAMs0B,EA5BlD,iD,6HA6DA,WAAyBtQ,GAAzB,gBAemB2Q,EAfnB,WAAApU,EAAA,iGAAAA,EAAA,MAeI,WAAyByD,EAAOoL,GAAhC,2BAAA7O,EAAA,6DAEQwT,EAAQ,CAAC/P,MAAOA,EAAO/b,KAAM,KAC7B2sB,EAAY,EACZC,EAAK7Q,EAJb,SAMqBrb,EAAKqY,KAAK+S,EAAM/P,MAAO+P,EAAM9rB,MANlD,cAMQsM,EANR,OAOQgZ,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IACpCgZ,EAAaxH,YACbwH,EAAaxH,YACVwH,EAAa7H,SACvBoG,EAAUjP,EAAU,EAAI0Q,EAAa7H,SAAW6H,EAAazH,UAEnE8O,GAAarH,EAAalW,SAAWyU,GAAWjP,EAAU,EApuBrD,EACH,GAquBFkX,EAAQ,CAAC/P,MAAOA,EAAQ4Q,EAAW3sB,KApuBnC,GAqtBJ,UAgBiBU,EAAKqY,KAAK+S,EAAM/P,MAAO+P,EAAM9rB,MAhB9C,WAgBIsM,EAhBJ,OAiBIgZ,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IACvCugB,EAAmBvH,EAAa7H,SACtCkP,GAxuBA,EAwuBoBE,GAxuBpB,GAwuB+CjY,EAAU,EA1uBpD,EACH,IA6uBe,MADjBuS,EAtBJ,0CAwBeyF,EAAKD,GAxBpB,iCA0BeD,EAAUE,EAAKD,EAAWxF,IA1BzC,4CAfJ,yBAemBuF,EAfnB,8CAEU9X,EAAUhgB,KAAKggB,QACflU,EAAO,IAAIkb,EAAa,CAAClb,KAAM9L,KAAK8L,KAAMV,KAAM,QAChD8rB,EAAQ,CAAC/P,MAAOA,EAAO/b,KA1sBzB,GAssBR,SAKuBU,EAAKqY,KAAK+S,EAAM/P,MAAO+P,EAAM9rB,MALpD,UAKUsM,EALV,OAMUgZ,EAAe,IAAI3I,EAAa,IAAIgG,SAASrW,IAElC,KADX6a,EAAW7B,EAAa7H,UAPlC,0CASe1B,EA/sBP,GAssBR,iCAWe2Q,EAAU3Q,EAjtBjB,EAitB8BoL,IAXtC,iD,2FA8CA,SAAuBpI,EAASD,GAI5B,IAAIgO,EACJ,GAAa,QAHbhO,EAAOA,GAAQ,MAIXgO,EAAkBl4B,KAAKgyB,kBACpB,IAAa,SAAT9H,EAGP,MAAM,IAAI/pB,MAAM,iBAAmB+pB,GAFnCgO,EAAkBl4B,KAAKkyB,gBAK3B,IAAK,IAAIj0B,EAAI,EAAGA,EAAIi6B,EAAgBh6B,OAAQD,IACxC,GAAIi6B,EAAgBj6B,KAAOksB,EAAS,OAAOlsB,EAG/C,OAAQ,I,kCAGZ,SAAqByyB,GACjB,IAAM5R,EAAO4R,EAAaxH,YACpBwG,EAASgB,EAAa7H,SACtBqB,EAAOwG,EAAaxH,YACpBiB,EAAUuG,EAAa7H,SACvByE,EAAeoD,EAAazH,UAC5BsG,EAAcvvB,KAAKggB,QAAU,EAAI0Q,EAAa7H,SAAW6H,EAAazH,UACtEllB,EAAM+a,EAAO,IAAM4Q,EAAS,IAAMxF,EAAO,IAAMC,EAGhDnqB,KAAKkwB,mBAAmBjL,SAASnG,IAClC9e,KAAKkwB,mBAAmBvxB,KAAKmgB,GAEjC9e,KAAKu2B,gBAAgBxyB,GAAO,CAACupB,aAAcA,EAAcliB,KAAMmkB,K,4BAGnE,SAAe4I,GACX,OAAIn4B,KAAKoyB,cAAcvuB,eAAes0B,GAC3Bn4B,KAAKoyB,cAAc+F,GAEnBA,M,KAwBnB,SAAS9B,EAA0BvX,EAAM4Q,EAAQxF,EAAMyF,GACnD,OAAO7Q,EAAO,IAAM4Q,EAAS,IAAMxF,EAAO,IAAMyF,E,IAO9CuG,EACF,WAAY3K,EAAa6M,EAAUjE,EAASzxB,GAAK,oBAC7C1C,KAAKurB,YAAcA,EACnBvrB,KAAKo4B,SAAWA,EAChBp4B,KAAKm0B,QAAUA,EACfn0B,KAAK0C,IAAMA,GAKb2tB,E,WAEF,aAAc,oBACVrwB,KAAK2vB,gBAAazoB,EAClBlH,KAAKkE,IAAM,IAAIuqB,EAAI,G,uCAGvB,SAAIkB,EAAY5rB,EAAKpC,GACb3B,KAAK2vB,aAAeA,GACpB3vB,KAAKkE,IAAI6qB,QAEb/uB,KAAK2vB,WAAaA,EAClB3vB,KAAKkE,IAAIS,IAAIZ,EAAKpC,K,iBAGtB,SAAIguB,EAAY5rB,GACZ,OAAO/D,KAAK2vB,aAAeA,EAAa3vB,KAAKkE,IAAIQ,IAAIX,QAAOmD,I,iBAGhE,SAAIyoB,EAAY5rB,GACZ,OAAO/D,KAAK2vB,aAAeA,GAAc3vB,KAAKkE,IAAI2qB,IAAI9qB,O,KAIxDs0B,E,WAEF,WAAYrT,GAAQ,oBAChBhlB,KAAKglB,OAASA,EACdhlB,KAAKs4B,QAAU,IAAIxI,EAAQ9K,G,sFAG/B,sBAAAtB,EAAA,sEACiB1jB,KAAKs4B,QAAQC,cAD9B,wF,4HAKA,WAAwBvF,EAAe5I,EAASC,EAAS4I,EAAOzI,GAAhE,SAAA9G,EAAA,+EACW1jB,KAAKs4B,QAAQE,kBAAkBxF,EAAe5I,EAASC,EAAS4I,EAAOzI,IADlF,gD,2IAIA,sBAAA9G,EAAA,+EACW1jB,KAAKs4B,QAAQG,2BADxB,gD,iHAIA,sBAAA/U,EAAA,sEACU1jB,KAAKs4B,QAAQhC,qBADvB,gCAEWt2B,KAAKs4B,QAAQtT,OAAOyR,KAF/B,gD,0HAKA,sBAAA/S,EAAA,sEACU1jB,KAAKs4B,QAAQI,kBADvB,gD,kFAIA,SAAeP,GACX,OAAIn4B,KAAKs4B,QAAQlG,cAAcvuB,eAAes0B,GACnCn4B,KAAKs4B,QAAQlG,cAAc+F,GAE3BA,M,KAKJE,Q,mEC9/Nf,IAUIM,EAVY,WAIf,GAAoB,qBAAT/vB,KAAwB,OAAOA,KAC1C,GAAsB,qBAAXgwB,OAA0B,OAAOA,OAC5C,GAAsB,qBAAXD,EAA0B,OAAOA,EAC5C,MAAM,IAAIx4B,MAAM,kCAGJ04B,GAEb7vB,EAAO3K,QAAUA,EAAUs6B,EAAOpV,MAG9BoV,EAAOpV,QACVllB,EAAQy6B,QAAUH,EAAOpV,MAAMwD,KAAK4R,IAGrCt6B,EAAQ06B,QAAUJ,EAAOI,QACzB16B,EAAQ26B,QAAUL,EAAOK,QACzB36B,EAAQ46B,SAAWN,EAAOM,U,kRCmBpBC,E,WAGJ,WAAYC,GAA+B,yBAFnCA,gBAEmC,EACzCn5B,KAAKm5B,WAAaA,E,+EAGpB,WAAW3e,EAAkBtc,GAA7B,mBAAAwlB,EAAA,sEACyC1jB,KAAKm5B,WAAWhV,KACrDG,EAAO8U,YAAYl7B,GACnB,EACAA,EACAsc,GALJ,uBACkBkK,EADlB,EACUjZ,OAAW4tB,EADrB,EACqBA,UADrB,kBAQS3U,EAAEjZ,OAAOwK,MAAMyO,EAAEE,WAAYF,EAAEE,WAAayU,IARrD,gD,gEAWK,SAASC,EAAsBC,GACpC,OAAO,IAAIL,EAAyBM,uBAAaD,I,IAG9BE,E,kDAYnB,WACEzU,EACA0U,EACAC,GACA,2BACA,cAAM3U,EAAQ0U,EAAeC,IAhBvBC,SAeN,EAEA,IAAMC,EAAcC,yBAAe9U,EAAQ,eAF3C,OAGA,EAAK4U,IAAM,IAAIG,IAAS,CACtBjuB,KAAMwtB,EAAsBO,KAJ9B,E,gFAQF,WAAoBn5B,GAApB,qFACwCA,GAAQ,IAAtCs5B,uBADV,MAC2B,aAD3B,GAEiB,2BAFjB,SAGuBh6B,KAAK45B,IAAIrB,cAHhC,cAGQpa,EAHR,OAIE6b,EAAe,IAJjB,kBAKS7b,GALT,gD,qHAQA,WAAuBzd,GAAvB,yFACoBV,KAAKi6B,MAAMv5B,GAD/B,cACQsB,EADR,OAEmCA,EAAzB8rB,YAAgBoM,EAF1B,YAEmCl4B,EAFnC,qBAGSk4B,GAHT,gD,uHAMA,WAAkBx5B,GAAlB,eAAAgjB,EAAA,sEACyB1jB,KAAKi6B,MAAMv5B,GADpC,cACQy5B,EADR,yBAESA,EAASrM,YAAY5pB,KAAI,SAAAomB,GAAG,OAAIA,EAAItnB,SAF7C,gD,yHAKA,WAAoBo3B,EAAiB15B,GAArC,uBAAAgjB,EAAA,sEACyB1jB,KAAKi6B,MAAMv5B,GADpC,OAKE,IAJMy5B,EADR,OAEUE,EAAgBF,EAAhBE,YACJC,EAAmBD,EAAYA,EAAYn8B,OAAS,GAE/CD,EAAIo8B,EAAYn8B,OAAS,EAAGD,GAAK,EAAGA,GAAK,GAC1C0e,EAAI0d,EAAYp8B,KACb,EAAIm8B,IACXE,EAAmB3d,GARzB,yBAWS2d,GAXT,gD,kFAcA,SAAYC,GAAuC,WAAvB75B,EAAuB,uDAAJ,GAC7C,OAAO85B,2BAAgB,uCAAgB,WAAMC,GAAN,+BAAA/W,EAAA,6DACpB4G,EAAoBiQ,EAA7BG,QAAcvT,EAAeoT,EAAfpT,MAAOC,EAAQmT,EAARnT,IACrBuI,EAAuDjvB,EAAvDivB,WAF6B,EAE0BjvB,EAA3C05B,eAFiB,MAEP,EAFO,IAE0B15B,EAA9Bs5B,sBAFI,MAEa,aAFb,WAGnB,EAAKW,cAAcP,GAAWzK,GAAc,KAAOjvB,GAHhC,cAG/Bk6B,EAH+B,OAIrCZ,EAAe,yBAJsB,SAMf,EAAKJ,IAAIpB,kBAC7B,KACA,CAAErR,QAAOmD,MAAKlD,OACd,CAAED,QAAOmD,MAAKlD,OACd,KACAwT,GAXmC,cAa7Bp4B,SAAQ,SAAAq4B,GACdJ,EAAS9b,KAAKkc,MAEhBb,EAAe,IACfS,EAASK,WAjB4B,4CAAhB,sDAkBpBp6B,EAAKq6B,U,2BAGV,gB,GA/EsCC,2B","file":"25.d6f72bf7381751b3c8a4.worker.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// from https://github.com/imaya/zlib.js\n\nvar Zlib = {\n  Huffman: {},\n  Util: {},\n  CRC32: {}\n};\n\n\n/**\n * Compression Method\n * @enum {number}\n */\nZlib.CompressionMethod = {\n  DEFLATE: 8,\n  RESERVED: 15\n};\n\n\n\n\n/**\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Zip = function(opt_params) {\n  opt_params = opt_params || {};\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  this.files = [];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment = opt_params['comment'];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password;\n};\n\n\n/**\n * @enum {number}\n */\nZlib.Zip.CompressionMethod = {\n  STORE: 0,\n  DEFLATE: 8\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.OperatingSystem = {\n  MSDOS: 0,\n  UNIX: 3,\n  MACINTOSH: 7\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.Flags = {\n  ENCRYPT:    0x0001,\n  DESCRIPTOR: 0x0008,\n  UTF8:       0x0800\n};\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.FileHeaderSignature = [0x50, 0x4b, 0x01, 0x02];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.LocalFileHeaderSignature = [0x50, 0x4b, 0x03, 0x04];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.CentralDirectorySignature = [0x50, 0x4b, 0x05, 0x06];\n\n/**\n * @param {Array.<number>|Uint8Array} input\n * @param {Object=} opt_params options.\n */\nZlib.Zip.prototype.addFile = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {string} */\n  var filename =  opt_params['filename'];\n  /** @type {boolean} */\n  var compressed;\n  /** @type {number} */\n  var size = input.length;\n  /** @type {number} */\n  var crc32 = 0;\n\n  if ( input instanceof Array) {\n    input = new Uint8Array(input);\n  }\n\n  // default\n  if (typeof opt_params['compressionMethod'] !== 'number') {\n    opt_params['compressionMethod'] = Zlib.Zip.CompressionMethod.DEFLATE;\n  }\n\n  // その場で圧縮する場合\n  if (opt_params['compress']) {\n    switch (opt_params['compressionMethod']) {\n      case Zlib.Zip.CompressionMethod.STORE:\n        break;\n      case Zlib.Zip.CompressionMethod.DEFLATE:\n        crc32 = Zlib.CRC32.calc(input);\n        input = this.deflateWithOption(input, opt_params);\n        compressed = true;\n        break;\n      default:\n        throw new Error('unknown compression method:' + opt_params['compressionMethod']);\n    }\n  }\n\n  this.files.push({\n    buffer: input,\n    option: opt_params,\n    compressed: compressed,\n    encrypted: false,\n    size: size,\n    crc32: crc32\n  });\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Zip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\nZlib.Zip.prototype.compress = function() {\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  var files = this.files;\n  /** @type {{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }} */\n  var file;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var op1;\n  /** @type {number} */\n  var op2;\n  /** @type {number} */\n  var op3;\n  /** @type {number} */\n  var localFileSize = 0;\n  /** @type {number} */\n  var centralDirectorySize = 0;\n  /** @type {number} */\n  var endOfCentralDirectorySize;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var needVersion;\n  /** @type {number} */\n  var flags;\n  /** @type {Zlib.Zip.CompressionMethod} */\n  var compressionMethod;\n  /** @type {Date} */\n  var date;\n  /** @type {number} */\n  var crc32;\n  /** @type {number} */\n  var size;\n  /** @type {number} */\n  var plainSize;\n  /** @type {number} */\n  var filenameLength;\n  /** @type {number} */\n  var extraFieldLength;\n  /** @type {number} */\n  var commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var filename;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var extraField;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var comment;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {*} */\n  var tmp;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var jl;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n      (file.option['filename']) ? file.option['filename'].length : 0;\n    extraFieldLength =\n      (file.option['extraField']) ? file.option['extraField'].length : 0;\n    commentLength =\n      (file.option['comment']) ? file.option['comment'].length : 0;\n\n    // 圧縮されていなかったら圧縮\n    if (!file.compressed) {\n      // 圧縮前に CRC32 の計算をしておく\n      file.crc32 = Zlib.CRC32.calc(file.buffer);\n\n      switch (file.option['compressionMethod']) {\n        case Zlib.Zip.CompressionMethod.STORE:\n          break;\n        case Zlib.Zip.CompressionMethod.DEFLATE:\n          file.buffer = this.deflateWithOption(file.buffer, file.option);\n          file.compressed = true;\n          break;\n        default:\n          throw new Error('unknown compression method:' + file.option['compressionMethod']);\n      }\n    }\n\n    // encryption\n    if (file.option['password'] !== void 0|| this.password !== void 0) {\n      // init encryption\n      key = this.createEncryptionKey(file.option['password'] || this.password);\n\n      // add header\n      buffer = file.buffer;\n      {\n        tmp = new Uint8Array(buffer.length + 12);\n        tmp.set(buffer, 12);\n        buffer = tmp;\n      }\n\n      for (j = 0; j < 12; ++j) {\n        buffer[j] = this.encode(\n          key,\n          i === 11 ? (file.crc32 & 0xff) : (Math.random() * 256 | 0)\n        );\n      }\n\n      // data encryption\n      for (jl = buffer.length; j < jl; ++j) {\n        buffer[j] = this.encode(key, buffer[j]);\n      }\n      file.buffer = buffer;\n    }\n\n    // 必要バッファサイズの計算\n    localFileSize +=\n      // local file header\n      30 + filenameLength +\n      // file data\n      file.buffer.length;\n\n    centralDirectorySize +=\n      // file header\n      46 + filenameLength + commentLength;\n  }\n\n  // end of central directory\n  endOfCentralDirectorySize = 22 + (this.comment ? this.comment.length : 0);\n  output = new ( Uint8Array )(\n    localFileSize + centralDirectorySize + endOfCentralDirectorySize\n  );\n  op1 = 0;\n  op2 = localFileSize;\n  op3 = op2 + centralDirectorySize;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n      file.option['filename'] ? file.option['filename'].length :  0;\n    extraFieldLength = 0; // TODO\n    commentLength =\n      file.option['comment'] ? file.option['comment'].length : 0;\n\n    //-------------------------------------------------------------------------\n    // local file header & file header\n    //-------------------------------------------------------------------------\n\n    offset = op1;\n\n    // signature\n    // local file header\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[0];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[1];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[2];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[3];\n    // file header\n    output[op2++] = Zlib.Zip.FileHeaderSignature[0];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[1];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[2];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[3];\n\n    // compressor info\n    needVersion = 20;\n    output[op2++] = needVersion & 0xff;\n    output[op2++] =\n      /** @type {Zlib.Zip.OperatingSystem} */\n      (file.option['os']) ||\n      Zlib.Zip.OperatingSystem.MSDOS;\n\n    // need version\n    output[op1++] = output[op2++] =  needVersion       & 0xff;\n    output[op1++] = output[op2++] = (needVersion >> 8) & 0xff;\n\n    // general purpose bit flag\n    flags = 0;\n    if (file.option['password'] || this.password) {\n      flags |= Zlib.Zip.Flags.ENCRYPT;\n    }\n    output[op1++] = output[op2++] =  flags       & 0xff;\n    output[op1++] = output[op2++] = (flags >> 8) & 0xff;\n\n    // compression method\n    compressionMethod =\n      /** @type {Zlib.Zip.CompressionMethod} */\n      (file.option['compressionMethod']);\n    output[op1++] = output[op2++] =  compressionMethod       & 0xff;\n    output[op1++] = output[op2++] = (compressionMethod >> 8) & 0xff;\n\n    // date\n    date = /** @type {(Date|undefined)} */(file.option['date']) || new Date();\n    output[op1++] = output[op2++] =\n      ((date.getMinutes() & 0x7) << 5) |\n      (date.getSeconds() / 2 | 0);\n    output[op1++] = output[op2++] =\n      (date.getHours()   << 3) |\n      (date.getMinutes() >> 3);\n    //\n    output[op1++] = output[op2++] =\n      ((date.getMonth() + 1 & 0x7) << 5) |\n      (date.getDate());\n    output[op1++] = output[op2++] =\n      ((date.getFullYear() - 1980 & 0x7f) << 1) |\n      (date.getMonth() + 1 >> 3);\n\n    // CRC-32\n    crc32 = file.crc32;\n    output[op1++] = output[op2++] =  crc32        & 0xff;\n    output[op1++] = output[op2++] = (crc32 >>  8) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 16) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 24) & 0xff;\n\n    // compressed size\n    size = file.buffer.length;\n    output[op1++] = output[op2++] =  size        & 0xff;\n    output[op1++] = output[op2++] = (size >>  8) & 0xff;\n    output[op1++] = output[op2++] = (size >> 16) & 0xff;\n    output[op1++] = output[op2++] = (size >> 24) & 0xff;\n\n    // uncompressed size\n    plainSize = file.size;\n    output[op1++] = output[op2++] =  plainSize        & 0xff;\n    output[op1++] = output[op2++] = (plainSize >>  8) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 16) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 24) & 0xff;\n\n    // filename length\n    output[op1++] = output[op2++] =  filenameLength       & 0xff;\n    output[op1++] = output[op2++] = (filenameLength >> 8) & 0xff;\n\n    // extra field length\n    output[op1++] = output[op2++] =  extraFieldLength       & 0xff;\n    output[op1++] = output[op2++] = (extraFieldLength >> 8) & 0xff;\n\n    // file comment length\n    output[op2++] =  commentLength       & 0xff;\n    output[op2++] = (commentLength >> 8) & 0xff;\n\n    // disk number start\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // internal file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // external file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // relative offset of local header\n    output[op2++] =  offset        & 0xff;\n    output[op2++] = (offset >>  8) & 0xff;\n    output[op2++] = (offset >> 16) & 0xff;\n    output[op2++] = (offset >> 24) & 0xff;\n\n    // filename\n    filename = file.option['filename'];\n    if (filename) {\n      {\n        output.set(filename, op1);\n        output.set(filename, op2);\n        op1 += filenameLength;\n        op2 += filenameLength;\n      }\n    }\n\n    // extra field\n    extraField = file.option['extraField'];\n    if (extraField) {\n      {\n        output.set(extraField, op1);\n        output.set(extraField, op2);\n        op1 += extraFieldLength;\n        op2 += extraFieldLength;\n      }\n    }\n\n    // comment\n    comment = file.option['comment'];\n    if (comment) {\n      {\n        output.set(comment, op2);\n        op2 += commentLength;\n      }\n    }\n\n    //-------------------------------------------------------------------------\n    // file data\n    //-------------------------------------------------------------------------\n\n    {\n      output.set(file.buffer, op1);\n      op1 += file.buffer.length;\n    }\n  }\n\n  //-------------------------------------------------------------------------\n  // end of central directory\n  //-------------------------------------------------------------------------\n\n  // signature\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[0];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[1];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[2];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[3];\n\n  // number of this disk\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // number of the disk with the start of the central directory\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // total number of entries in the central directory on this disk\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // total number of entries in the central directory\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // size of the central directory\n  output[op3++] =  centralDirectorySize        & 0xff;\n  output[op3++] = (centralDirectorySize >>  8) & 0xff;\n  output[op3++] = (centralDirectorySize >> 16) & 0xff;\n  output[op3++] = (centralDirectorySize >> 24) & 0xff;\n\n  // offset of start of central directory with respect to the starting disk number\n  output[op3++] =  localFileSize        & 0xff;\n  output[op3++] = (localFileSize >>  8) & 0xff;\n  output[op3++] = (localFileSize >> 16) & 0xff;\n  output[op3++] = (localFileSize >> 24) & 0xff;\n\n  // .ZIP file comment length\n  commentLength = this.comment ? this.comment.length : 0;\n  output[op3++] =  commentLength       & 0xff;\n  output[op3++] = (commentLength >> 8) & 0xff;\n\n  // .ZIP file comment\n  if (this.comment) {\n    {\n      output.set(this.comment, op3);\n      op3 += commentLength;\n    }\n  }\n\n  return output;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input\n * @param {Object=} opt_params options.\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Zip.prototype.deflateWithOption = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate} */\n  var deflator = new Zlib.RawDeflate(input, opt_params['deflateOption']);\n\n  return deflator.compress();\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @return {number}\n */\nZlib.Zip.prototype.getByte = function(key) {\n  /** @type {number} */\n  var tmp = ((key[2] & 0xffff) | 2);\n\n  return ((tmp * (tmp ^ 1)) >> 8) & 0xff;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Zip.prototype.encode = function(key, n) {\n  /** @type {number} */\n  var tmp = this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return tmp ^ n;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @param {number} n\n */\nZlib.Zip.prototype.updateKeys = function(key, n) {\n  key[0] = Zlib.CRC32.single(key[0], n);\n  key[1] =\n    (((((key[1] + (key[0] & 0xff)) * 20173 >>> 0) * 6681) >>> 0) + 1) >>> 0;\n  key[2] = Zlib.CRC32.single(key[2], key[1] >>> 24);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n * @return {!(Array.<number>|Uint32Array|Object)}\n */\nZlib.Zip.prototype.createEncryptionKey = function(password) {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var key = [305419896, 591751049, 878082192];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  {\n    key = new Uint32Array(key);\n  }\n\n  for (i = 0, il = password.length; i < il; ++i) {\n    this.updateKeys(key, password[i] & 0xff);\n  }\n\n  return key;\n};\n\n\n\n/**\n * build huffman table from length list.\n * @param {!(Array.<number>|Uint8Array)} lengths length list.\n * @return {!Array} huffman table.\n */\nZlib.Huffman.buildHuffmanTable = function(lengths) {\n  /** @type {number} length list size. */\n  var listSize = lengths.length;\n  /** @type {number} max code length for table size. */\n  var maxCodeLength = 0;\n  /** @type {number} min code length for table size. */\n  var minCodeLength = Number.POSITIVE_INFINITY;\n  /** @type {number} table size. */\n  var size;\n  /** @type {!(Array|Uint8Array)} huffman code table. */\n  var table;\n  /** @type {number} bit length. */\n  var bitLength;\n  /** @type {number} huffman code. */\n  var code;\n  /**\n   * サイズが 2^maxlength 個のテーブルを埋めるためのスキップ長.\n   * @type {number} skip length for table filling.\n   */\n  var skip;\n  /** @type {number} reversed code. */\n  var reversed;\n  /** @type {number} reverse temp. */\n  var rtemp;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} table value. */\n  var value;\n\n  // Math.max は遅いので最長の値は for-loop で取得する\n  for (i = 0, il = listSize; i < il; ++i) {\n    if (lengths[i] > maxCodeLength) {\n      maxCodeLength = lengths[i];\n    }\n    if (lengths[i] < minCodeLength) {\n      minCodeLength = lengths[i];\n    }\n  }\n\n  size = 1 << maxCodeLength;\n  table = new ( Uint32Array )(size);\n\n  // ビット長の短い順からハフマン符号を割り当てる\n  for (bitLength = 1, code = 0, skip = 2; bitLength <= maxCodeLength;) {\n    for (i = 0; i < listSize; ++i) {\n      if (lengths[i] === bitLength) {\n        // ビットオーダーが逆になるためビット長分並びを反転する\n        for (reversed = 0, rtemp = code, j = 0; j < bitLength; ++j) {\n          reversed = (reversed << 1) | (rtemp & 1);\n          rtemp >>= 1;\n        }\n\n        // 最大ビット長をもとにテーブルを作るため、\n        // 最大ビット長以外では 0 / 1 どちらでも良い箇所ができる\n        // そのどちらでも良い場所は同じ値で埋めることで\n        // 本来のビット長以上のビット数取得しても問題が起こらないようにする\n        value = (bitLength << 16) | i;\n        for (j = reversed; j < size; j += skip) {\n          table[j] = value;\n        }\n\n        ++code;\n      }\n    }\n\n    // 次のビット長へ\n    ++bitLength;\n    code <<= 1;\n    skip <<= 1;\n  }\n\n  return [table, maxCodeLength, minCodeLength];\n};\n\n\n\n\n//-----------------------------------------------------------------------------\n\n/** @define {number} buffer block size. */\nvar ZLIB_RAW_INFLATE_BUFFER_SIZE = 0x8000; // [ 0x8000 >= ZLIB_BUFFER_BLOCK_SIZE ]\n\n//-----------------------------------------------------------------------------\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {Object} opt_params option parameter.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - bufferType: Zlib.RawInflate.BufferType の値によってバッファの管理方法を指定する.\n *   - resize: 確保したバッファが実際の大きさより大きかった場合に切り詰める.\n */\nZlib.RawInflate = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} inflated buffer */\n  this.buffer;\n  /** @type {!Array.<(Array.<number>|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize = ZLIB_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input =  new Uint8Array(input) ;\n  /** @type {!(Uint8Array|Array.<number>)} output buffer. */\n  this.output;\n  /** @type {!number} output buffer pointer. */\n  this.op;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {Zlib.RawInflate.BufferType} buffer management. */\n  this.bufferType = Zlib.RawInflate.BufferType.ADAPTIVE;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['bufferSize']) {\n      this.bufferSize = opt_params['bufferSize'];\n    }\n    if (opt_params['bufferType']) {\n      this.bufferType = opt_params['bufferType'];\n    }\n    if (opt_params['resize']) {\n      this.resize = opt_params['resize'];\n    }\n  }\n\n  // initialize\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.op = Zlib.RawInflate.MaxBackwardLength;\n      this.output =\n        new ( Uint8Array )(\n          Zlib.RawInflate.MaxBackwardLength +\n          this.bufferSize +\n          Zlib.RawInflate.MaxCopyLength\n        );\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.op = 0;\n      this.output = new ( Uint8Array )(this.bufferSize);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflate.BufferType = {\n  BLOCK: 0,\n  ADAPTIVE: 1\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array.<number>)} inflated buffer.\n */\nZlib.RawInflate.prototype.decompress = function() {\n  while (!this.bfinal) {\n    this.parseBlock();\n  }\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      return this.concatBufferBlock();\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      return this.concatBufferDynamic();\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflate.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflate.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.Order = (function(table) {\n  return  new Uint16Array(table) ;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.LengthCodeTable = (function(table) {\n  return  new Uint16Array(table) ;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.LengthExtraTable = (function(table) {\n  return  new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.DistCodeTable = (function(table) {\n  return  new Uint16Array(table) ;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.DistExtraTable = (function(table) {\n  return  new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new ( Uint8Array )(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n      (i <= 143) ? 8 :\n      (i <= 255) ? 9 :\n      (i <= 279) ? 7 :\n      8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new ( Uint8Array )(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflate.prototype.parseBlock = function() {\n  /** @type {number} header */\n  var hdr = this.readBits(3);\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    // uncompressed\n    case 0:\n      this.parseUncompressedBlock();\n      break;\n    // fixed huffman\n    case 1:\n      this.parseFixedHuffmanBlock();\n      break;\n    // dynamic huffman\n    case 2:\n      this.parseDynamicHuffmanBlock();\n      break;\n    // reserved or other\n    default:\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflate.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // input byte\n  if (ip + ((length - bitsbuflen + 7) >> 3) >= inputLength) {\n    throw new Error('input buffer is broken');\n  }\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {!(Array.<number>|Uint8Array|Uint16Array)} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflate.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {!(Array.<number>|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (ip >= inputLength) {\n      break;\n    }\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflate.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n  /** @type {number} output buffer length */\n  var olength = output.length;\n  /** @type {number} copy counter */\n  var preCopy;\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  // len\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: LEN');\n  }\n  len = input[ip++] | (input[ip++] << 8);\n\n  // nlen\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: NLEN');\n  }\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // check size\n  if (ip + len > input.length) { throw new Error('input buffer is broken'); }\n\n  // expand buffer\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      // pre copy\n      while (op + len > output.length) {\n        preCopy = olength - op;\n        len -= preCopy;\n        {\n          output.set(input.subarray(ip, ip + preCopy), op);\n          op += preCopy;\n          ip += preCopy;\n        }\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      while (op + len > output.length) {\n        output = this.expandBufferAdaptive({fixRatio: 2});\n      }\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n\n  // copy\n  {\n    output.set(input.subarray(ip, ip + len), op);\n    op += len;\n    ip += len;\n  }\n\n  this.ip = ip;\n  this.op = op;\n  this.output = output;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflate.prototype.parseFixedHuffmanBlock = function() {\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(\n        Zlib.RawInflate.FixedLiteralLengthTable,\n        Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(\n        Zlib.RawInflate.FixedLiteralLengthTable,\n        Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflate.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit = this.readBits(5) + 257;\n  /** @type {number} number of distance codes. */\n  var hdist = this.readBits(5) + 1;\n  /** @type {number} number of code lengths. */\n  var hclen = this.readBits(4) + 4;\n  /** @type {!(Uint8Array|Array.<number>)} code lengths. */\n  var codeLengths =\n    new ( Uint8Array )(Zlib.RawInflate.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint8Array|Array.<number>)} literal and length code table. */\n  var litlenTable;\n  /** @type {!(Uint8Array|Array.<number>)} distance code table. */\n  var distTable;\n  /** @type {!(Uint8Array|Array.<number>)} code length table. */\n  var lengthTable;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var prev;\n  /** @type {number} */\n  var repeat;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n\n  // decode code lengths\n  for (i = 0; i < hclen; ++i) {\n    codeLengths[Zlib.RawInflate.Order[i]] = this.readBits(3);\n  }\n\n  // decode length table\n  codeLengthsTable = buildHuffmanTable(codeLengths);\n  lengthTable = new ( Uint8Array )(hlit + hdist);\n  for (i = 0, il = hlit + hdist; i < il;) {\n    code = this.readCodeByTable(codeLengthsTable);\n    switch (code) {\n      case 16:\n        repeat = 3 + this.readBits(2);\n        while (repeat--) { lengthTable[i++] = prev; }\n        break;\n      case 17:\n        repeat = 3 + this.readBits(3);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      case 18:\n        repeat = 11 + this.readBits(7);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      default:\n        lengthTable[i++] = code;\n        prev = code;\n        break;\n    }\n  }\n\n  litlenTable =  buildHuffmanTable(lengthTable.subarray(0, hlit))\n    ;\n  distTable =  buildHuffmanTable(lengthTable.subarray(hlit))\n    ;\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(litlenTable, distTable);\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(litlenTable, distTable);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * decode huffman code\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanBlock = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length - Zlib.RawInflate.MaxCopyLength;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op >= olength) {\n      this.op = op;\n      output = this.expandBufferBlock();\n      op = this.op;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * decode huffman code (adaptive)\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanAdaptive = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        output = this.expandBufferAdaptive();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op + codeLength > olength) {\n      output = this.expandBufferAdaptive();\n      olength = output.length;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * expand output buffer.\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.expandBufferBlock = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer =\n    new ( Uint8Array )(\n        this.op - Zlib.RawInflate.MaxBackwardLength\n    );\n  /** @type {number} backward base point */\n  var backward = this.op - Zlib.RawInflate.MaxBackwardLength;\n\n  var output = this.output;\n\n  // copy to output buffer\n  {\n    buffer.set(output.subarray(Zlib.RawInflate.MaxBackwardLength, buffer.length));\n  }\n\n  this.blocks.push(buffer);\n  this.totalpos += buffer.length;\n\n  // copy to backward buffer\n  {\n    output.set(\n      output.subarray(backward, backward + Zlib.RawInflate.MaxBackwardLength)\n    );\n  }\n\n  this.op = Zlib.RawInflate.MaxBackwardLength;\n\n  return output;\n};\n\n/**\n * expand output buffer. (adaptive)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflate.prototype.expandBufferAdaptive = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n      (input.length - this.ip) / this.currentLitlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n      output.length + maxInflateSize :\n      output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferBlock = function() {\n  /** @type {number} buffer pointer. */\n  var pos = 0;\n  /** @type {number} buffer pointer. */\n  var limit = this.totalpos + (this.op - Zlib.RawInflate.MaxBackwardLength);\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var output = this.output;\n  /** @type {!Array} blocks array. */\n  var blocks = this.blocks;\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var block;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  var buffer = new ( Uint8Array )(limit);\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} loop limiter. */\n  var jl;\n\n  // single buffer\n  if (blocks.length === 0) {\n    return       this.output.subarray(Zlib.RawInflate.MaxBackwardLength, this.op) ;\n  }\n\n  // copy to buffer\n  for (i = 0, il = blocks.length; i < il; ++i) {\n    block = blocks[i];\n    for (j = 0, jl = block.length; j < jl; ++j) {\n      buffer[pos++] = block[j];\n    }\n  }\n\n  // current buffer\n  for (i = Zlib.RawInflate.MaxBackwardLength, il = this.op; i < il; ++i) {\n    buffer[pos++] = output[i];\n  }\n\n  this.blocks = [];\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferDynamic = function() {\n  /** @type {Array.<number>|Uint8Array} output buffer. */\n  var buffer;\n  var op = this.op;\n\n  {\n    if (this.resize) {\n      buffer = new Uint8Array(op);\n      buffer.set(this.output.subarray(0, op));\n    } else {\n      buffer = this.output.subarray(0, op);\n    }\n  }\n\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {number} ip input buffer pointer.\n * @param {number=} opt_buffersize buffer block size.\n * @constructor\n */\nZlib.RawInflateStream = function(input, ip, opt_buffersize) {\n  /** @type {!Array.<(Array|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize =\n    opt_buffersize ? opt_buffersize : ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = ip === void 0 ? 0 : ip;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  this.input =  new Uint8Array(input) ;\n  /** @type {!(Uint8Array|Array)} output buffer. */\n  this.output = new ( Uint8Array )(this.bufferSize);\n  /** @type {!number} output buffer pointer. */\n  this.op = 0;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {number} uncompressed block length. */\n  this.blockLength;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n  /** @type {Array} */\n  this.litlenTable;\n  /** @type {Array} */\n  this.distTable;\n  /** @type {number} */\n  this.sp = 0; // stream pointer\n  /** @type {Zlib.RawInflateStream.Status} */\n  this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n\n  //\n  // backup\n  //\n  /** @type {!number} */\n  this.ip_;\n  /** @type {!number} */\n  this.bitsbuflen_;\n  /** @type {!number} */\n  this.bitsbuf_;\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.BlockType = {\n  UNCOMPRESSED: 0,\n  FIXED: 1,\n  DYNAMIC: 2\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.Status = {\n  INITIALIZED: 0,\n  BLOCK_HEADER_START: 1,\n  BLOCK_HEADER_END: 2,\n  BLOCK_BODY_START: 3,\n  BLOCK_BODY_END: 4,\n  DECODE_BLOCK_START: 5,\n  DECODE_BLOCK_END: 6\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.RawInflateStream.prototype.decompress = function(newInput, ip) {\n  /** @type {boolean} */\n  var stop = false;\n\n  if (newInput !== void 0) {\n    this.input = newInput;\n  }\n\n  if (ip !== void 0) {\n    this.ip = ip;\n  }\n\n  // decompress\n  while (!stop) {\n    switch (this.status) {\n      // block header\n      case Zlib.RawInflateStream.Status.INITIALIZED:\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_START:\n        if (this.readBlockHeader() < 0) {\n          stop = true;\n        }\n        break;\n      // block body\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_END: /* FALLTHROUGH */\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.readUncompressedBlockHeader() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED:\n            if (this.parseFixedHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.parseDynamicHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      // decode data\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_END:\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.parseUncompressedBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED: /* FALLTHROUGH */\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.decodeHuffman() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_END:\n        if (this.bfinal) {\n          stop = true;\n        } else {\n          this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n        }\n        break;\n    }\n  }\n\n  return this.concatBuffer();\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflateStream.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflateStream.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.Order = (function(table) {\n  return  new Uint16Array(table) ;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.LengthCodeTable = (function(table) {\n  return  new Uint16Array(table) ;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.LengthExtraTable = (function(table) {\n  return  new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.DistCodeTable = (function(table) {\n  return  new Uint16Array(table) ;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.DistExtraTable = (function(table) {\n  return  new Uint8Array(table) ;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new ( Uint8Array )(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n      (i <= 143) ? 8 :\n      (i <= 255) ? 9 :\n      (i <= 279) ? 7 :\n      8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new ( Uint8Array )(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflateStream.prototype.readBlockHeader = function() {\n  /** @type {number} header */\n  var hdr;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_START;\n\n  this.save_();\n  if ((hdr = this.readBits(3)) < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    case 0: // uncompressed\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.UNCOMPRESSED;\n      break;\n    case 1: // fixed huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.FIXED;\n      break;\n    case 2: // dynamic huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.DYNAMIC;\n      break;\n    default: // reserved or other\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_END;\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflateStream.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    // input byte\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n\n    // concat octet\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {Array} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflateStream.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {!(Array|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} input byte */\n  var octet;\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * read uncompressed block header\n */\nZlib.RawInflateStream.prototype.readUncompressedBlockHeader = function() {\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  if (ip + 4 >= input.length) {\n    return -1;\n  }\n\n  len = input[ip++] | (input[ip++] << 8);\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  this.ip = ip;\n  this.blockLength = len;\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflateStream.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n  var len = this.blockLength;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  // copy\n  // XXX: とりあえず素直にコピー\n  while (len--) {\n    if (op === output.length) {\n      output = this.expandBuffer({fixRatio: 2});\n    }\n\n    // not enough input buffer\n    if (ip >= input.length) {\n      this.ip = ip;\n      this.op = op;\n      this.blockLength = len + 1; // コピーしてないので戻す\n      return -1;\n    }\n\n    output[op++] = input[ip++];\n  }\n\n  if (len < 0) {\n    this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n  }\n\n  this.ip = ip;\n  this.op = op;\n\n  return 0;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflateStream.prototype.parseFixedHuffmanBlock = function() {\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.litlenTable = Zlib.RawInflateStream.FixedLiteralLengthTable;\n  this.distTable = Zlib.RawInflateStream.FixedDistanceTable;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * オブジェクトのコンテキストを別のプロパティに退避する.\n * @private\n */\nZlib.RawInflateStream.prototype.save_ = function() {\n  this.ip_ = this.ip;\n  this.bitsbuflen_ = this.bitsbuflen;\n  this.bitsbuf_ = this.bitsbuf;\n};\n\n/**\n * 別のプロパティに退避したコンテキストを復元する.\n * @private\n */\nZlib.RawInflateStream.prototype.restore_ = function() {\n  this.ip = this.ip_;\n  this.bitsbuflen = this.bitsbuflen_;\n  this.bitsbuf = this.bitsbuf_;\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflateStream.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit;\n  /** @type {number} number of distance codes. */\n  var hdist;\n  /** @type {number} number of code lengths. */\n  var hclen;\n  /** @type {!(Uint8Array|Array)} code lengths. */\n  var codeLengths =\n    new ( Uint8Array )(Zlib.RawInflateStream.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.save_();\n  hlit = this.readBits(5) + 257;\n  hdist = this.readBits(5) + 1;\n  hclen = this.readBits(4) + 4;\n  if (hlit < 0 || hdist < 0 || hclen < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  try {\n    parseDynamicHuffmanBlockImpl.call(this);\n  } catch(e) {\n    this.restore_();\n    return -1;\n  }\n\n  function parseDynamicHuffmanBlockImpl() {\n    /** @type {number} */\n    var bits;\n    var code;\n    var prev = 0;\n    var repeat;\n    /** @type {!(Uint8Array|Array.<number>)} code length table. */\n    var lengthTable;\n    /** @type {number} loop counter. */\n    var i;\n    /** @type {number} loop limit. */\n    var il;\n\n    // decode code lengths\n    for (i = 0; i < hclen; ++i) {\n      if ((bits = this.readBits(3)) < 0) {\n        throw new Error('not enough input');\n      }\n      codeLengths[Zlib.RawInflateStream.Order[i]] = bits;\n    }\n\n    // decode length table\n    codeLengthsTable = buildHuffmanTable(codeLengths);\n    lengthTable = new ( Uint8Array )(hlit + hdist);\n    for (i = 0, il = hlit + hdist; i < il;) {\n      code = this.readCodeByTable(codeLengthsTable);\n      if (code < 0) {\n        throw new Error('not enough input');\n      }\n      switch (code) {\n        case 16:\n          if ((bits = this.readBits(2)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = prev; }\n          break;\n        case 17:\n          if ((bits = this.readBits(3)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        case 18:\n          if ((bits = this.readBits(7)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 11 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        default:\n          lengthTable[i++] = code;\n          prev = code;\n          break;\n      }\n    }\n\n    this.litlenTable =  buildHuffmanTable(lengthTable.subarray(0, hlit))\n      ;\n    this.distTable =  buildHuffmanTable(lengthTable.subarray(hlit))\n      ;\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * decode huffman code (dynamic)\n * @return {(number|undefined)} -1 is error.\n */\nZlib.RawInflateStream.prototype.decodeHuffman = function() {\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var litlen = this.litlenTable;\n  var dist = this.distTable;\n\n  var olength = output.length;\n  var bits;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  while (true) {\n    this.save_();\n\n    code = this.readCodeByTable(litlen);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n\n    if (code === 256) {\n      break;\n    }\n\n    // literal\n    if (code < 256) {\n      if (op === olength) {\n        output = this.expandBuffer();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = Zlib.RawInflateStream.LengthCodeTable[ti];\n    if (Zlib.RawInflateStream.LengthExtraTable[ti] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.LengthExtraTable[ti]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeLength += bits;\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n    codeDist = Zlib.RawInflateStream.DistCodeTable[code];\n    if (Zlib.RawInflateStream.DistExtraTable[code] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.DistExtraTable[code]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeDist += bits;\n    }\n\n    // lz77 decode\n    if (op + codeLength >= olength) {\n      output = this.expandBuffer();\n      olength = output.length;\n    }\n\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n\n    // break\n    if (this.ip === this.input.length) {\n      this.op = op;\n      return -1;\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n\n  this.op = op;\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n};\n\n/**\n * expand output buffer. (dynamic)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflateStream.prototype.expandBuffer = function(opt_param) {\n  /** @type {!(Array|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n      (input.length - this.ip) / this.litlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n      output.length + maxInflateSize :\n      output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array|Uint8Array)} output buffer.\n */\nZlib.RawInflateStream.prototype.concatBuffer = function() {\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var buffer;\n  /** @type {number} */\n  var op = this.op;\n  /** @type {Uint8Array} */\n  var tmp;\n\n  if (this.resize) {\n    {\n      buffer = new Uint8Array(this.output.subarray(this.sp, op));\n    }\n  } else {\n    buffer =\n       this.output.subarray(this.sp, op) ;\n  }\n\n  this.sp = op;\n\n  // compaction\n  if (op > Zlib.RawInflateStream.MaxBackwardLength + this.bufferSize) {\n    this.op = this.sp = Zlib.RawInflateStream.MaxBackwardLength;\n    {\n      tmp = /** @type {Uint8Array} */(this.output);\n      this.output = new Uint8Array(this.bufferSize + Zlib.RawInflateStream.MaxBackwardLength);\n      this.output.set(tmp.subarray(op - Zlib.RawInflateStream.MaxBackwardLength, op));\n    }\n  }\n\n  return buffer;\n};\n\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @param {Object=} opt_params option parameters.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - verify: 伸張が終わった後 adler-32 checksum の検証を行うか.\n *   - bufferType: Zlib.Inflate.BufferType の値によってバッファの管理方法を指定する.\n *       Zlib.Inflate.BufferType は Zlib.RawInflate.BufferType のエイリアス.\n */\nZlib.Inflate = function(input, opt_params) {\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflate} */\n  this.rawinflate;\n  /** @type {(boolean|undefined)} verify flag. */\n  this.verify;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['verify']) {\n      this.verify = opt_params['verify'];\n    }\n  }\n\n  // Compression Method and Flags\n  cmf = input[this.ip++];\n  flg = input[this.ip++];\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  // RawInflate\n  this.rawinflate = new Zlib.RawInflate(input, {\n    'index': this.ip,\n    'bufferSize': opt_params['bufferSize'],\n    'bufferType': opt_params['bufferType'],\n    'resize': opt_params['resize']\n  });\n};\n\n/**\n * @enum {number}\n */\nZlib.Inflate.BufferType = Zlib.RawInflate.BufferType;\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.Inflate.prototype.decompress = function() {\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  var input = this.input;\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  buffer = this.rawinflate.decompress();\n  this.ip = this.rawinflate.ip;\n\n  // verify adler-32\n  if (this.verify) {\n    adler32 = (\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++]\n    ) >>> 0;\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n\n  return buffer;\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n\n/**\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @constructor\n */\nZlib.InflateStream = function(input) {\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input === void 0 ? new ( Uint8Array )() : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflateStream} */\n  this.rawinflate = new Zlib.RawInflateStream(this.input, this.ip);\n  /** @type {Zlib.CompressionMethod} */\n  this.method;\n  /** @type {!(Array|Uint8Array)} */\n  this.output = this.rawinflate.output;\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.InflateStream.prototype.decompress = function(input) {\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n\n  // 新しい入力を入力バッファに結合する\n  // XXX Array, Uint8Array のチェックを行うか確認する\n  if (input !== void 0) {\n    {\n      var tmp = new Uint8Array(this.input.length + input.length);\n      tmp.set(this.input, 0);\n      tmp.set(input, this.input.length);\n      this.input = tmp;\n    }\n  }\n\n  if (this.method === void 0) {\n    if(this.readHeader() < 0) {\n      return new ( Uint8Array )();\n    }\n  }\n\n  buffer = this.rawinflate.decompress(this.input, this.ip);\n  if (this.rawinflate.ip !== 0) {\n    this.input = \n      this.input.subarray(this.rawinflate.ip) ;\n    this.ip = 0;\n  }\n\n  // verify adler-32\n  /*\n  if (this.verify) {\n    adler32 =\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++];\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n  */\n\n  return buffer;\n};\n\nZlib.InflateStream.prototype.readHeader = function() {\n  var ip = this.ip;\n  var input = this.input;\n\n  // Compression Method and Flags\n  var cmf = input[ip++];\n  var flg = input[ip++];\n\n  if (cmf === void 0 || flg === void 0) {\n    return -1;\n  }\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  this.ip = ip;\n};\n\n\n/**\n * @fileoverview GZIP (RFC1952) 展開コンテナ実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gunzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {Array.<Zlib.GunzipMember>} */\n  this.member = [];\n  /** @type {boolean} */\n  this.decompressed = false;\n};\n\n/**\n * @return {Array.<Zlib.GunzipMember>}\n */\nZlib.Gunzip.prototype.getMembers = function() {\n  if (!this.decompressed) {\n    this.decompress();\n  }\n\n  return this.member.slice();\n};\n\n/**\n * inflate gzip data.\n * @return {!(Array.<number>|Uint8Array)} inflated buffer.\n */\nZlib.Gunzip.prototype.decompress = function() {\n  /** @type {number} input length. */\n  var il = this.input.length;\n\n  while (this.ip < il) {\n    this.decodeMember();\n  }\n\n  this.decompressed = true;\n\n  return this.concatMember();\n};\n\n/**\n * decode gzip member.\n */\nZlib.Gunzip.prototype.decodeMember = function() {\n  /** @type {Zlib.GunzipMember} */\n  var member = new Zlib.GunzipMember();\n  /** @type {number} */\n  var isize;\n  /** @type {Zlib.RawInflate} RawInflate implementation. */\n  var rawinflate;\n  /** @type {!(Array.<number>|Uint8Array)} inflated data. */\n  var inflated;\n  /** @type {number} inflate size */\n  var inflen;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} character index in string. */\n  var ci;\n  /** @type {Array.<string>} character array. */\n  var str;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} */\n  var crc32;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  member.id1 = input[ip++];\n  member.id2 = input[ip++];\n\n  // check signature\n  if (member.id1 !== 0x1f || member.id2 !== 0x8b) {\n    throw new Error('invalid file signature:' + member.id1 + ',' + member.id2);\n  }\n\n  // check compression method\n  member.cm = input[ip++];\n  switch (member.cm) {\n    case 8: /* XXX: use Zlib const */\n      break;\n    default:\n      throw new Error('unknown compression method: ' + member.cm);\n  }\n\n  // flags\n  member.flg = input[ip++];\n\n  // modification time\n  mtime = (input[ip++])       |\n          (input[ip++] << 8)  |\n          (input[ip++] << 16) |\n          (input[ip++] << 24);\n  member.mtime = new Date(mtime * 1000);\n\n  // extra flags\n  member.xfl = input[ip++];\n\n  // operating system\n  member.os = input[ip++];\n\n  // extra\n  if ((member.flg & Zlib.Gzip.FlagsMask.FEXTRA) > 0) {\n    member.xlen = input[ip++] | (input[ip++] << 8);\n    ip = this.decodeSubField(ip, member.xlen);\n  }\n\n  // fname\n  if ((member.flg & Zlib.Gzip.FlagsMask.FNAME) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.name = str.join('');\n  }\n\n  // fcomment\n  if ((member.flg & Zlib.Gzip.FlagsMask.FCOMMENT) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.comment = str.join('');\n  }\n\n  // fhcrc\n  if ((member.flg & Zlib.Gzip.FlagsMask.FHCRC) > 0) {\n    member.crc16 = Zlib.CRC32.calc(input, 0, ip) & 0xffff;\n    if (member.crc16 !== (input[ip++] | (input[ip++] << 8))) {\n      throw new Error('invalid header crc16');\n    }\n  }\n\n  // isize を事前に取得すると展開後のサイズが分かるため、\n  // inflate処理のバッファサイズが事前に分かり、高速になる\n  isize = (input[input.length - 4])       | (input[input.length - 3] << 8) |\n          (input[input.length - 2] << 16) | (input[input.length - 1] << 24);\n\n  // isize の妥当性チェック\n  // ハフマン符号では最小 2-bit のため、最大で 1/4 になる\n  // LZ77 符号では 長さと距離 2-Byte で最大 258-Byte を表現できるため、\n  // 1/128 になるとする\n  // ここから入力バッファの残りが isize の 512 倍以上だったら\n  // サイズ指定のバッファ確保は行わない事とする\n  if (input.length - ip - /* CRC-32 */4 - /* ISIZE */4 < isize * 512) {\n    inflen = isize;\n  }\n\n  // compressed block\n  rawinflate = new Zlib.RawInflate(input, {'index': ip, 'bufferSize': inflen});\n  member.data = inflated = rawinflate.decompress();\n  ip = rawinflate.ip;\n\n  // crc32\n  member.crc32 = crc32 =\n    ((input[ip++])       | (input[ip++] << 8) |\n     (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if (Zlib.CRC32.calc(inflated) !== crc32) {\n    throw new Error('invalid CRC-32 checksum: 0x' +\n        Zlib.CRC32.calc(inflated).toString(16) + ' / 0x' + crc32.toString(16));\n  }\n\n  // input size\n  member.isize = isize =\n    ((input[ip++])       | (input[ip++] << 8) |\n     (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if ((inflated.length & 0xffffffff) !== isize) {\n    throw new Error('invalid input size: ' +\n        (inflated.length & 0xffffffff) + ' / ' + isize);\n  }\n\n  this.member.push(member);\n  this.ip = ip;\n};\n\n/**\n * サブフィールドのデコード\n * XXX: 現在は何もせずスキップする\n */\nZlib.Gunzip.prototype.decodeSubField = function(ip, length) {\n  return ip + length;\n};\n\n/**\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Gunzip.prototype.concatMember = function() {\n  /** @type {Array.<Zlib.GunzipMember>} */\n  var member = this.member;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var p = 0;\n  /** @type {number} */\n  var size = 0;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n\n  for (i = 0, il = member.length; i < il; ++i) {\n    size += member[i].data.length;\n  }\n\n  {\n    buffer = new Uint8Array(size);\n    for (i = 0; i < il; ++i) {\n      buffer.set(member[i].data, p);\n      p += member[i].data.length;\n    }\n  }\n\n  return buffer;\n};\n\n\n\n/**\n * @constructor\n */\nZlib.GunzipMember = function() {\n  /** @type {number} signature first byte. */\n  this.id1;\n  /** @type {number} signature second byte. */\n  this.id2;\n  /** @type {number} compression method. */\n  this.cm;\n  /** @type {number} flags. */\n  this.flg;\n  /** @type {Date} modification time. */\n  this.mtime;\n  /** @type {number} extra flags. */\n  this.xfl;\n  /** @type {number} operating system number. */\n  this.os;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  this.crc16;\n  /** @type {number} extra length. */\n  this.xlen;\n  /** @type {number} CRC-32 value for verification. */\n  this.crc32;\n  /** @type {number} input size modulo 32 value. */\n  this.isize;\n  /** @type {string} filename. */\n  this.name;\n  /** @type {string} comment. */\n  this.comment;\n  /** @type {!(Uint8Array|Array.<number>)} */\n  this.data;\n};\n\nZlib.GunzipMember.prototype.getName = function() {\n  return this.name;\n};\n\nZlib.GunzipMember.prototype.getData = function() {\n  return this.data;\n};\n\nZlib.GunzipMember.prototype.getMtime = function() {\n  return this.mtime;\n};\n\n/**\n * @fileoverview GZIP (RFC1952) 実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  this.output;\n  /** @type {number} output buffer. */\n  this.op = 0;\n  /** @type {!Object} flags option flags. */\n  this.flags = {};\n  /** @type {!string} filename. */\n  this.filename;\n  /** @type {!string} comment. */\n  this.comment;\n  /** @type {!Object} deflate options. */\n  this.deflateOptions;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['flags']) {\n      this.flags = opt_params['flags'];\n    }\n    if (typeof opt_params['filename'] === 'string') {\n      this.filename = opt_params['filename'];\n    }\n    if (typeof opt_params['comment'] === 'string') {\n      this.comment = opt_params['comment'];\n    }\n    if (opt_params['deflateOptions']) {\n      this.deflateOptions = opt_params['deflateOptions'];\n    }\n  }\n\n  if (!this.deflateOptions) {\n    this.deflateOptions = {};\n  }\n};\n\n/**\n * @type {number}\n * @const\n */\nZlib.Gzip.DefaultBufferSize = 0x8000;\n\n/**\n * encode gzip members.\n * @return {!(Array|Uint8Array)} gzip binary array.\n */\nZlib.Gzip.prototype.compress = function() {\n  /** @type {number} flags. */\n  var flg;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  var crc16;\n  /** @type {number} CRC-32 value for verification. */\n  var crc32;\n  /** @type {!Zlib.RawDeflate} raw deflate object. */\n  var rawdeflate;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output =\n    new ( Uint8Array )(Zlib.Gzip.DefaultBufferSize);\n  /** @type {number} output buffer pointer. */\n  var op = 0;\n\n  var input = this.input;\n  var ip = this.ip;\n  var filename = this.filename;\n  var comment = this.comment;\n\n  // check signature\n  output[op++] = 0x1f;\n  output[op++] = 0x8b;\n\n  // check compression method\n  output[op++] = 8; /* XXX: use Zlib const */\n\n  // flags\n  flg = 0;\n  if (this.flags['fname'])    flg |= Zlib.Gzip.FlagsMask.FNAME;\n  if (this.flags['fcomment']) flg |= Zlib.Gzip.FlagsMask.FCOMMENT;\n  if (this.flags['fhcrc'])    flg |= Zlib.Gzip.FlagsMask.FHCRC;\n  // XXX: FTEXT\n  // XXX: FEXTRA\n  output[op++] = flg;\n\n  // modification time\n  mtime = (Date.now ? Date.now() : +new Date()) / 1000 | 0;\n  output[op++] = mtime        & 0xff;\n  output[op++] = mtime >>>  8 & 0xff;\n  output[op++] = mtime >>> 16 & 0xff;\n  output[op++] = mtime >>> 24 & 0xff;\n\n  // extra flags\n  output[op++] = 0;\n\n  // operating system\n  output[op++] = Zlib.Gzip.OperatingSystem.UNKNOWN;\n\n  // extra\n  /* NOP */\n\n  // fname\n  if (this.flags['fname'] !== void 0) {\n    for (i = 0, il = filename.length; i < il; ++i) {\n      c = filename.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fcomment\n  if (this.flags['comment']) {\n    for (i = 0, il = comment.length; i < il; ++i) {\n      c = comment.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fhcrc\n  if (this.flags['fhcrc']) {\n    crc16 = Zlib.CRC32.calc(output, 0, op) & 0xffff;\n    output[op++] = (crc16      ) & 0xff;\n    output[op++] = (crc16 >>> 8) & 0xff;\n  }\n\n  // add compress option\n  this.deflateOptions['outputBuffer'] = output;\n  this.deflateOptions['outputIndex'] = op;\n\n  // compress\n  rawdeflate = new Zlib.RawDeflate(input, this.deflateOptions);\n  output = rawdeflate.compress();\n  op = rawdeflate.op;\n\n  // expand buffer\n  {\n    if (op + 8 > output.buffer.byteLength) {\n      this.output = new Uint8Array(op + 8);\n      this.output.set(new Uint8Array(output.buffer));\n      output = this.output;\n    } else {\n      output = new Uint8Array(output.buffer);\n    }\n  }\n\n  // crc32\n  crc32 = Zlib.CRC32.calc(input);\n  output[op++] = (crc32       ) & 0xff;\n  output[op++] = (crc32 >>>  8) & 0xff;\n  output[op++] = (crc32 >>> 16) & 0xff;\n  output[op++] = (crc32 >>> 24) & 0xff;\n\n  // input size\n  il = input.length;\n  output[op++] = (il       ) & 0xff;\n  output[op++] = (il >>>  8) & 0xff;\n  output[op++] = (il >>> 16) & 0xff;\n  output[op++] = (il >>> 24) & 0xff;\n\n  this.ip = ip;\n\n  if ( op < output.length) {\n    this.output = output = output.subarray(0, op);\n  }\n\n  return output;\n};\n\n/** @enum {number} */\nZlib.Gzip.OperatingSystem = {\n  FAT: 0,\n  AMIGA: 1,\n  VMS: 2,\n  UNIX: 3,\n  VM_CMS: 4,\n  ATARI_TOS: 5,\n  HPFS: 6,\n  MACINTOSH: 7,\n  Z_SYSTEM: 8,\n  CP_M: 9,\n  TOPS_20: 10,\n  NTFS: 11,\n  QDOS: 12,\n  ACORN_RISCOS: 13,\n  UNKNOWN: 255\n};\n\n/** @enum {number} */\nZlib.Gzip.FlagsMask = {\n  FTEXT: 0x01,\n  FHCRC: 0x02,\n  FEXTRA: 0x04,\n  FNAME: 0x08,\n  FCOMMENT: 0x10\n};\n\n\n/**\n * @fileoverview Heap Sort 実装. ハフマン符号化で使用する.\n */\n\n/**\n * カスタムハフマン符号で使用するヒープ実装\n * @param {number} length ヒープサイズ.\n * @constructor\n */\nZlib.Heap = function(length) {\n  this.buffer = new ( Uint16Array )(length * 2);\n  this.length = 0;\n};\n\n/**\n * 親ノードの index 取得\n * @param {number} index 子ノードの index.\n * @return {number} 親ノードの index.\n *\n */\nZlib.Heap.prototype.getParent = function(index) {\n  return ((index - 2) / 4 | 0) * 2;\n};\n\n/**\n * 子ノードの index 取得\n * @param {number} index 親ノードの index.\n * @return {number} 子ノードの index.\n */\nZlib.Heap.prototype.getChild = function(index) {\n  return 2 * index + 2;\n};\n\n/**\n * Heap に値を追加する\n * @param {number} index キー index.\n * @param {number} value 値.\n * @return {number} 現在のヒープ長.\n */\nZlib.Heap.prototype.push = function(index, value) {\n  var current, parent,\n      heap = this.buffer,\n      swap;\n\n  current = this.length;\n  heap[this.length++] = value;\n  heap[this.length++] = index;\n\n  // ルートノードにたどり着くまで入れ替えを試みる\n  while (current > 0) {\n    parent = this.getParent(current);\n\n    // 親ノードと比較して親の方が小さければ入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[current];\n      heap[current] = heap[parent];\n      heap[parent] = swap;\n\n      swap = heap[current + 1];\n      heap[current + 1] = heap[parent + 1];\n      heap[parent + 1] = swap;\n\n      current = parent;\n    // 入れ替えが必要なくなったらそこで抜ける\n    } else {\n      break;\n    }\n  }\n\n  return this.length;\n};\n\n/**\n * Heapから一番大きい値を返す\n * @return {{index: number, value: number, length: number}} {index: キーindex,\n *     value: 値, length: ヒープ長} の Object.\n */\nZlib.Heap.prototype.pop = function() {\n  var index, value,\n      heap = this.buffer, swap,\n      current, parent;\n\n  value = heap[0];\n  index = heap[1];\n\n  // 後ろから値を取る\n  this.length -= 2;\n  heap[0] = heap[this.length];\n  heap[1] = heap[this.length + 1];\n\n  parent = 0;\n  // ルートノードから下がっていく\n  while (true) {\n    current = this.getChild(parent);\n\n    // 範囲チェック\n    if (current >= this.length) {\n      break;\n    }\n\n    // 隣のノードと比較して、隣の方が値が大きければ隣を現在ノードとして選択\n    if (current + 2 < this.length && heap[current + 2] > heap[current]) {\n      current += 2;\n    }\n\n    // 親ノードと比較して親の方が小さい場合は入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[parent];\n      heap[parent] = heap[current];\n      heap[current] = swap;\n\n      swap = heap[parent + 1];\n      heap[parent + 1] = heap[current + 1];\n      heap[current + 1] = swap;\n    } else {\n      break;\n    }\n\n    parent = current;\n  }\n\n  return {index: index, value: value, length: this.length};\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n/**\n * @fileoverview Deflate (RFC1951) 符号化アルゴリズム実装.\n */\n\n\n/**\n * Raw Deflate 実装\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} input 符号化する対象のバッファ.\n * @param {Object=} opt_params option parameters.\n *\n * typed array が使用可能なとき、outputBuffer が Array は自動的に Uint8Array に\n * 変換されます.\n * 別のオブジェクトになるため出力バッファを参照している変数などは\n * 更新する必要があります.\n */\nZlib.RawDeflate = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  this.compressionType = Zlib.RawDeflate.CompressionType.DYNAMIC;\n  /** @type {number} */\n  this.lazy = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsLitLen;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsDist;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n    ( input instanceof Array) ? new Uint8Array(input) : input;\n  /** @type {!(Array.<number>|Uint8Array)} output output buffer. */\n  this.output;\n  /** @type {number} pos output buffer position. */\n  this.op = 0;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['lazy']) {\n      this.lazy = opt_params['lazy'];\n    }\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n    if (opt_params['outputBuffer']) {\n      this.output =\n        ( opt_params['outputBuffer'] instanceof Array) ?\n        new Uint8Array(opt_params['outputBuffer']) : opt_params['outputBuffer'];\n    }\n    if (typeof opt_params['outputIndex'] === 'number') {\n      this.op = opt_params['outputIndex'];\n    }\n  }\n\n  if (!this.output) {\n    this.output = new ( Uint8Array )(0x8000);\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawDeflate.CompressionType = {\n  NONE: 0,\n  FIXED: 1,\n  DYNAMIC: 2,\n  RESERVED: 3\n};\n\n\n/**\n * LZ77 の最小マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MinLength = 3;\n\n/**\n * LZ77 の最大マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MaxLength = 258;\n\n/**\n * LZ77 のウィンドウサイズ\n * @const\n * @type {number}\n */\nZlib.RawDeflate.WindowSize = 0x8000;\n\n/**\n * 最長の符号長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.MaxCodeLength = 16;\n\n/**\n * ハフマン符号の最大数値\n * @const\n * @type {number}\n */\nZlib.RawDeflate.HUFMAX = 286;\n\n/**\n * 固定ハフマン符号の符号化テーブル\n * @const\n * @type {Array.<Array.<number, number>>}\n */\nZlib.RawDeflate.FixedHuffmanTable = (function() {\n  var table = [], i;\n\n  for (i = 0; i < 288; i++) {\n    switch (true) {\n      case (i <= 143): table.push([i       + 0x030, 8]); break;\n      case (i <= 255): table.push([i - 144 + 0x190, 9]); break;\n      case (i <= 279): table.push([i - 256 + 0x000, 7]); break;\n      case (i <= 287): table.push([i - 280 + 0x0C0, 8]); break;\n      default:\n        throw 'invalid literal: ' + i;\n    }\n  }\n\n  return table;\n})();\n\n/**\n * DEFLATE ブロックの作成\n * @return {!(Array.<number>|Uint8Array)} 圧縮済み byte array.\n */\nZlib.RawDeflate.prototype.compress = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var blockArray;\n  /** @type {number} */\n  var position;\n  /** @type {number} */\n  var length;\n\n  var input = this.input;\n\n  // compression\n  switch (this.compressionType) {\n    case Zlib.RawDeflate.CompressionType.NONE:\n      // each 65535-Byte (length header: 16-bit)\n      for (position = 0, length = input.length; position < length;) {\n        blockArray = \n          input.subarray(position, position + 0xffff) ;\n        position += blockArray.length;\n        this.makeNocompressBlock(blockArray, (position === length));\n      }\n      break;\n    case Zlib.RawDeflate.CompressionType.FIXED:\n      this.output = this.makeFixedHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    case Zlib.RawDeflate.CompressionType.DYNAMIC:\n      this.output = this.makeDynamicHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    default:\n      throw 'invalid compression type';\n  }\n\n  return this.output;\n};\n\n/**\n * 非圧縮ブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 非圧縮ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeNocompressBlock =\nfunction(blockArray, isFinalBlock) {\n  /** @type {number} */\n  var bfinal;\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  var btype;\n  /** @type {number} */\n  var len;\n  /** @type {number} */\n  var nlen;\n\n  var output = this.output;\n  var op = this.op;\n\n  // expand buffer\n  {\n    output = new Uint8Array(this.output.buffer);\n    while (output.length <= op + blockArray.length + 5) {\n      output = new Uint8Array(output.length << 1);\n    }\n    output.set(this.output);\n  }\n\n  // header\n  bfinal = isFinalBlock ? 1 : 0;\n  btype = Zlib.RawDeflate.CompressionType.NONE;\n  output[op++] = (bfinal) | (btype << 1);\n\n  // length\n  len = blockArray.length;\n  nlen = (~len + 0x10000) & 0xffff;\n  output[op++] =          len & 0xff;\n  output[op++] =  (len >>> 8) & 0xff;\n  output[op++] =         nlen & 0xff;\n  output[op++] = (nlen >>> 8) & 0xff;\n\n  // copy buffer\n  {\n     output.set(blockArray, op);\n     op += blockArray.length;\n     output = output.subarray(0, op);\n  }\n\n  this.op = op;\n  this.output = output;\n\n  return output;\n};\n\n/**\n * 固定ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 固定ハフマン符号化ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeFixedHuffmanBlock =\nfunction(blockArray, isFinalBlock) {\n  /** @type {Zlib.BitStream} */\n  var stream = new Zlib.BitStream(\n    new Uint8Array(this.output.buffer) , this.op);\n  /** @type {number} */\n  var bfinal;\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  var btype;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var data;\n\n  // header\n  bfinal = isFinalBlock ? 1 : 0;\n  btype = Zlib.RawDeflate.CompressionType.FIXED;\n\n  stream.writeBits(bfinal, 1, true);\n  stream.writeBits(btype, 2, true);\n\n  data = this.lz77(blockArray);\n  this.fixedHuffman(data, stream);\n\n  return stream.finish();\n};\n\n/**\n * 動的ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 動的ハフマン符号ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeDynamicHuffmanBlock =\nfunction(blockArray, isFinalBlock) {\n  /** @type {Zlib.BitStream} */\n  var stream = new Zlib.BitStream(\n    new Uint8Array(this.output.buffer) , this.op);\n  /** @type {number} */\n  var bfinal;\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  var btype;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var data;\n  /** @type {number} */\n  var hlit;\n  /** @type {number} */\n  var hdist;\n  /** @type {number} */\n  var hclen;\n  /** @const @type {Array.<number>} */\n  var hclenOrder =\n        [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var litLenLengths;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var litLenCodes;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var distLengths;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var distCodes;\n  /** @type {{\n   *   codes: !(Array.<number>|Uint32Array),\n   *   freqs: !(Array.<number>|Uint8Array)\n   * }} */\n  var treeSymbols;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var treeLengths;\n  /** @type {Array} */\n  var transLengths = new Array(19);\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var treeCodes;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var bitlen;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // header\n  bfinal = isFinalBlock ? 1 : 0;\n  btype = Zlib.RawDeflate.CompressionType.DYNAMIC;\n\n  stream.writeBits(bfinal, 1, true);\n  stream.writeBits(btype, 2, true);\n\n  data = this.lz77(blockArray);\n\n  // リテラル・長さ, 距離のハフマン符号と符号長の算出\n  litLenLengths = this.getLengths_(this.freqsLitLen, 15);\n  litLenCodes = this.getCodesFromLengths_(litLenLengths);\n  distLengths = this.getLengths_(this.freqsDist, 7);\n  distCodes = this.getCodesFromLengths_(distLengths);\n\n  // HLIT, HDIST の決定\n  for (hlit = 286; hlit > 257 && litLenLengths[hlit - 1] === 0; hlit--) {}\n  for (hdist = 30; hdist > 1 && distLengths[hdist - 1] === 0; hdist--) {}\n\n  // HCLEN\n  treeSymbols =\n    this.getTreeSymbols_(hlit, litLenLengths, hdist, distLengths);\n  treeLengths = this.getLengths_(treeSymbols.freqs, 7);\n  for (i = 0; i < 19; i++) {\n    transLengths[i] = treeLengths[hclenOrder[i]];\n  }\n  for (hclen = 19; hclen > 4 && transLengths[hclen - 1] === 0; hclen--) {}\n\n  treeCodes = this.getCodesFromLengths_(treeLengths);\n\n  // 出力\n  stream.writeBits(hlit - 257, 5, true);\n  stream.writeBits(hdist - 1, 5, true);\n  stream.writeBits(hclen - 4, 4, true);\n  for (i = 0; i < hclen; i++) {\n    stream.writeBits(transLengths[i], 3, true);\n  }\n\n  // ツリーの出力\n  for (i = 0, il = treeSymbols.codes.length; i < il; i++) {\n    code = treeSymbols.codes[i];\n\n    stream.writeBits(treeCodes[code], treeLengths[code], true);\n\n    // extra bits\n    if (code >= 16) {\n      i++;\n      switch (code) {\n        case 16: bitlen = 2; break;\n        case 17: bitlen = 3; break;\n        case 18: bitlen = 7; break;\n        default:\n          throw 'invalid code: ' + code;\n      }\n\n      stream.writeBits(treeSymbols.codes[i], bitlen, true);\n    }\n  }\n\n  this.dynamicHuffman(\n    data,\n    [litLenCodes, litLenLengths],\n    [distCodes, distLengths],\n    stream\n  );\n\n  return stream.finish();\n};\n\n\n/**\n * 動的ハフマン符号化(カスタムハフマンテーブル)\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.dynamicHuffman =\nfunction(dataArray, litLen, dist, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var litLenCodes;\n  /** @type {number} */\n  var litLenLengths;\n  /** @type {number} */\n  var distCodes;\n  /** @type {number} */\n  var distLengths;\n\n  litLenCodes = litLen[0];\n  litLenLengths = litLen[1];\n  distCodes = dist[0];\n  distLengths = dist[1];\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; ++index) {\n    literal = dataArray[index];\n\n    // literal or length\n    stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);\n\n    // 長さ・距離符号\n    if (literal > 256) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      code = dataArray[++index];\n      stream.writeBits(distCodes[code], distLengths[code], true);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n    // 終端\n    } else if (literal === 256) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * 固定ハフマン符号化\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.fixedHuffman = function(dataArray, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; index++) {\n    literal = dataArray[index];\n\n    // 符号の書き込み\n    Zlib.BitStream.prototype.writeBits.apply(\n      stream,\n      Zlib.RawDeflate.FixedHuffmanTable[literal]\n    );\n\n    // 長さ・距離符号\n    if (literal > 0x100) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      stream.writeBits(dataArray[++index], 5);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n    // 終端\n    } else if (literal === 0x100) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * マッチ情報\n * @param {!number} length マッチした長さ.\n * @param {!number} backwardDistance マッチ位置との距離.\n * @constructor\n */\nZlib.RawDeflate.Lz77Match = function(length, backwardDistance) {\n  /** @type {number} match length. */\n  this.length = length;\n  /** @type {number} backward distance. */\n  this.backwardDistance = backwardDistance;\n};\n\n/**\n * 長さ符号テーブル.\n * [コード, 拡張ビット, 拡張ビット長] の配列となっている.\n * @const\n * @type {!(Array.<number>|Uint32Array)}\n */\nZlib.RawDeflate.Lz77Match.LengthCodeTable = (function(table) {\n  return  new Uint32Array(table) ;\n})((function() {\n  /** @type {!Array} */\n  var table = [];\n  /** @type {number} */\n  var i;\n  /** @type {!Array.<number>} */\n  var c;\n\n  for (i = 3; i <= 258; i++) {\n    c = code(i);\n    table[i] = (c[2] << 24) | (c[1] << 16) | c[0];\n  }\n\n  /**\n   * @param {number} length lz77 length.\n   * @return {!Array.<number>} lz77 codes.\n   */\n  function code(length) {\n    switch (true) {\n      case (length === 3): return [257, length - 3, 0];      case (length === 4): return [258, length - 4, 0];      case (length === 5): return [259, length - 5, 0];      case (length === 6): return [260, length - 6, 0];      case (length === 7): return [261, length - 7, 0];      case (length === 8): return [262, length - 8, 0];      case (length === 9): return [263, length - 9, 0];      case (length === 10): return [264, length - 10, 0];      case (length <= 12): return [265, length - 11, 1];      case (length <= 14): return [266, length - 13, 1];      case (length <= 16): return [267, length - 15, 1];      case (length <= 18): return [268, length - 17, 1];      case (length <= 22): return [269, length - 19, 2];      case (length <= 26): return [270, length - 23, 2];      case (length <= 30): return [271, length - 27, 2];      case (length <= 34): return [272, length - 31, 2];      case (length <= 42): return [273, length - 35, 3];      case (length <= 50): return [274, length - 43, 3];      case (length <= 58): return [275, length - 51, 3];      case (length <= 66): return [276, length - 59, 3];      case (length <= 82): return [277, length - 67, 4];      case (length <= 98): return [278, length - 83, 4];      case (length <= 114): return [279, length - 99, 4];      case (length <= 130): return [280, length - 115, 4];      case (length <= 162): return [281, length - 131, 5];      case (length <= 194): return [282, length - 163, 5];      case (length <= 226): return [283, length - 195, 5];      case (length <= 257): return [284, length - 227, 5];      case (length === 258): return [285, length - 258, 0];      default: throw 'invalid length: ' + length;\n    }\n  }\n\n  return table;\n})());\n\n/**\n * 距離符号テーブル\n * @param {!number} dist 距離.\n * @return {!Array.<number>} コード、拡張ビット、拡張ビット長の配列.\n * @private\n */\nZlib.RawDeflate.Lz77Match.prototype.getDistanceCode_ = function(dist) {\n  /** @type {!Array.<number>} distance code table. */\n  var r;\n\n  switch (true) {\n    case (dist === 1): r = [0, dist - 1, 0]; break;\n    case (dist === 2): r = [1, dist - 2, 0]; break;\n    case (dist === 3): r = [2, dist - 3, 0]; break;\n    case (dist === 4): r = [3, dist - 4, 0]; break;\n    case (dist <= 6): r = [4, dist - 5, 1]; break;\n    case (dist <= 8): r = [5, dist - 7, 1]; break;\n    case (dist <= 12): r = [6, dist - 9, 2]; break;\n    case (dist <= 16): r = [7, dist - 13, 2]; break;\n    case (dist <= 24): r = [8, dist - 17, 3]; break;\n    case (dist <= 32): r = [9, dist - 25, 3]; break;\n    case (dist <= 48): r = [10, dist - 33, 4]; break;\n    case (dist <= 64): r = [11, dist - 49, 4]; break;\n    case (dist <= 96): r = [12, dist - 65, 5]; break;\n    case (dist <= 128): r = [13, dist - 97, 5]; break;\n    case (dist <= 192): r = [14, dist - 129, 6]; break;\n    case (dist <= 256): r = [15, dist - 193, 6]; break;\n    case (dist <= 384): r = [16, dist - 257, 7]; break;\n    case (dist <= 512): r = [17, dist - 385, 7]; break;\n    case (dist <= 768): r = [18, dist - 513, 8]; break;\n    case (dist <= 1024): r = [19, dist - 769, 8]; break;\n    case (dist <= 1536): r = [20, dist - 1025, 9]; break;\n    case (dist <= 2048): r = [21, dist - 1537, 9]; break;\n    case (dist <= 3072): r = [22, dist - 2049, 10]; break;\n    case (dist <= 4096): r = [23, dist - 3073, 10]; break;\n    case (dist <= 6144): r = [24, dist - 4097, 11]; break;\n    case (dist <= 8192): r = [25, dist - 6145, 11]; break;\n    case (dist <= 12288): r = [26, dist - 8193, 12]; break;\n    case (dist <= 16384): r = [27, dist - 12289, 12]; break;\n    case (dist <= 24576): r = [28, dist - 16385, 13]; break;\n    case (dist <= 32768): r = [29, dist - 24577, 13]; break;\n    default: throw 'invalid distance';\n  }\n\n  return r;\n};\n\n/**\n * マッチ情報を LZ77 符号化配列で返す.\n * なお、ここでは以下の内部仕様で符号化している\n * [ CODE, EXTRA-BIT-LEN, EXTRA, CODE, EXTRA-BIT-LEN, EXTRA ]\n * @return {!Array.<number>} LZ77 符号化 byte array.\n */\nZlib.RawDeflate.Lz77Match.prototype.toLz77Array = function() {\n  /** @type {number} */\n  var length = this.length;\n  /** @type {number} */\n  var dist = this.backwardDistance;\n  /** @type {Array} */\n  var codeArray = [];\n  /** @type {number} */\n  var pos = 0;\n  /** @type {!Array.<number>} */\n  var code;\n\n  // length\n  code = Zlib.RawDeflate.Lz77Match.LengthCodeTable[length];\n  codeArray[pos++] = code & 0xffff;\n  codeArray[pos++] = (code >> 16) & 0xff;\n  codeArray[pos++] = code >> 24;\n\n  // distance\n  code = this.getDistanceCode_(dist);\n  codeArray[pos++] = code[0];\n  codeArray[pos++] = code[1];\n  codeArray[pos++] = code[2];\n\n  return codeArray;\n};\n\n/**\n * LZ77 実装\n * @param {!(Array.<number>|Uint8Array)} dataArray LZ77 符号化するバイト配列.\n * @return {!(Array.<number>|Uint16Array)} LZ77 符号化した配列.\n */\nZlib.RawDeflate.prototype.lz77 = function(dataArray) {\n  /** @type {number} input position */\n  var position;\n  /** @type {number} input length */\n  var length;\n  /** @type {number} loop counter */\n  var i;\n  /** @type {number} loop limiter */\n  var il;\n  /** @type {number} chained-hash-table key */\n  var matchKey;\n  /** @type {Object.<number, Array.<number>>} chained-hash-table */\n  var table = {};\n  /** @const @type {number} */\n  var windowSize = Zlib.RawDeflate.WindowSize;\n  /** @type {Array.<number>} match list */\n  var matchList;\n  /** @type {Zlib.RawDeflate.Lz77Match} longest match */\n  var longestMatch;\n  /** @type {Zlib.RawDeflate.Lz77Match} previous longest match */\n  var prevMatch;\n  /** @type {!(Array.<number>|Uint16Array)} lz77 buffer */\n  var lz77buf = \n    new Uint16Array(dataArray.length * 2) ;\n  /** @type {number} lz77 output buffer pointer */\n  var pos = 0;\n  /** @type {number} lz77 skip length */\n  var skipLength = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsLitLen = new ( Uint32Array )(286);\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsDist = new ( Uint32Array )(30);\n  /** @type {number} */\n  var lazy = this.lazy;\n  /** @type {*} temporary variable */\n  var tmp;\n  freqsLitLen[256] = 1; // EOB の最低出現回数は 1\n\n  /**\n   * マッチデータの書き込み\n   * @param {Zlib.RawDeflate.Lz77Match} match LZ77 Match data.\n   * @param {!number} offset スキップ開始位置(相対指定).\n   * @private\n   */\n  function writeMatch(match, offset) {\n    /** @type {Array.<number>} */\n    var lz77Array = match.toLz77Array();\n    /** @type {number} */\n    var i;\n    /** @type {number} */\n    var il;\n\n    for (i = 0, il = lz77Array.length; i < il; ++i) {\n      lz77buf[pos++] = lz77Array[i];\n    }\n    freqsLitLen[lz77Array[0]]++;\n    freqsDist[lz77Array[3]]++;\n    skipLength = match.length + offset - 1;\n    prevMatch = null;\n  }\n\n  // LZ77 符号化\n  for (position = 0, length = dataArray.length; position < length; ++position) {\n    // ハッシュキーの作成\n    for (matchKey = 0, i = 0, il = Zlib.RawDeflate.Lz77MinLength; i < il; ++i) {\n      if (position + i === length) {\n        break;\n      }\n      matchKey = (matchKey << 8) | dataArray[position + i];\n    }\n\n    // テーブルが未定義だったら作成する\n    if (table[matchKey] === void 0) { table[matchKey] = []; }\n    matchList = table[matchKey];\n\n    // skip\n    if (skipLength-- > 0) {\n      matchList.push(position);\n      continue;\n    }\n\n    // マッチテーブルの更新 (最大戻り距離を超えているものを削除する)\n    while (matchList.length > 0 && position - matchList[0] > windowSize) {\n      matchList.shift();\n    }\n\n    // データ末尾でマッチしようがない場合はそのまま流しこむ\n    if (position + Zlib.RawDeflate.Lz77MinLength >= length) {\n      if (prevMatch) {\n        writeMatch(prevMatch, -1);\n      }\n\n      for (i = 0, il = length - position; i < il; ++i) {\n        tmp = dataArray[position + i];\n        lz77buf[pos++] = tmp;\n        ++freqsLitLen[tmp];\n      }\n      break;\n    }\n\n    // マッチ候補から最長のものを探す\n    if (matchList.length > 0) {\n      longestMatch = this.searchLongestMatch_(dataArray, position, matchList);\n\n      if (prevMatch) {\n        // 現在のマッチの方が前回のマッチよりも長い\n        if (prevMatch.length < longestMatch.length) {\n          // write previous literal\n          tmp = dataArray[position - 1];\n          lz77buf[pos++] = tmp;\n          ++freqsLitLen[tmp];\n\n          // write current match\n          writeMatch(longestMatch, 0);\n        } else {\n          // write previous match\n          writeMatch(prevMatch, -1);\n        }\n      } else if (longestMatch.length < lazy) {\n        prevMatch = longestMatch;\n      } else {\n        writeMatch(longestMatch, 0);\n      }\n    // 前回マッチしていて今回マッチがなかったら前回のを採用\n    } else if (prevMatch) {\n      writeMatch(prevMatch, -1);\n    } else {\n      tmp = dataArray[position];\n      lz77buf[pos++] = tmp;\n      ++freqsLitLen[tmp];\n    }\n\n    matchList.push(position); // マッチテーブルに現在の位置を保存\n  }\n\n  // 終端処理\n  lz77buf[pos++] = 256;\n  freqsLitLen[256]++;\n  this.freqsLitLen = freqsLitLen;\n  this.freqsDist = freqsDist;\n\n  return /** @type {!(Uint16Array|Array.<number>)} */ (\n      lz77buf.subarray(0, pos) \n  );\n};\n\n/**\n * マッチした候補の中から最長一致を探す\n * @param {!Object} data plain data byte array.\n * @param {!number} position plain data byte array position.\n * @param {!Array.<number>} matchList 候補となる位置の配列.\n * @return {!Zlib.RawDeflate.Lz77Match} 最長かつ最短距離のマッチオブジェクト.\n * @private\n */\nZlib.RawDeflate.prototype.searchLongestMatch_ =\nfunction(data, position, matchList) {\n  var match,\n      currentMatch,\n      matchMax = 0, matchLength,\n      i, j, l, dl = data.length;\n\n  // 候補を後ろから 1 つずつ絞り込んでゆく\n  permatch:\n  for (i = 0, l = matchList.length; i < l; i++) {\n    match = matchList[l - i - 1];\n    matchLength = Zlib.RawDeflate.Lz77MinLength;\n\n    // 前回までの最長一致を末尾から一致検索する\n    if (matchMax > Zlib.RawDeflate.Lz77MinLength) {\n      for (j = matchMax; j > Zlib.RawDeflate.Lz77MinLength; j--) {\n        if (data[match + j - 1] !== data[position + j - 1]) {\n          continue permatch;\n        }\n      }\n      matchLength = matchMax;\n    }\n\n    // 最長一致探索\n    while (matchLength < Zlib.RawDeflate.Lz77MaxLength &&\n           position + matchLength < dl &&\n           data[match + matchLength] === data[position + matchLength]) {\n      ++matchLength;\n    }\n\n    // マッチ長が同じ場合は後方を優先\n    if (matchLength > matchMax) {\n      currentMatch = match;\n      matchMax = matchLength;\n    }\n\n    // 最長が確定したら後の処理は省略\n    if (matchLength === Zlib.RawDeflate.Lz77MaxLength) {\n      break;\n    }\n  }\n\n  return new Zlib.RawDeflate.Lz77Match(matchMax, position - currentMatch);\n};\n\n/**\n * Tree-Transmit Symbols の算出\n * reference: PuTTY Deflate implementation\n * @param {number} hlit HLIT.\n * @param {!(Array.<number>|Uint8Array)} litlenLengths リテラルと長さ符号の符号長配列.\n * @param {number} hdist HDIST.\n * @param {!(Array.<number>|Uint8Array)} distLengths 距離符号の符号長配列.\n * @return {{\n *   codes: !(Array.<number>|Uint32Array),\n *   freqs: !(Array.<number>|Uint8Array)\n * }} Tree-Transmit Symbols.\n */\nZlib.RawDeflate.prototype.getTreeSymbols_ =\nfunction(hlit, litlenLengths, hdist, distLengths) {\n  var src = new ( Uint32Array )(hlit + hdist),\n      i, j, runLength, l,\n      result = new ( Uint32Array )(286 + 30),\n      nResult,\n      rpt,\n      freqs = new ( Uint8Array )(19);\n\n  j = 0;\n  for (i = 0; i < hlit; i++) {\n    src[j++] = litlenLengths[i];\n  }\n  for (i = 0; i < hdist; i++) {\n    src[j++] = distLengths[i];\n  }\n\n  // 符号化\n  nResult = 0;\n  for (i = 0, l = src.length; i < l; i += j) {\n    // Run Length Encoding\n    for (j = 1; i + j < l && src[i + j] === src[i]; ++j) {}\n\n    runLength = j;\n\n    if (src[i] === 0) {\n      // 0 の繰り返しが 3 回未満ならばそのまま\n      if (runLength < 3) {\n        while (runLength-- > 0) {\n          result[nResult++] = 0;\n          freqs[0]++;\n        }\n      } else {\n        while (runLength > 0) {\n          // 繰り返しは最大 138 までなので切り詰める\n          rpt = (runLength < 138 ? runLength : 138);\n\n          if (rpt > runLength - 3 && rpt < runLength) {\n            rpt = runLength - 3;\n          }\n\n          // 3-10 回 -> 17\n          if (rpt <= 10) {\n            result[nResult++] = 17;\n            result[nResult++] = rpt - 3;\n            freqs[17]++;\n          // 11-138 回 -> 18\n          } else {\n            result[nResult++] = 18;\n            result[nResult++] = rpt - 11;\n            freqs[18]++;\n          }\n\n          runLength -= rpt;\n        }\n      }\n    } else {\n      result[nResult++] = src[i];\n      freqs[src[i]]++;\n      runLength--;\n\n      // 繰り返し回数が3回未満ならばランレングス符号は要らない\n      if (runLength < 3) {\n        while (runLength-- > 0) {\n          result[nResult++] = src[i];\n          freqs[src[i]]++;\n        }\n      // 3 回以上ならばランレングス符号化\n      } else {\n        while (runLength > 0) {\n          // runLengthを 3-6 で分割\n          rpt = (runLength < 6 ? runLength : 6);\n\n          if (rpt > runLength - 3 && rpt < runLength) {\n            rpt = runLength - 3;\n          }\n\n          result[nResult++] = 16;\n          result[nResult++] = rpt - 3;\n          freqs[16]++;\n\n          runLength -= rpt;\n        }\n      }\n    }\n  }\n\n  return {\n    codes:\n       result.subarray(0, nResult) ,\n    freqs: freqs\n  };\n};\n\n/**\n * ハフマン符号の長さを取得する\n * @param {!(Array.<number>|Uint8Array|Uint32Array)} freqs 出現カウント.\n * @param {number} limit 符号長の制限.\n * @return {!(Array.<number>|Uint8Array)} 符号長配列.\n * @private\n */\nZlib.RawDeflate.prototype.getLengths_ = function(freqs, limit) {\n  /** @type {number} */\n  var nSymbols = freqs.length;\n  /** @type {Zlib.Heap} */\n  var heap = new Zlib.Heap(2 * Zlib.RawDeflate.HUFMAX);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var length = new ( Uint8Array )(nSymbols);\n  /** @type {Array} */\n  var nodes;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var values;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // ヒープの構築\n  for (i = 0; i < nSymbols; ++i) {\n    if (freqs[i] > 0) {\n      heap.push(i, freqs[i]);\n    }\n  }\n  nodes = new Array(heap.length / 2);\n  values = new ( Uint32Array )(heap.length / 2);\n\n  // 非 0 の要素が一つだけだった場合は、そのシンボルに符号長 1 を割り当てて終了\n  if (nodes.length === 1) {\n    length[heap.pop().index] = 1;\n    return length;\n  }\n\n  // Reverse Package Merge Algorithm による Canonical Huffman Code の符号長決定\n  for (i = 0, il = heap.length / 2; i < il; ++i) {\n    nodes[i] = heap.pop();\n    values[i] = nodes[i].value;\n  }\n  codeLength = this.reversePackageMerge_(values, values.length, limit);\n\n  for (i = 0, il = nodes.length; i < il; ++i) {\n    length[nodes[i].index] = codeLength[i];\n  }\n\n  return length;\n};\n\n/**\n * Reverse Package Merge Algorithm.\n * @param {!(Array.<number>|Uint32Array)} freqs sorted probability.\n * @param {number} symbols number of symbols.\n * @param {number} limit code length limit.\n * @return {!(Array.<number>|Uint8Array)} code lengths.\n */\nZlib.RawDeflate.prototype.reversePackageMerge_ = function(freqs, symbols, limit) {\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var minimumCost = new ( Uint16Array )(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var flag = new ( Uint8Array )(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength = new ( Uint8Array )(symbols);\n  /** @type {Array} */\n  var value = new Array(limit);\n  /** @type {Array} */\n  var type  = new Array(limit);\n  /** @type {Array.<number>} */\n  var currentPosition = new Array(limit);\n  /** @type {number} */\n  var excess = (1 << limit) - symbols;\n  /** @type {number} */\n  var half = (1 << (limit - 1));\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var t;\n  /** @type {number} */\n  var weight;\n  /** @type {number} */\n  var next;\n\n  /**\n   * @param {number} j\n   */\n  function takePackage(j) {\n    /** @type {number} */\n    var x = type[j][currentPosition[j]];\n\n    if (x === symbols) {\n      takePackage(j+1);\n      takePackage(j+1);\n    } else {\n      --codeLength[x];\n    }\n\n    ++currentPosition[j];\n  }\n\n  minimumCost[limit-1] = symbols;\n\n  for (j = 0; j < limit; ++j) {\n    if (excess < half) {\n      flag[j] = 0;\n    } else {\n      flag[j] = 1;\n      excess -= half;\n    }\n    excess <<= 1;\n    minimumCost[limit-2-j] = (minimumCost[limit-1-j] / 2 | 0) + symbols;\n  }\n  minimumCost[0] = flag[0];\n\n  value[0] = new Array(minimumCost[0]);\n  type[0]  = new Array(minimumCost[0]);\n  for (j = 1; j < limit; ++j) {\n    if (minimumCost[j] > 2 * minimumCost[j-1] + flag[j]) {\n      minimumCost[j] = 2 * minimumCost[j-1] + flag[j];\n    }\n    value[j] = new Array(minimumCost[j]);\n    type[j]  = new Array(minimumCost[j]);\n  }\n\n  for (i = 0; i < symbols; ++i) {\n    codeLength[i] = limit;\n  }\n\n  for (t = 0; t < minimumCost[limit-1]; ++t) {\n    value[limit-1][t] = freqs[t];\n    type[limit-1][t]  = t;\n  }\n\n  for (i = 0; i < limit; ++i) {\n    currentPosition[i] = 0;\n  }\n  if (flag[limit-1] === 1) {\n    --codeLength[0];\n    ++currentPosition[limit-1];\n  }\n\n  for (j = limit-2; j >= 0; --j) {\n    i = 0;\n    weight = 0;\n    next = currentPosition[j+1];\n\n    for (t = 0; t < minimumCost[j]; t++) {\n      weight = value[j+1][next] + value[j+1][next+1];\n\n      if (weight > freqs[i]) {\n        value[j][t] = weight;\n        type[j][t] = symbols;\n        next += 2;\n      } else {\n        value[j][t] = freqs[i];\n        type[j][t] = i;\n        ++i;\n      }\n    }\n\n    currentPosition[j] = 0;\n    if (flag[j] === 1) {\n      takePackage(j);\n    }\n  }\n\n  return codeLength;\n};\n\n/**\n * 符号長配列からハフマン符号を取得する\n * reference: PuTTY Deflate implementation\n * @param {!(Array.<number>|Uint8Array)} lengths 符号長配列.\n * @return {!(Array.<number>|Uint16Array)} ハフマン符号配列.\n * @private\n */\nZlib.RawDeflate.prototype.getCodesFromLengths_ = function(lengths) {\n  var codes = new ( Uint16Array )(lengths.length),\n      count = [],\n      startCode = [],\n      code = 0, i, il, j, m;\n\n  // Count the codes of each length.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    count[lengths[i]] = (count[lengths[i]] | 0) + 1;\n  }\n\n  // Determine the starting code for each length block.\n  for (i = 1, il = Zlib.RawDeflate.MaxCodeLength; i <= il; i++) {\n    startCode[i] = code;\n    code += count[i] | 0;\n    code <<= 1;\n  }\n\n  // Determine the code for each symbol. Mirrored, of course.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    code = startCode[lengths[i]];\n    startCode[lengths[i]] += 1;\n    codes[i] = 0;\n\n    for (j = 0, m = lengths[i]; j < m; j++) {\n      codes[i] = (codes[i] << 1) | (code & 1);\n      code >>>= 1;\n    }\n  }\n\n  return codes;\n};\n\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Unzip = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n    ( (input instanceof Array)) ?\n    new Uint8Array(input) : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {number} */\n  this.eocdrOffset;\n  /** @type {number} */\n  this.numberOfThisDisk;\n  /** @type {number} */\n  this.startDisk;\n  /** @type {number} */\n  this.totalEntriesThisDisk;\n  /** @type {number} */\n  this.totalEntries;\n  /** @type {number} */\n  this.centralDirectorySize;\n  /** @type {number} */\n  this.centralDirectoryOffset;\n  /** @type {number} */\n  this.commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  this.fileHeaderList;\n  /** @type {Object.<string, number>} */\n  this.filenameToIndex;\n  /** @type {boolean} */\n  this.verify = opt_params['verify'] || false;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password = opt_params['password'];\n};\n\nZlib.Unzip.CompressionMethod = Zlib.Zip.CompressionMethod;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.FileHeaderSignature = Zlib.Zip.FileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.LocalFileHeaderSignature = Zlib.Zip.LocalFileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.CentralDirectorySignature = Zlib.Zip.CentralDirectorySignature;\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.FileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.version;\n  /** @type {number} */\n  this.os;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {number} */\n  this.fileCommentLength;\n  /** @type {number} */\n  this.diskNumberStart;\n  /** @type {number} */\n  this.internalFileAttributes;\n  /** @type {number} */\n  this.externalFileAttributes;\n  /** @type {number} */\n  this.relativeOffset;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.comment;\n};\n\nZlib.Unzip.FileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // central file header signature\n  if (input[ip++] !== Zlib.Unzip.FileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[3]) {\n    throw new Error('invalid file header signature');\n  }\n\n  // version made by\n  this.version = input[ip++];\n  this.os = input[ip++];\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file comment length\n  this.fileCommentLength = input[ip++] | (input[ip++] << 8);\n\n  // disk number start\n  this.diskNumberStart = input[ip++] | (input[ip++] << 8);\n\n  // internal file attributes\n  this.internalFileAttributes = input[ip++] | (input[ip++] << 8);\n\n  // external file attributes\n  this.externalFileAttributes =\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24);\n\n  // relative offset of local header\n  this.relativeOffset = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, \n    input.subarray(ip, ip += this.fileNameLength) \n  );\n\n  // extra field\n  this.extraField = \n    input.subarray(ip, ip += this.extraFieldLength) ;\n\n  // file comment\n  this.comment = \n    input.subarray(ip, ip + this.fileCommentLength) ;\n\n  this.length = ip - this.offset;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.LocalFileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n};\n\nZlib.Unzip.LocalFileHeader.Flags = Zlib.Zip.Flags;\n\nZlib.Unzip.LocalFileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // local file header signature\n  if (input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[3]) {\n    throw new Error('invalid local file header signature');\n  }\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, \n    input.subarray(ip, ip += this.fileNameLength) \n  );\n\n  // extra field\n  this.extraField = \n    input.subarray(ip, ip += this.extraFieldLength) ;\n\n  this.length = ip - this.offset;\n};\n\n\nZlib.Unzip.prototype.searchEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  for (ip = input.length - 12; ip > 0; --ip) {\n    if (input[ip  ] === Zlib.Unzip.CentralDirectorySignature[0] &&\n        input[ip+1] === Zlib.Unzip.CentralDirectorySignature[1] &&\n        input[ip+2] === Zlib.Unzip.CentralDirectorySignature[2] &&\n        input[ip+3] === Zlib.Unzip.CentralDirectorySignature[3]) {\n      this.eocdrOffset = ip;\n      return;\n    }\n  }\n\n  throw new Error('End of Central Directory Record not found');\n};\n\nZlib.Unzip.prototype.parseEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  if (!this.eocdrOffset) {\n    this.searchEndOfCentralDirectoryRecord();\n  }\n  ip = this.eocdrOffset;\n\n  // signature\n  if (input[ip++] !== Zlib.Unzip.CentralDirectorySignature[0] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[1] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[2] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[3]) {\n    throw new Error('invalid signature');\n  }\n\n  // number of this disk\n  this.numberOfThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // number of the disk with the start of the central directory\n  this.startDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory on this disk\n  this.totalEntriesThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory\n  this.totalEntries = input[ip++] | (input[ip++] << 8);\n\n  // size of the central directory\n  this.centralDirectorySize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // offset of start of central directory with respect to the starting disk number\n  this.centralDirectoryOffset = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // .ZIP file comment length\n  this.commentLength = input[ip++] | (input[ip++] << 8);\n\n  // .ZIP file comment\n  this.comment = \n    input.subarray(ip, ip + this.commentLength) ;\n};\n\nZlib.Unzip.prototype.parseFileHeader = function() {\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var filelist = [];\n  /** @type {Object.<string, number>} */\n  var filetable = {};\n  /** @type {number} */\n  var ip;\n  /** @type {Zlib.Unzip.FileHeader} */\n  var fileHeader;\n  /*: @type {number} */\n  var i;\n  /*: @type {number} */\n  var il;\n\n  if (this.fileHeaderList) {\n    return;\n  }\n\n  if (this.centralDirectoryOffset === void 0) {\n    this.parseEndOfCentralDirectoryRecord();\n  }\n  ip = this.centralDirectoryOffset;\n\n  for (i = 0, il = this.totalEntries; i < il; ++i) {\n    fileHeader = new Zlib.Unzip.FileHeader(this.input, ip);\n    fileHeader.parse();\n    ip += fileHeader.length;\n    filelist[i] = fileHeader;\n    filetable[fileHeader.filename] = i;\n  }\n\n  if (this.centralDirectorySize < ip - this.centralDirectoryOffset) {\n    throw new Error('invalid file header size');\n  }\n\n  this.fileHeaderList = filelist;\n  this.filenameToIndex = filetable;\n};\n\n/**\n * @param {number} index file header index.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} file data.\n */\nZlib.Unzip.prototype.getFileData = function(index, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList = this.fileHeaderList;\n  /** @type {Zlib.Unzip.LocalFileHeader} */\n  var localFileHeader;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var length;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {number} */\n  var crc32;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (!fileHeaderList) {\n    this.parseFileHeader();\n  }\n\n  if (fileHeaderList[index] === void 0) {\n    throw new Error('wrong index');\n  }\n\n  offset = fileHeaderList[index].relativeOffset;\n  localFileHeader = new Zlib.Unzip.LocalFileHeader(this.input, offset);\n  localFileHeader.parse();\n  offset += localFileHeader.length;\n  length = localFileHeader.compressedSize;\n\n  // decryption\n  if ((localFileHeader.flags & Zlib.Unzip.LocalFileHeader.Flags.ENCRYPT) !== 0) {\n    if (!(opt_params['password'] || this.password)) {\n      throw new Error('please set password');\n    }\n    key =  this.createDecryptionKey(opt_params['password'] || this.password);\n\n    // encryption header\n    for(i = offset, il = offset + 12; i < il; ++i) {\n      this.decode(key, input[i]);\n    }\n    offset += 12;\n    length -= 12;\n\n    // decryption\n    for (i = offset, il = offset + length; i < il; ++i) {\n      input[i] = this.decode(key, input[i]);\n    }\n  }\n\n  switch (localFileHeader.compression) {\n    case Zlib.Unzip.CompressionMethod.STORE:\n      buffer = \n        this.input.subarray(offset, offset + length) ;\n      break;\n    case Zlib.Unzip.CompressionMethod.DEFLATE:\n      buffer = new Zlib.RawInflate(this.input, {\n        'index': offset,\n        'bufferSize': localFileHeader.plainSize\n      }).decompress();\n      break;\n    default:\n      throw new Error('unknown compression type');\n  }\n\n  if (this.verify) {\n    crc32 = Zlib.CRC32.calc(buffer);\n    if (localFileHeader.crc32 !== crc32) {\n      throw new Error(\n        'wrong crc: file=0x' + localFileHeader.crc32.toString(16) +\n        ', data=0x' + crc32.toString(16)\n      );\n    }\n  }\n\n  return buffer;\n};\n\n/**\n * @return {Array.<string>}\n */\nZlib.Unzip.prototype.getFilenames = function() {\n  /** @type {Array.<string>} */\n  var filenameList = [];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList;\n\n  if (!this.fileHeaderList) {\n    this.parseFileHeader();\n  }\n  fileHeaderList = this.fileHeaderList;\n\n  for (i = 0, il = fileHeaderList.length; i < il; ++i) {\n    filenameList[i] = fileHeaderList[i].filename;\n  }\n\n  return filenameList;\n};\n\n/**\n * @param {string} filename extract filename.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} decompressed data.\n */\nZlib.Unzip.prototype.decompress = function(filename, opt_params) {\n  /** @type {number} */\n  var index;\n\n  if (!this.filenameToIndex) {\n    this.parseFileHeader();\n  }\n  index = this.filenameToIndex[filename];\n\n  if (index === void 0) {\n    throw new Error(filename + ' not found');\n  }\n\n  return this.getFileData(index, opt_params);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Unzip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Unzip.prototype.decode = function(key, n) {\n  n ^= this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return n;\n};\n\n// common method\nZlib.Unzip.prototype.updateKeys = Zlib.Zip.prototype.updateKeys;\nZlib.Unzip.prototype.createDecryptionKey = Zlib.Zip.prototype.createEncryptionKey;\nZlib.Unzip.prototype.getByte = Zlib.Zip.prototype.getByte;\n\n/**\n * @fileoverview 雑多な関数群をまとめたモジュール実装.\n */\n\n\n/**\n * Byte String から Byte Array に変換.\n * @param {!string} str byte string.\n * @return {!Array.<number>} byte array.\n */\nZlib.Util.stringToByteArray = function(str) {\n  /** @type {!Array.<(string|number)>} */\n  var tmp = str.split('');\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  for (i = 0, il = tmp.length; i < il; i++) {\n    tmp[i] = (tmp[i].charCodeAt(0) & 0xff) >>> 0;\n  }\n\n  return tmp;\n};\n\n\n/**\n * @fileoverview Adler32 checksum 実装.\n */\n\n\n/**\n * Adler32 ハッシュ値の作成\n * @param {!(Array|Uint8Array|string)} array 算出に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32 = function(array) {\n  if (typeof(array) === 'string') {\n    array = Zlib.Util.stringToByteArray(array);\n  }\n  return Zlib.Adler32.update(1, array);\n};\n\n/**\n * Adler32 ハッシュ値の更新\n * @param {number} adler 現在のハッシュ値.\n * @param {!(Array|Uint8Array)} array 更新に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32.update = function(adler, array) {\n  /** @type {number} */\n  var s1 = adler & 0xffff;\n  /** @type {number} */\n  var s2 = (adler >>> 16) & 0xffff;\n  /** @type {number} array length */\n  var len = array.length;\n  /** @type {number} loop length (don't overflow) */\n  var tlen;\n  /** @type {number} array index */\n  var i = 0;\n\n  while (len > 0) {\n    tlen = len > Zlib.Adler32.OptimizationParameter ?\n      Zlib.Adler32.OptimizationParameter : len;\n    len -= tlen;\n    do {\n      s1 += array[i++];\n      s2 += s1;\n    } while (--tlen);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return ((s2 << 16) | s1) >>> 0;\n};\n\n/**\n * Adler32 最適化パラメータ\n * 現状では 1024 程度が最適.\n * @see http://jsperf.com/adler-32-simple-vs-optimized/3\n * @define {number}\n */\nZlib.Adler32.OptimizationParameter = 1024;\n\n\n\n\n/**\n * ビットストリーム\n * @constructor\n * @param {!(Array|Uint8Array)=} buffer output buffer.\n * @param {number=} bufferPosition start buffer pointer.\n */\nZlib.BitStream = function(buffer, bufferPosition) {\n  /** @type {number} buffer index. */\n  this.index = typeof bufferPosition === 'number' ? bufferPosition : 0;\n  /** @type {number} bit index. */\n  this.bitindex = 0;\n  /** @type {!(Array|Uint8Array)} bit-stream output buffer. */\n  this.buffer = buffer instanceof ( Uint8Array ) ?\n    buffer :\n    new ( Uint8Array )(Zlib.BitStream.DefaultBlockSize);\n\n  // 入力された index が足りなかったら拡張するが、倍にしてもダメなら不正とする\n  if (this.buffer.length * 2 <= this.index) {\n    throw new Error(\"invalid index\");\n  } else if (this.buffer.length <= this.index) {\n    this.expandBuffer();\n  }\n};\n\n/**\n * デフォルトブロックサイズ.\n * @const\n * @type {number}\n */\nZlib.BitStream.DefaultBlockSize = 0x8000;\n\n/**\n * expand buffer.\n * @return {!(Array|Uint8Array)} new buffer.\n */\nZlib.BitStream.prototype.expandBuffer = function() {\n  /** @type {!(Array|Uint8Array)} old buffer. */\n  var oldbuf = this.buffer;\n  /** @type {number} loop limiter. */\n  var il = oldbuf.length;\n  /** @type {!(Array|Uint8Array)} new buffer. */\n  var buffer =\n    new ( Uint8Array )(il << 1);\n\n  // copy buffer\n  {\n    buffer.set(oldbuf);\n  }\n\n  return (this.buffer = buffer);\n};\n\n\n/**\n * 数値をビットで指定した数だけ書き込む.\n * @param {number} number 書き込む数値.\n * @param {number} n 書き込むビット数.\n * @param {boolean=} reverse 逆順に書き込むならば true.\n */\nZlib.BitStream.prototype.writeBits = function(number, n, reverse) {\n  var buffer = this.buffer;\n  var index = this.index;\n  var bitindex = this.bitindex;\n\n  /** @type {number} current octet. */\n  var current = buffer[index];\n  /** @type {number} loop counter. */\n  var i;\n\n  /**\n   * 32-bit 整数のビット順を逆にする\n   * @param {number} n 32-bit integer.\n   * @return {number} reversed 32-bit integer.\n   * @private\n   */\n  function rev32_(n) {\n    return (Zlib.BitStream.ReverseTable[n & 0xFF] << 24) |\n      (Zlib.BitStream.ReverseTable[n >>> 8 & 0xFF] << 16) |\n      (Zlib.BitStream.ReverseTable[n >>> 16 & 0xFF] << 8) |\n      Zlib.BitStream.ReverseTable[n >>> 24 & 0xFF];\n  }\n\n  if (reverse && n > 1) {\n    number = n > 8 ?\n      rev32_(number) >> (32 - n) :\n      Zlib.BitStream.ReverseTable[number] >> (8 - n);\n  }\n\n  // Byte 境界を超えないとき\n  if (n + bitindex < 8) {\n    current = (current << n) | number;\n    bitindex += n;\n  // Byte 境界を超えるとき\n  } else {\n    for (i = 0; i < n; ++i) {\n      current = (current << 1) | ((number >> n - i - 1) & 1);\n\n      // next byte\n      if (++bitindex === 8) {\n        bitindex = 0;\n        buffer[index++] = Zlib.BitStream.ReverseTable[current];\n        current = 0;\n\n        // expand\n        if (index === buffer.length) {\n          buffer = this.expandBuffer();\n        }\n      }\n    }\n  }\n  buffer[index] = current;\n\n  this.buffer = buffer;\n  this.bitindex = bitindex;\n  this.index = index;\n};\n\n\n/**\n * ストリームの終端処理を行う\n * @return {!(Array|Uint8Array)} 終端処理後のバッファを byte array で返す.\n */\nZlib.BitStream.prototype.finish = function() {\n  var buffer = this.buffer;\n  var index = this.index;\n\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output;\n\n  // bitindex が 0 の時は余分に index が進んでいる状態\n  if (this.bitindex > 0) {\n    buffer[index] <<= 8 - this.bitindex;\n    buffer[index] = Zlib.BitStream.ReverseTable[buffer[index]];\n    index++;\n  }\n\n  // array truncation\n  {\n    output = buffer.subarray(0, index);\n  }\n\n  return output;\n};\n\n/**\n * 0-255 のビット順を反転したテーブル\n * @const\n * @type {!(Uint8Array|Array.<number>)}\n */\nZlib.BitStream.ReverseTable = (function(table) {\n  return table;\n})((function() {\n  /** @type {!(Array|Uint8Array)} reverse table. */\n  var table = new ( Uint8Array )(256);\n  /** @type {number} loop counter. */\n  var i;\n\n  // generate\n  for (i = 0; i < 256; ++i) {\n    table[i] = (function(n) {\n      var r = n;\n      var s = 7;\n\n      for (n >>>= 1; n; n >>>= 1) {\n        r <<= 1;\n        r |= n & 1;\n        --s;\n      }\n\n      return (r << s & 0xff) >>> 0;\n    })(i);\n  }\n\n  return table;\n})());\n\n/**\n * CRC32 ハッシュ値を取得\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.calc = function(data, pos, length) {\n  return Zlib.CRC32.update(data, 0, pos, length);\n};\n\n/**\n * CRC32ハッシュ値を更新\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number} crc CRC32.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.update = function(data, crc, pos, length) {\n  var table = Zlib.CRC32.Table;\n  var i = (typeof pos === 'number') ? pos : (pos = 0);\n  var il = (typeof length === 'number') ? length : data.length;\n\n  crc ^= 0xffffffff;\n\n  // loop unrolling for performance\n  for (i = il & 7; i--; ++pos) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos]) & 0xff];\n  }\n  for (i = il >> 3; i--; pos += 8) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos    ]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 1]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 2]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 3]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 4]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 5]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 6]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 7]) & 0xff];\n  }\n\n  return (crc ^ 0xffffffff) >>> 0;\n};\n\n/**\n * @param {number} num\n * @param {number} crc\n * @returns {number}\n */\nZlib.CRC32.single = function(num, crc) {\n  return (Zlib.CRC32.Table[(num ^ crc) & 0xff] ^ (num >>> 8)) >>> 0;\n};\n\n/**\n * @type {Array.<number>}\n * @const\n * @private\n */\nZlib.CRC32.Table_ = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,\n  0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n  0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n  0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,\n  0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n  0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,\n  0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,\n  0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,\n  0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,\n  0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n  0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,\n  0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n  0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n  0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,\n  0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,\n  0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n  0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n  0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,\n  0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n  0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,\n  0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\n/**\n * @type {!(Array.<number>|Uint32Array)} CRC-32 Table.\n * @const\n */\nZlib.CRC32.Table =   new Uint32Array(Zlib.CRC32.Table_) ;\n\n/**\n * @fileoverview Deflate (RFC1951) 実装.\n * Deflateアルゴリズム本体は Zlib.RawDeflate で実装されている.\n */\n\n/**\n * Zlib Deflate\n * @constructor\n * @param {!(Array|Uint8Array)} input 符号化する対象の byte array.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Deflate = function(input, opt_params) {\n  /** @type {!(Array|Uint8Array)} */\n  this.input = input;\n  /** @type {!(Array|Uint8Array)} */\n  this.output =\n    new ( Uint8Array )(Zlib.Deflate.DefaultBufferSize);\n  /** @type {Zlib.Deflate.CompressionType} */\n  this.compressionType = Zlib.Deflate.CompressionType.DYNAMIC;\n  /** @type {Zlib.RawDeflate} */\n  this.rawDeflate;\n  /** @type {Object} */\n  var rawDeflateOption = {};\n  /** @type {string} */\n  var prop;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n  }\n\n  // copy options\n  for (prop in opt_params) {\n    rawDeflateOption[prop] = opt_params[prop];\n  }\n\n  // set raw-deflate output buffer\n  rawDeflateOption['outputBuffer'] = this.output;\n\n  this.rawDeflate = new Zlib.RawDeflate(this.input, rawDeflateOption);\n};\n\n/**\n * @const\n * @type {number} デフォルトバッファサイズ.\n */\nZlib.Deflate.DefaultBufferSize = 0x8000;\n\n/**\n * @enum {number}\n */\nZlib.Deflate.CompressionType = Zlib.RawDeflate.CompressionType;\n\n/**\n * 直接圧縮に掛ける.\n * @param {!(Array|Uint8Array)} input target buffer.\n * @param {Object=} opt_params option parameters.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.compress = function(input, opt_params) {\n  return (new Zlib.Deflate(input, opt_params)).compress();\n};\n\n/**\n * Deflate Compression.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.prototype.compress = function() {\n  /** @type {Zlib.CompressionMethod} */\n  var cm;\n  /** @type {number} */\n  var cinfo;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n  /** @type {number} */\n  var fcheck;\n  /** @type {number} */\n  var fdict;\n  /** @type {number} */\n  var flevel;\n  /** @type {number} */\n  var adler;\n  /** @type {!(Array|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var pos = 0;\n\n  output = this.output;\n\n  // Compression Method and Flags\n  cm = Zlib.CompressionMethod.DEFLATE;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      cinfo = Math.LOG2E * Math.log(Zlib.RawDeflate.WindowSize) - 8;\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  cmf = (cinfo << 4) | cm;\n  output[pos++] = cmf;\n\n  // Flags\n  fdict = 0;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      switch (this.compressionType) {\n        case Zlib.Deflate.CompressionType.NONE: flevel = 0; break;\n        case Zlib.Deflate.CompressionType.FIXED: flevel = 1; break;\n        case Zlib.Deflate.CompressionType.DYNAMIC: flevel = 2; break;\n        default: throw new Error('unsupported compression type');\n      }\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  flg = (flevel << 6) | (fdict << 5);\n  fcheck = 31 - (cmf * 256 + flg) % 31;\n  flg |= fcheck;\n  output[pos++] = flg;\n\n  // Adler-32 checksum\n  adler = Zlib.Adler32(this.input);\n\n  this.rawDeflate.op = pos;\n  output = this.rawDeflate.compress();\n  pos = output.length;\n\n  {\n    // subarray 分を元にもどす\n    output = new Uint8Array(output.buffer);\n    // expand buffer\n    if (output.length <= pos + 4) {\n      this.output = new Uint8Array(output.length + 4);\n      this.output.set(output);\n      output = this.output;\n    }\n    output = output.subarray(0, pos + 4);\n  }\n\n  // adler32\n  output[pos++] = (adler >> 24) & 0xff;\n  output[pos++] = (adler >> 16) & 0xff;\n  output[pos++] = (adler >>  8) & 0xff;\n  output[pos++] = (adler      ) & 0xff;\n\n  return output;\n};\n\nconst isNode =\n    typeof process !== 'undefined' &&\n    process.versions != null &&\n    process.versions.node != null;\n\n\nconst crossFetch = isNode ? require(\"node-fetch\") : fetch;\n\nclass BrowserLocalFile {\n\n    constructor(blob) {\n        this.file = blob;\n    }\n\n    async read(position, length) {\n\n        const file = this.file;\n\n        return new Promise(function (fullfill, reject) {\n\n            const fileReader = new FileReader();\n\n            fileReader.onload = function (e) {\n                fullfill(fileReader.result);\n            };\n\n            fileReader.onerror = function (e) {\n                console.err(\"Error reading local file \" + file.name);\n                reject(null, fileReader);\n            };\n\n            if (position !== undefined) {\n                const blob = file.slice(position, position + length);\n                fileReader.readAsArrayBuffer(blob);\n\n            } else {\n                fileReader.readAsArrayBuffer(file);\n\n            }\n\n        });\n    }\n}\n\nconst isNode$1 = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n\nlet fs;\nlet fsOpen;\nlet fsRead;\n\nif (isNode$1) {\n    const util = require('util');\n    fs = require('fs');\n    fsOpen = fs && util.promisify(fs.open);\n    fsRead = fs && util.promisify(fs.read);\n}\n\nclass NodeLocalFile {\n\n    constructor(args) {\n        this.path = args.path;\n    }\n\n\n    async read(position, length) {\n\n        const buffer = Buffer.alloc(length);\n        const fd = await fsOpen(this.path, 'r');\n        const result = await fsRead(fd, buffer, 0, length, position);\n\n        fs.close(fd, function (error) {\n            // TODO Do something with error\n        });\n\n        //TODO -- compare result.bytesRead with length\n        const b = result.buffer;\n        const arrayBuffer = b.buffer.slice(b.byteOffset, b.byteOffset + b.byteLength);\n        return arrayBuffer\n    }\n}\n\nconst  isNode$2 = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n\nclass RemoteFile {\n\n    constructor(args) {\n        this.config = args;\n        this.url = mapUrl(args.path || args.url);\n    }\n\n\n    async read(position, length) {\n\n        length = Math.ceil(length);\n        const headers = this.config.headers || {};\n        const rangeString = \"bytes=\" + position + \"-\" + (position + length - 1);\n        headers['Range'] = rangeString;\n\n        let url = this.url.slice();    // slice => copy\n        if (isNode$2) {\n            headers['User-Agent'] = 'straw';\n        } else {\n            if (this.config.oauthToken) {\n                const token = resolveToken(this.config.oauthToken);\n                headers['Authorization'] = `Bearer ${token}`;\n            }\n            const isSafari = navigator.vendor.indexOf(\"Apple\") == 0 && /\\sSafari\\//.test(navigator.userAgent);\n            const isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n            const isAmazonV4Signed = this.url.indexOf(\"X-Amz-Signature\") > -1;\n\n            if (isChrome && !isAmazonV4Signed) {\n                url = addParameter(url, \"randomSeed\", Math.random().toString(36));\n            }\n        }\n\n        if (this.config.apiKey) {\n            url = addParameter(url, \"key\", this.config.apiKey);\n        }\n\n        const response = await crossFetch(url, {\n            method: 'GET',\n            headers: headers,\n            redirect: 'follow',\n            mode: 'cors',\n\n        });\n\n        const status = response.status;\n\n        if (status >= 400) {\n            console.error(`${status}  ${this.config.url}`);\n            const err = Error(response.statusText);\n            err.code = status;\n            throw err\n        } else {\n            return response.arrayBuffer();\n        }\n\n        /**\n         * token can be a string, a function that returns a string, or a function that returns a Promise for a string\n         * @param token\n         * @returns {Promise<*>}\n         */\n        async function resolveToken(token) {\n            if (typeof token === 'function') {\n                return await Promise.resolve(token())    // Normalize the result to a promise, since we don't know what the function returns\n            } else {\n                return token\n            }\n        }\n\n    }\n}\n\n\nfunction mapUrl(url) {\n\n    if (url.includes(\"//www.dropbox.com\")) {\n        return url.replace(\"//www.dropbox.com\", \"//dl.dropboxusercontent.com\");\n    } else if (url.startsWith(\"ftp://ftp.ncbi.nlm.nih.gov\")) {\n        return url.replace(\"ftp://\", \"https://\")\n    } else {\n        return url\n    }\n}\n\n\nfunction addParameter(url, name, value) {\n    const paramSeparator = url.includes(\"?\") ? \"&\" : \"?\";\n    return url + paramSeparator + name + \"=\" + value;\n}\n\nclass ThrottledFile {\n\n    constructor(file, rateLimiter) {\n        this.file = file;\n        this.rateLimiter = rateLimiter;\n    }\n\n\n    async read(position, length) {\n\n        const file = this.file;\n        const rateLimiter = this.rateLimiter;\n\n        return new Promise(function (fulfill, reject) {\n            rateLimiter.limiter(async function (f) {\n                try {\n                    const result = await f.read(position, length);\n                    fulfill(result);\n                } catch (e) {\n                    reject(e);\n                }\n            })(file);\n        })\n    }\n}\n\nclass RateLimiter {\n\n    constructor(wait) {\n        this.wait = wait === undefined ? 100 : wait;\n\n        this.isCalled = false;\n        this.calls = [];\n    }\n\n\n    limiter(fn) {\n\n        const self = this;\n\n        let caller = function () {\n\n            if (self.calls.length && !self.isCalled) {\n                self.isCalled = true;\n                self.calls.shift().call();\n                setTimeout(function () {\n                    self.isCalled = false;\n                    caller();\n                }, self.wait);\n            }\n        };\n\n        return function () {\n            self.calls.push(fn.bind(this, ...arguments));\n            caller();\n        };\n    }\n\n}\n\nclass BufferedFile {\n\n    constructor(args) {\n        this.file = args.file;\n        this.size = args.size || 64000;\n        this.position = 0;\n        this.bufferStart = 0;\n        this.bufferLength = 0;\n        this.buffer = undefined;\n    }\n\n\n    async read(position, length) {\n\n        const start = position;\n        const end = position + length;\n        const bufferStart = this.bufferStart;\n        const bufferEnd = this.bufferStart + this.bufferLength;\n\n\n        if (length > this.size) {\n            // Request larger than max buffer size,  pass through to underlying file\n            //console.log(\"0\")\n            this.buffer = undefined;\n            this.bufferStart = 0;\n            this.bufferLength = 0;\n            return this.file.read(position, length)\n        }\n\n        if (start >= bufferStart && end <= bufferEnd) {\n            // Request within buffer bounds\n            //console.log(\"1\")\n            const sliceStart = start - bufferStart;\n            const sliceEnd = sliceStart + length;\n            return this.buffer.slice(sliceStart, sliceEnd)\n        }\n\n        else if (start < bufferStart && end > bufferStart) {\n            // Overlap left, here for completness but this is an unexpected case in straw.  We don't adjust the buffer.\n            //console.log(\"2\")\n            const l1 = bufferStart - start;\n            const a1 = await this.file.read(position, l1);\n            const l2 = length - l1;\n            if (l2 > 0) {\n                //this.buffer = await this.file.read(bufferStart, this.size)\n                const a2 = this.buffer.slice(0, l2);\n                return concatBuffers(a1, a2)\n            } else {\n                return a1\n            }\n\n        }\n\n        else if (start < bufferEnd && end > bufferEnd) {\n            // Overlap right\n            // console.log(\"3\")\n            const l1 = bufferEnd - start;\n            const sliceStart = this.bufferLength - l1;\n            const a1 = this.buffer.slice(sliceStart, this.bufferLength);\n\n            const l2 = length - l1;\n            if (l2 > 0) {\n                try {\n                    this.buffer = await this.file.read(bufferEnd, this.size);\n                    this.bufferStart = bufferEnd;\n                    this.bufferLength = this.buffer.byteLength;\n                    const a2 = this.buffer.slice(0, l2);\n                    return concatBuffers(a1, a2)\n                } catch (e) {\n                    // A \"unsatisfiable range\" error is expected here if we overlap past the end of file\n                    if (e.code && e.code === 416) {\n                        return a1\n                    }\n                    else {\n                        throw e\n                    }\n                }\n\n            } else {\n                return a1\n            }\n\n        }\n\n        else {\n            // No overlap with buffer\n            // console.log(\"4\")\n            this.buffer = await this.file.read(position, this.size);\n            this.bufferStart = position;\n            this.bufferLength = this.buffer.byteLength;\n            return this.buffer.slice(0, length)\n        }\n\n    }\n\n}\n\n/**\n * concatenates 2 array buffers.\n * Credit: https://gist.github.com/72lions/4528834\n *\n * @private\n * @param {ArrayBuffers} buffer1 The first buffer.\n * @param {ArrayBuffers} buffer2 The second buffer.\n * @return {ArrayBuffers} The new ArrayBuffer created out of the two.\n */\nvar concatBuffers = function (buffer1, buffer2) {\n    var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n    tmp.set(new Uint8Array(buffer1), 0);\n    tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n    return tmp.buffer;\n};\n\n// TODO -- big endian\n\nconst BinaryParser = function (dataView, littleEndian) {\n\n    this.littleEndian = littleEndian !== undefined ? littleEndian : true;\n    this.position = 0;\n    this.view = dataView;\n    this.length = dataView.byteLength;\n};\n\nBinaryParser.prototype.available = function () {\n    return this.length - this.position;\n};\n\nBinaryParser.prototype.remLength = function () {\n    return this.length - this.position;\n};\n\nBinaryParser.prototype.hasNext = function () {\n    return this.position < this.length - 1;\n};\n\nBinaryParser.prototype.getByte = function () {\n    var retValue = this.view.getUint8(this.position, this.littleEndian);\n    this.position++;\n    return retValue;\n};\n\nBinaryParser.prototype.getShort = function () {\n\n    var retValue = this.view.getInt16(this.position, this.littleEndian);\n    this.position += 2;\n    return retValue;\n};\n\nBinaryParser.prototype.getUShort = function () {\n\n    // var byte1 = this.getByte(),\n    //     byte2 = this.getByte(),\n    //     retValue = ((byte2 << 24 >>> 16) + (byte1 << 24 >>> 24));\n    //     return retValue;\n\n    //\n    var retValue = this.view.getUint16(this.position, this.littleEndian);\n    this.position += 2;\n    return retValue;\n};\n\n\nBinaryParser.prototype.getInt = function () {\n\n    var retValue = this.view.getInt32(this.position, this.littleEndian);\n    this.position += 4;\n    return retValue;\n};\n\n\nBinaryParser.prototype.getUInt = function () {\n    var retValue = this.view.getUint32(this.position, this.littleEndian);\n    this.position += 4;\n    return retValue;\n};\n\nBinaryParser.prototype.getLong = function () {\n\n    // DataView doesn't support long. So we'll try manually\n\n    var b = [];\n    b[0] = this.view.getUint8(this.position);\n    b[1] = this.view.getUint8(this.position + 1);\n    b[2] = this.view.getUint8(this.position + 2);\n    b[3] = this.view.getUint8(this.position + 3);\n    b[4] = this.view.getUint8(this.position + 4);\n    b[5] = this.view.getUint8(this.position + 5);\n    b[6] = this.view.getUint8(this.position + 6);\n    b[7] = this.view.getUint8(this.position + 7);\n\n    var value = 0;\n    if (this.littleEndian) {\n        for (var i = b.length - 1; i >= 0; i--) {\n            value = (value * 256) + b[i];\n        }\n    } else {\n        for (var i = 0; i < b.length; i++) {\n            value = (value * 256) + b[i];\n        }\n    }\n\n\n    this.position += 8;\n    return value;\n};\n\nBinaryParser.prototype.getString = function (len) {\n\n    var s = \"\";\n    var c;\n    while ((c = this.view.getUint8(this.position++)) != 0) {\n        s += String.fromCharCode(c);\n        if (len && s.length == len) break;\n    }\n    return s;\n};\n\nBinaryParser.prototype.getFixedLengthString = function (len) {\n\n    var s = \"\";\n    var i;\n    var c;\n    for (i = 0; i < len; i++) {\n        c = this.view.getUint8(this.position++);\n        if (c > 0) {\n            s += String.fromCharCode(c);\n        }\n    }\n    return s;\n};\n\nBinaryParser.prototype.getFixedLengthTrimmedString = function (len) {\n\n    var s = \"\";\n    var i;\n    var c;\n    for (i = 0; i < len; i++) {\n        c = this.view.getUint8(this.position++);\n        if (c > 32) {\n            s += String.fromCharCode(c);\n        }\n    }\n    return s;\n};\n\nBinaryParser.prototype.getFloat = function () {\n\n    var retValue = this.view.getFloat32(this.position, this.littleEndian);\n    this.position += 4;\n    return retValue;\n\n\n};\n\nBinaryParser.prototype.getDouble = function () {\n\n    var retValue = this.view.getFloat64(this.position, this.littleEndian);\n    this.position += 8;\n    return retValue;\n};\n\nBinaryParser.prototype.skip = function (n) {\n\n    this.position += n;\n    return this.position;\n};\n\n\n/**\n * Return a bgzip (bam and tabix) virtual pointer\n * TODO -- why isn't 8th byte used ?\n * @returns {*}\n */\nBinaryParser.prototype.getVPointer = function () {\n\n    var position = this.position,\n        offset = (this.view.getUint8(position + 1) << 8) | (this.view.getUint8(position)),\n        byte6 = ((this.view.getUint8(position + 6) & 0xff) * 0x100000000),\n        byte5 = ((this.view.getUint8(position + 5) & 0xff) * 0x1000000),\n        byte4 = ((this.view.getUint8(position + 4) & 0xff) * 0x10000),\n        byte3 = ((this.view.getUint8(position + 3) & 0xff) * 0x100),\n        byte2 = ((this.view.getUint8(position + 2) & 0xff)),\n        block = byte6 + byte5 + byte4 + byte3 + byte2;\n    this.position += 8;\n\n    //       if (block == 0 && offset == 0) {\n    //           return null;\n    //       } else {\n    return new VPointer(block, offset);\n    //       }\n};\n\n\nfunction VPointer(block, offset) {\n    this.block = block;\n    this.offset = offset;\n}\n\nVPointer.prototype.isLessThan = function (vp) {\n    return this.block < vp.block ||\n        (this.block === vp.block && this.offset < vp.offset);\n};\n\nVPointer.prototype.isGreaterThan = function (vp) {\n    return this.block > vp.block ||\n        (this.block === vp.block && this.offset > vp.offset);\n};\n\nVPointer.prototype.print = function () {\n    return \"\" + this.block + \":\" + this.offset;\n};\n\nclass MatrixZoomData {\n\n    constructor(chr1, chr2) {\n\n        this.chr1 = chr1;    // chromosome index\n        this.chr2 = chr2;\n    }\n\n    getKey () {\n        return this.chr1.name + \"_\" + this.chr2.name + \"_\" + this.zoom.unit + \"_\" + this.zoom.binSize;\n    }\n\n    getBlockNumbers(region1, region2, version) {\n\n        // Verify region chromosomes and swap if neccessary\n        if(region1.chr == this.chr2 && region2.chr === this.chr1) {\n            const tmp = region1;\n            region1 = region2;\n            region2 = tmp;\n        }\n\n        const sameChr = this.chr1 === this.chr2;\n        const binsize = this.zoom.binSize;\n        const blockBinCount = this.blockBinCount;\n        const blockColumnCount = this.blockColumnCount;\n        return (version < 9 || !sameChr) ? getBlockNumbersV8() : getBlockNumbersV9();\n\n        function getBlockNumbersV8()\n        {\n            const x1 = region1.start / binsize;\n            const x2 = region1.end / binsize;\n            const y1 = region2.start / binsize;\n            const y2 = region2.end / binsize;\n\n            const col1 = Math.floor(x1 / blockBinCount);\n            const col2 = Math.floor((x2 - 1) / blockBinCount);\n            const row1 = Math.floor(y1 / blockBinCount);\n            const row2 = Math.floor((y2 - 1) / blockBinCount);\n\n            const blockNumbers = [];\n            for (let row = row1; row <= row2; row++) {\n                for (let column = col1; column <= col2; column++) {\n                    let blockNumber;\n                    if (sameChr && row < column) {\n                        blockNumber = column * blockColumnCount + row;\n                    } else {\n                        blockNumber = row * blockColumnCount + column;\n                    }\n                    if (!blockNumbers.includes(blockNumber)) {  // possible from transposition\n                        blockNumbers.push(blockNumber);\n                    }\n                }\n            }\n            return blockNumbers\n        }\n\n        function getBlockNumbersV9()\n        {\n\n            const binX1 = region1.start / binsize;\n            const binX2 = region1.end / binsize;\n            const binY1 = region2.start / binsize;\n            const binY2 = region2.end / binsize;\n\n            // PAD = positionAlongDiagonal (~projected)\n            // Depth is axis perpendicular to diagonal; nearer means closer to diagonal\n            const translatedLowerPAD = Math.floor((binX1 + binY1) / 2 / blockBinCount);\n            const translatedHigherPAD = Math.floor((binX2 + binY2) / 2 / blockBinCount);\n            const translatedNearerDepth = Math.floor(Math.log2(1 + Math.abs(binX1 - binY2) / Math.sqrt(2) / blockBinCount));\n            const translatedFurtherDepth = Math.floor(Math.log2(1 + Math.abs(binX2 - binY1) / Math.sqrt(2) / blockBinCount));\n\n            // because code above assume above diagonal; but we could be below diagonal\n            const containsDiagonal = (binX2 - binY1) * (binX1 - binY2) < 0;   // i.e. sign of (x-y) opposite on 2 corners\n            const nearerDepth = containsDiagonal ? 0 : Math.min(translatedNearerDepth, translatedFurtherDepth);\n            const furtherDepth = Math.max(translatedNearerDepth, translatedFurtherDepth);\n\n            const blockNumbers = [];\n            for (let depth = nearerDepth; depth <= furtherDepth; depth++) {\n                for (let pad = translatedLowerPAD; pad <= translatedHigherPAD; pad++) {\n                    const block_number = depth * blockColumnCount + pad;\n                    blockNumbers.push(block_number);\n                }\n            }\n            return blockNumbers\n        }\n    }\n\n    static parseMatrixZoomData(chr1, chr2, dis) {\n\n        const zd = new MatrixZoomData(chr1, chr2);\n\n        const unit = dis.getString();\n        const zoomIndex = dis.getInt();\n        const sumCounts = dis.getFloat();\n        const occupiedCellCount = dis.getFloat();\n        const stdDev = dis.getFloat();\n        const percent95 = dis.getFloat();\n        const binSize = dis.getInt();\n        zd. blockBinCount = dis.getInt();\n        zd. blockColumnCount = dis.getInt();\n        const nBlocks = dis.getInt();\n\n        zd. zoom = {index: zoomIndex, unit: unit, binSize: binSize};\n\n        zd.blockIndex = new StaticBlockIndex(nBlocks, dis);\n\n        const nBins1 = (chr1.size / binSize);\n        const nBins2 = (chr2.size / binSize);\n        const avgCount = (sumCounts / nBins1) / nBins2;   // <= trying to avoid overflows\n\n        zd.averageCount = avgCount;\n        zd.sumCounts = sumCounts;\n        zd.stdDev = stdDev;\n        zd.occupiedCellCount = occupiedCellCount;\n        zd.percent95 = percent95;\n\n        return zd;\n    }\n}\n\n\nclass StaticBlockIndex {\n\n    constructor(nBlocks, dis) {\n        this.blockIndex = {};\n        while (nBlocks-- > 0) {\n            const blockNumber = dis.getInt();\n            const filePosition = dis.getLong();\n            const size = dis.getInt();\n            this.blockIndex[blockNumber] = {filePosition, size};\n        }\n    }\n\n    getBlockIndexEntry(blockNumber) {\n        return this.blockIndex[blockNumber];\n    }\n}\n\nclass Matrix {\n\n    constructor(chr1, chr2, zoomDataList) {\n        this.chr1 = chr1;\n        this.chr2 = chr2;\n        this.bpZoomData = [];\n        this.fragZoomData = [];\n        for (let zd of zoomDataList) {\n            if (zd.zoom.unit === \"BP\") {\n                this.bpZoomData.push(zd);\n            } else {\n                this.fragZoomData.push(zd);\n            }\n        }\n    }\n\n    /**\n     * Find the best zoom level for the given bin size\n     * @param binSize\n     * @param unit\n     * @returns {number}\n     */\n    findZoomForResolution(binSize, unit) {\n        const zdArray = \"FRAG\" === unit ? this.fragZoomData : this.bpZoomData;\n        for (let i = 1; i < zdArray.length; i++) {\n            var zd = zdArray[i];\n            if (zd.zoom.binSize < binSize) {\n                return i - 1\n            }\n        }\n        return zdArray.length - 1\n    }\n\n    /**\n     * Fetch zoom data by bin size.  If no matching level exists return undefined.\n     *\n     * @param unit\n     * @param binSize\n     * @param zoom\n     * @returns {undefined|*}\n     */\n    getZoomData(binSize, unit) {\n        unit = unit || \"BP\";\n        const zdArray = unit === \"BP\" ? this.bpZoomData : this.fragZoomData;\n        for (let i = 0; i < zdArray.length; i++) {\n            var zd = zdArray[i];\n            if (binSize === zd.zoom.binSize) {\n                return zd\n            }\n        }\n        return undefined\n    }\n\n    /**\n     * Return zoom data by resolution index.\n     * @param index\n     * @param unit\n     * @returns {*}\n     */\n    getZoomDataByIndex(index, unit) {\n        const zdArray = \"FRAG\" === unit ? this.fragZoomData : this.bpZoomData;\n        return zdArray[index]\n    }\n\n    static getKey(chrIdx1, chrIdx2) {\n        if (chrIdx1 > chrIdx2) {\n            const tmp = chrIdx1;\n            chrIdx1 = chrIdx2;\n            chrIdx2 = tmp;\n        }\n        return `${chrIdx1}_${chrIdx2}`;\n    }\n\n    static parseMatrix(data, chromosomes) {\n\n        const dis = new BinaryParser(new DataView(data));\n        const c1 = dis.getInt();     // Should equal chrIdx1\n        const c2 = dis.getInt();     // Should equal chrIdx2\n\n        // TODO validate this\n        const chr1 = chromosomes[c1];\n        const chr2 = chromosomes[c2];\n\n        // # of resolution levels (bp and frags)\n        let nResolutions = dis.getInt();\n        const zdList = [];\n\n        while (nResolutions-- > 0) {\n            const zd = MatrixZoomData.parseMatrixZoomData(chr1, chr2, dis);\n            zdList.push(zd);\n        }\n        return new Matrix(c1, c2, zdList);\n    }\n\n}\n\nclass ContactRecord {\n\n    constructor(bin1, bin2, counts) {\n        this.bin1 = bin1;\n        this.bin2 = bin2;\n        this.counts = counts;\n    };\n\n    getKey() {\n        return \"\" + this.bin1 + \"_\" + this.bin2;\n    }\n}\n\nclass LRU {\n    constructor(max = 10) {\n        this.max = max;\n        this.map = new Map();\n    }\n\n    get(key) {\n        let item = this.map.get(key);\n        if (item) {\n            // refresh key\n            this.map.delete(key);\n            this.map.set(key, item);\n        }\n        return item;\n    }\n\n    set(key, val) {\n        // refresh key\n        if (this.map.has(key)) this.map.delete(key);\n        // evict oldest\n        else if (this.map.size === this.max) {\n            this.map.delete(this.first());\n        }\n        this.map.set(key, val);\n    }\n\n    has(key) {\n        return this.map.has(key);\n    }\n\n    clear() {\n        this.map.clear();\n    }\n\n    first() {\n        return this.map.keys().next().value;\n    }\n}\n\n/*\n *  The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n * associated documentation files (the \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial\n * portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\nconst DOUBLE = 8;\n\nclass NormalizationVector {\n\n    constructor(file, filePosition, nValues, dataType) {\n        this.file = file;\n        this.filePosition = filePosition;\n        this.nValues = nValues;\n        this.dataType = dataType;\n        this.cache = undefined;\n    }\n\n    async getValues(start, end) {\n\n        if(!this.cache || start < this.cache.start || end > this.cache.end) {\n            const adjustedStart = Math.max(0, start - 1000);\n            const adjustedEnd = Math.min(this.nValues, end + 1000);\n            const startPosition = this.filePosition + adjustedStart * this.dataType;\n            const n = adjustedEnd - adjustedStart;\n            const sizeInBytes = n  * this.dataType;\n            const data = await this.file.read(startPosition, sizeInBytes);\n            if (!data) {\n                return undefined;\n            }\n            const parser = new BinaryParser(new DataView(data));\n\n            const values = [];\n            for (let i = 0; i < n; i++) {\n                values[i] = this.dataType === DOUBLE ? parser.getDouble() : parser.getFloat();\n\n            }\n            this.cache = {\n                start: adjustedStart,\n                end: adjustedEnd,\n                values: values\n            };\n        }\n\n        const sliceStart = start - this.cache.start;\n        const sliceEnd = sliceStart + (end - start);\n        return this.cache.values.slice(sliceStart, sliceEnd);\n    }\n\n    getKey() {\n        return NormalizationVector.getKey(this.type, this.chrIdx, this.unit, this.resolution);\n    }\n\n\n    static getNormalizationVectorKey(type, chrIdx, unit, resolution) {\n        return type + \"_\" + chrIdx + \"_\" + unit + \"_\" + resolution;\n    }\n}\n\nconst isNode$3 = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\nconst Short_MIN_VALUE = -32768;\nconst DOUBLE$1 = 8;\nconst FLOAT = 4;\nconst INT = 4;\nconst GoogleRateLimiter = new RateLimiter(100);\n\n\nclass HicFile {\n\n    constructor(args) {\n\n        this.config = args;\n\n        this.loadFragData = args.loadFragData;\n        this.fragmentSitesCache = {};\n        this.normVectorCache = new LRU(10);\n        this.normalizationTypes = ['NONE'];\n        this.matrixCache = new LRU(10);\n        this.blockCache = new BlockCache();\n\n        // args may specify an io.File object, a local path (Node only), or a url\n        if (args.file) {\n            this.file = args.file;\n        } else if (args.blob) {\n            this.file = new BrowserLocalFile(args.blob);\n        } else if (args.url || (args.path && !isNode$3)) {\n            this.url = args.url || this.path;\n            this.remote = true;\n\n            // Google drive must be rate limited.  Perhaps all remote files should be rate limited?\n            const remoteFile = new RemoteFile(args);\n            if (isGoogleDrive(this.url)) {\n                this.file = new ThrottledFile(remoteFile, GoogleRateLimiter);\n            } else {\n                this.file = remoteFile;\n            }\n        } else if (args.path) {\n            // path argument, assumed local file\n            this.file = new NodeLocalFile({path: args.path});\n\n        } else {\n            throw Error(\"Arguments must include file, blob, url, or path\")\n        }\n    }\n\n\n    async init() {\n\n        if (this.initialized) {\n            return;\n        } else {\n            await this.readHeaderAndFooter();\n            // Footer is read with header\n            //await this.readFooter()\n            this.initialized = true;\n        }\n    }\n\n    async getVersion() {\n        if (this.version === undefined) {\n            const data = await this.file.read(0, 128);\n            if (!data) {\n                return undefined;\n            }\n            const binaryParser = new BinaryParser(new DataView(data));\n            this.magic = binaryParser.getString();\n            this.version = binaryParser.getInt();\n            return this.version\n        } else {\n            return this.version\n        }\n    }\n\n    async getMetaData() {\n        await this.init();\n        return this.meta\n    }\n\n    async readHeaderAndFooter() {\n\n        // Read initial fields magic, version, and footer position\n        let data = await this.file.read(0, 16);\n        if (!data || data.byteLength === 0) {\n            throw Error(\"File content is empty\")\n        }\n        let binaryParser = new BinaryParser(new DataView(data));\n        this.magic = binaryParser.getString();\n        this.version = binaryParser.getInt();\n        if (this.version < 5) {\n            throw Error(\"Unsupported hic version: \" + this.version)\n        }\n        this.footerPosition = binaryParser.getLong();\n\n        // Read footer and determine file position for body section (i.e. end of header)\n\n        await this.readFooter();\n\n        const bodyPostion = Object.values(this.masterIndex).reduce((min, currentValue) => {\n            return Math.min(min, currentValue.start)\n        }, Number.MAX_VALUE);\n\n        const remainingSize = bodyPostion - 16;\n        data = await this.file.read(16, remainingSize);\n        binaryParser = new BinaryParser(new DataView(data));\n\n        this.genomeId = binaryParser.getString();\n\n        if (this.version >= 9) {\n            this.normVectorIndexPosition = binaryParser.getLong();\n            this.normVectorIndexSize = binaryParser.getLong();\n        }\n\n        this.attributes = {};\n        let nAttributes = binaryParser.getInt();\n        while (nAttributes-- > 0) {\n            this.attributes[binaryParser.getString()] = binaryParser.getString();\n        }\n\n        this.chromosomes = [];\n        this.chromosomeIndexMap = {};\n        let nChrs = binaryParser.getInt();\n        let i = 0;\n        while (nChrs-- > 0) {\n            const chr = {\n                index: i,\n                name: binaryParser.getString(),\n                size: this.version < 9 ? binaryParser.getInt() : binaryParser.getLong()\n            };\n            if (chr.name.toLowerCase() === \"all\") {\n                this.wholeGenomeChromosome = chr;\n                this.wholeGenomeResolution = Math.round(chr.size * (1000 / 500));    // Hardcoded in juicer\n            }\n            this.chromosomes.push(chr);\n            this.chromosomeIndexMap[chr.name] = chr.index;\n            i++;\n        }\n\n        this.bpResolutions = [];\n        let nBpResolutions = binaryParser.getInt();\n        while (nBpResolutions-- > 0) {\n            this.bpResolutions.push(binaryParser.getInt());\n        }\n\n        if (this.loadFragData) {\n            this.fragResolutions = [];\n            let nFragResolutions = binaryParser.getInt();\n            if (nFragResolutions > 0) {\n                while (nFragResolutions-- > 0) {\n                    this.fragResolutions.push(binaryParser.getInt());\n                }\n\n                // this.sites = [];\n                // for(let i=0; i<this.chromosomes.length - 1; i++) {\n                //     const chrSites = [];\n                //     this.sites.push(chrSites);\n                //     let nSites = binaryParser.getInt();\n                //     console.log(nSites);\n                //     for(let s=0; s<nSites; s++) {\n                //         chrSites.push(binaryParser.getInt());\n                //     }\n                // }\n            }\n        }\n\n        // Build lookup table for well-known chr aliases\n        this.chrAliasTable = {};\n        for (let chrName of Object.keys(this.chromosomeIndexMap)) {\n\n            if (chrName.startsWith(\"chr\")) {\n                this.chrAliasTable[chrName.substr(3)] = chrName;\n            } else if (chrName === \"MT\") {\n                this.chrAliasTable[\"chrM\"] = chrName;\n            } else {\n                this.chrAliasTable[\"chr\" + chrName] = chrName;\n            }\n        }\n\n\n        // Meta data for the API\n        this.meta = {\n            \"version\": this.version,\n            \"genome\": this.genomeId,\n            \"chromosomes\": this.chromosomes,\n            \"resolutions\": this.bpResolutions,\n        };\n\n\n    }\n\n    async readFooter() {\n\n\n        const skip = this.version < 9 ? 8 : 12;\n        let data = await this.file.read(this.footerPosition, skip);\n        if (!data) {\n            return null;\n        }\n\n        let binaryParser = new BinaryParser(new DataView(data));\n        const nBytes = this.version < 9 ? binaryParser.getInt() : binaryParser.getLong();  // Total size, master index + expected values\n        let nEntries = binaryParser.getInt();\n\n        // Estimate the size of the master index. String length of key is unknown, be conservative (100 bytes)\n\n        const miSize = nEntries * (100 + 64 + 32);\n        data = await this.file.read(this.footerPosition + skip, Math.min(miSize, nBytes));\n\n        binaryParser = new BinaryParser(new DataView(data));\n\n        this.masterIndex = {};\n        while (nEntries-- > 0) {\n            const key = binaryParser.getString();\n            const pos = binaryParser.getLong();\n            const size = binaryParser.getInt();\n            this.masterIndex[key] = {start: pos, size: size};\n        }\n\n        this.expectedValueVectors = {};\n\n        // Expected values\n        // const nExpValues = binaryParser.readInt();\n        // while (nExpValues-- > 0) {\n        //     type = \"NONE\";\n        //     unit = binaryParser.getString();\n        //     binSize = binaryParser.getInt();\n        //     nValues = binaryParser.getInt();\n        //     values = [];\n        //     while (nValues-- > 0) {\n        //         values.push(binaryParser.getDouble());\n        //     }\n        //\n        //     nChrScaleFactors = binaryParser.getInt();\n        //     normFactors = {};\n        //     while (nChrScaleFactors-- > 0) {\n        //         normFactors[binaryParser.getInt()] = binaryParser.getDouble();\n        //     }\n        //\n        //     // key = unit + \"_\" + binSize + \"_\" + type;\n        //     //  NOT USED YET SO DON'T STORE\n        //     //  dataset.expectedValueVectors[key] =\n        //     //      new ExpectedValueFunction(type, unit, binSize, values, normFactors);\n        // }\n\n        // normalized expected values start after expected value.  Add 4 for\n        if (this.version > 5) {\n            const skip = this.version < 9 ? 4 : 8;\n            this.normExpectedValueVectorsPosition = this.footerPosition + skip + nBytes;\n        }\n        return this;\n    };\n\n    async printIndexStats() {\n\n        let totalSize = 0;\n        let maxSize = 0;\n        await await this.init();\n        for (let key of Object.keys(this.masterIndex)) {\n            const entry = this.masterIndex[key];\n            //  console.log(`${key}\\t${entry.start}\\t${entry.size}`)\n            totalSize += entry.size;\n            if (entry.size > maxSize) {\n                maxSize = entry.size;\n            }\n        }\n        // console.log(`Total size  = ${totalSize}`);\n    }\n\n    async getMatrix(chrIdx1, chrIdx2) {\n        const key = Matrix.getKey(chrIdx1, chrIdx2);\n        if (this.matrixCache.has(key)) {\n            return this.matrixCache.get(key);\n        } else {\n            const matrix = await this.readMatrix(chrIdx1, chrIdx2);\n            this.matrixCache.set(key, matrix);\n            return matrix;\n        }\n    }\n\n    async readMatrix(chrIdx1, chrIdx2) {\n\n        await this.init();\n\n        if (chrIdx1 > chrIdx2) {\n            const tmp = chrIdx1;\n            chrIdx1 = chrIdx2;\n            chrIdx2 = tmp;\n        }\n\n        const key = Matrix.getKey(chrIdx1 , chrIdx2);\n        const idx = this.masterIndex[key];\n        if (!idx) {\n            return undefined\n        }\n        const data = await this.file.read(idx.start, idx.size);\n        if (!data) {\n            return undefined\n        }\n\n        return Matrix.parseMatrix(data, this.chromosomes);\n\n    }\n\n    async getContactRecords(normalization, region1, region2, units, binsize, allRecords = false) {\n\n        await this.init();\n\n        const idx1 = this.chromosomeIndexMap[this.getFileChrName(region1.chr)];\n        const idx2 = this.chromosomeIndexMap[this.getFileChrName(region2.chr)];\n\n        const transpose = (idx1 > idx2) || (idx1 === idx2 && region1.start >= region2.end);\n        if (transpose) {\n            const tmp = region1;\n            region1 = region2;\n            region2 = tmp;\n        }\n\n        const blocks = await this.getBlocks(region1, region2, units, binsize);\n        if (!blocks || blocks.length === 0) {\n            return []\n        }\n\n        const contactRecords = [];\n        const x1 = region1.start / binsize;\n        const x2 = region1.end / binsize;\n        const y1 = region2.start / binsize;\n        const y2 = region2.end / binsize;\n        const nvX1 = Math.floor(x1);\n        const nvX2 = Math.ceil(x2);\n        const nvY1 = Math.floor(y1);\n        const nvY2 = Math.ceil(y2);\n        for (let block of blocks) {\n            if (block) { // An undefined block is most likely caused by a base pair range outside the chromosome\n                let normVector1;\n                let normVector2;\n                let isNorm = normalization && normalization !== \"NONE\";\n                const chr1 = this.getFileChrName(region1.chr);\n                const chr2 = this.getFileChrName(region2.chr);\n                if (isNorm) {\n                    const nv1 = await this.getNormalizationVector(normalization, chr1, units, binsize);\n                    const nv2 = (chr1 === chr2) ? nv1 : await this.getNormalizationVector(normalization, chr2, units, binsize);\n\n                    if (nv1 && nv2) {\n                        normVector1 = await nv1.getValues(nvX1, nvX2);\n                        normVector2 = await nv2.getValues(nvY1, nvY2);\n                    } else {\n                        isNorm = false;\n                        // Raise message and switch pulldown\n                    }\n                }\n\n                for (let rec of block.records) {\n                    if (allRecords || (rec.bin1 >= x1 && rec.bin1 < x2 && rec.bin2 >= y1 && rec.bin2 < y2)) {\n                        if (isNorm) {\n                            const x = rec.bin1;\n                            const y = rec.bin2;\n                            const nvnv = normVector1[x - nvX1] * normVector2[y - nvY1];\n                            if (nvnv !== 0 && !isNaN(nvnv)) {\n                                const counts = rec.counts / nvnv;\n                                contactRecords.push(new ContactRecord(x, y, counts));\n                            }\n                        } else {\n                            contactRecords.push(rec);\n                        }\n                    }\n                }\n            }\n        }\n\n        return contactRecords;\n    }\n\n    async getBlocks(region1, region2, unit, binSize) {\n\n        await this.init();\n        const chr1 = this.getFileChrName(region1.chr);\n        const chr2 = this.getFileChrName(region2.chr);\n        const idx1 = this.chromosomeIndexMap[chr1];\n        const idx2 = this.chromosomeIndexMap[chr2];\n\n        if (idx1 === undefined) {\n            return []\n        }\n        if (idx2 === undefined) {\n            return []\n        }\n\n        const matrix = await this.getMatrix(idx1, idx2);\n        if (!matrix) {\n            return []\n        }\n\n        const zd = matrix.getZoomData(binSize, unit);\n        if (!zd) {\n            let msg = `No data avalailble for resolution: ${binSize}  for map ${region1.chr}-${region2.chr}`;\n            throw new Error(msg)\n        }\n\n        const blockNumbers = zd.getBlockNumbers(region1, region2, this.version);\n\n        const blocks = [];\n        const blockNumbersToQuery = [];\n        for (let num of blockNumbers) {\n            if (this.blockCache.has(binSize, num)) {\n                blocks.push(this.blockCache.get(binSize, num));\n            } else {\n                blockNumbersToQuery.push(num);\n            }\n        }\n\n        const promises = blockNumbersToQuery.map(blockNumber => this.readBlock(blockNumber, zd));\n        const newBlocks = await Promise.all(promises);\n        for (let block of newBlocks) {\n            if (block) {\n                this.blockCache.set(binSize, block.blockNumber, block);\n            }\n        }\n        return blocks.concat(newBlocks);\n    }\n\n    async readBlock(blockNumber, zd) {\n\n        const idx = await zd.blockIndex.getBlockIndexEntry(blockNumber);\n\n        if (!idx) {\n            return undefined\n        } else {\n            let data = await this.file.read(idx.filePosition, idx.size);\n            if (!data) {\n                return undefined;\n            }\n\n            const inflate = new Zlib.Inflate(new Uint8Array(data));\n            const plain = inflate.decompress();\n            //var plain = zlib.inflateSync(Buffer.from(data))   //.decompress();\n            data = plain.buffer;\n\n            const parser = new BinaryParser(new DataView(data));\n            const nRecords = parser.getInt();\n            const records = [];\n\n            if (this.version < 7) {\n                for (let i = 0; i < nRecords; i++) {\n                    const binX = parser.getInt();\n                    const binY = parser.getInt();\n                    const counts = parser.getFloat();\n                    records.push(new ContactRecord(binX, binY, counts));\n                }\n            } else {\n\n                const binXOffset = parser.getInt();\n                const binYOffset = parser.getInt();\n\n                const useFloatContact = parser.getByte() === 1;\n                const useIntXPos = this.version < 9 ? false : parser.getByte() == 1;\n                const useIntYPos = this.version < 9 ? false : parser.getByte() == 1;\n                const type = parser.getByte();\n\n                if (type === 1) {\n                    // List-of-rows representation\n                    const rowCount = useIntYPos ? parser.getInt() : parser.getShort();\n                    for (let i = 0; i < rowCount; i++) {\n                        const dy = useIntYPos ? parser.getInt() : parser.getShort();\n                        const binY = binYOffset + dy;\n                        const colCount = useIntXPos ? parser.getInt() : parser.getShort();\n                        for (let j = 0; j < colCount; j++) {\n                            const dx = useIntXPos ? parser.getInt() : parser.getShort();\n                            const binX = binXOffset + dx;\n                            const counts = useFloatContact ? parser.getFloat() : parser.getShort();\n                            records.push(new ContactRecord(binX, binY, counts));\n                        }\n                    }\n                } else if (type == 2) {\n\n                    const nPts = parser.getInt();\n                    const w = parser.getShort();\n\n                    for (let i = 0; i < nPts; i++) {\n                        //int idx = (p.y - binOffset2) * w + (p.x - binOffset1);\n                        const row = Math.floor(i / w);\n                        const col = i - row * w;\n                        const bin1 = binXOffset + col;\n                        const bin2 = binYOffset + row;\n\n                        if (useFloatContact) {\n                            const counts = parser.getFloat();\n                            if (!isNaN(counts)) {\n                                records.push(new ContactRecord(bin1, bin2, counts));\n                            }\n                        } else {\n                            const counts = parser.getShort();\n                            if (counts != Short_MIN_VALUE) {\n                                records.push(new ContactRecord(bin1, bin2, counts));\n                            }\n                        }\n                    }\n                } else {\n                    throw new Error(\"Unknown block type: \" + type);\n                }\n\n            }\n\n            return new Block(blockNumber, zd, records, idx);\n\n\n        }\n    };\n\n    async hasNormalizationVector(type, chr, unit, binSize) {\n        await this.init();\n        let chrIdx;\n        if (Number.isInteger(chr)) {\n            chrIdx = chr;\n        } else {\n            const canonicalName = this.getFileChrName(chr);\n            chrIdx = this.chromosomeIndexMap[canonicalName];\n        }\n        const key = getNormalizationVectorKey(type, chrIdx, unit.toString(), binSize);\n        const normVectorIndex = await this.getNormVectorIndex();\n        return normVectorIndex && normVectorIndex[key];\n    }\n\n    async getNormalizationVector(type, chr, unit, binSize) {\n\n        await this.init();\n\n        let chrIdx;\n        if (Number.isInteger(chr)) {\n            chrIdx = chr;\n        } else {\n            const canonicalName = this.getFileChrName(chr);\n            chrIdx = this.chromosomeIndexMap[canonicalName];\n        }\n\n        const key = getNormalizationVectorKey(type, chrIdx, unit.toString(), binSize);\n\n        if (this.normVectorCache.has(key)) {\n            return this.normVectorCache.get(key);\n        }\n\n        const normVectorIndex = await this.getNormVectorIndex();\n\n        if (!normVectorIndex) {\n            return undefined\n        }\n\n        const idx = normVectorIndex[key];\n        if (!idx) {\n            // TODO -- alert in browsers\n            return undefined;\n        }\n\n        const data = await this.file.read(idx.filePosition, 8);\n\n        if (!data) {\n            return undefined;\n        }\n\n        const parser = new BinaryParser(new DataView(data));\n        const nValues = this.version < 9 ? parser.getInt() : parser.getLong();\n        const dataType = this.version < 9 ? DOUBLE$1 : FLOAT;\n        const filePosition = this.version < 9 ? idx.filePosition + 4 : idx.filePosition + 8;\n        const nv = new NormalizationVector(this.file, filePosition, nValues, dataType);\n        this.normVectorCache.set(key, nv);\n        return nv;\n\n    }\n\n    async getNormVectorIndex() {\n\n        if (this.version < 6) {\n            return undefined;\n        }\n\n        if (!this.normVectorIndex) {\n\n            // If nvi is not supplied, try reading from remote lambda service\n            if (!this.config.nvi && this.remote && this.url) {\n                const url = new URL(this.url);\n                const key = encodeURIComponent(url.hostname + url.pathname);\n                const nviResponse = await crossFetch('https://t5dvc6kn3f.execute-api.us-east-1.amazonaws.com/dev/nvi/' + key);\n                if (nviResponse.status === 200) {\n                    const nvi = await nviResponse.text();\n                    if (nvi) {\n                        this.config.nvi = nvi;\n                    }\n                }\n            }\n\n            if (this.config.nvi) {\n                const nviArray = decodeURIComponent(this.config.nvi).split(\",\");\n                const range = {start: parseInt(nviArray[0]), size: parseInt(nviArray[1])};\n                return this.readNormVectorIndex(range)\n            } else {\n                try {\n                    await this.readNormExpectedValuesAndNormVectorIndex();\n                    return this.normVectorIndex\n                } catch (e) {\n                    if (e.code === \"416\" || e.code === 416) {\n                        // This is expected if file does not contain norm vectors\n                        this.normExpectedValueVectorsPosition = undefined;\n                    } else {\n                        console.error(e);\n                    }\n                }\n            }\n        }\n\n        return this.normVectorIndex\n    }\n\n    async getNormalizationOptions() {\n        // Normalization options are computed as a side effect of loading the index.  A bit\n        // ugly but alternatives are worse.\n        await this.getNormVectorIndex();\n        return this.normalizationTypes;\n    }\n\n    /**\n     * Return a promise to load the normalization vector index\n     *\n     * @param dataset\n     * @param range  -- file range {position, size}\n     * @returns Promise for the normalization vector index\n     */\n    async readNormVectorIndex(range) {\n\n        await this.init();\n\n        this.normalizationVectorIndexRange = range;\n\n        const data = await this.file.read(range.start, range.size);\n\n        const binaryParser = new BinaryParser(new DataView(data));\n\n        this.normVectorIndex = {};\n\n        let nEntries = binaryParser.getInt();\n        while (nEntries-- > 0) {\n            this.parseNormVectorEntry(binaryParser);\n        }\n\n        return this.normVectorIndex;\n\n    }\n\n    /**\n     * This function is used when the position of the norm vector index is unknown.  We must read through the expected\n     * values to find the index\n     *\n     * @param dataset\n     * @returns {Promise}\n     */\n    async readNormExpectedValuesAndNormVectorIndex() {\n\n        await this.init();\n\n        if (this.normExpectedValueVectorsPosition === undefined) {\n            return;\n        }\n\n        const nviStart = await this.skipExpectedValues(this.normExpectedValueVectorsPosition);\n        let byteCount = INT;\n\n        let data = await this.file.read(nviStart, INT);\n        if (data.byteLength === 0) {\n            // This is possible if there are no norm vectors.  Its a legal v8 file, though uncommon\n            return;\n        }\n        const binaryParser = new BinaryParser(new DataView(data));\n        const nEntries = binaryParser.getInt();\n        const sizeEstimate = nEntries * 30;\n        const range = {start: nviStart + byteCount, size: sizeEstimate};\n\n        data = await this.file.read(range.start, range.size);\n        this.normalizedExpectedValueVectors = {};\n        this.normVectorIndex = {};\n\n        // Recursively process entries\n        await processEntries.call(this, nEntries, data);\n\n        this.config.nvi = nviStart.toString() + \",\" + byteCount;\n\n        async function processEntries(nEntries, data) {\n\n            const binaryParser = new BinaryParser(new DataView(data));\n\n            while (nEntries-- > 0) {\n\n                if (binaryParser.available() < 100) {\n\n                    nEntries++;   // Reset counter as entry is not processed\n\n                    byteCount += binaryParser.position;\n                    const sizeEstimate = Math.max(1000, nEntries * 30);\n                    const range = {start: nviStart + byteCount, size: sizeEstimate};\n                    const data = await this.file.read(range.start, range.size);\n                    return processEntries.call(this, nEntries, data);\n                }\n\n                this.parseNormVectorEntry(binaryParser);\n\n            }\n            byteCount += binaryParser.position;\n        }\n    }\n\n    /**\n     * This function is used when the position of the norm vector index is unknown.  We must read through the\n     * normalized expected values to find the index\n     *\n     * @param dataset\n     * @returns {Promise}\n     */\n    async skipExpectedValues(start) {\n\n        const version = this.version;\n        const file = new BufferedFile({file: this.file, size: 256000});\n        const range = {start: start, size: INT};\n        const data = await file.read(range.start, range.size);\n        const binaryParser = new BinaryParser(new DataView(data));\n        const nEntries = binaryParser.getInt();   // Total # of expected value chunks\n        if (nEntries === 0) {\n            return start + INT;\n        } else {\n            return parseNext(start + INT, nEntries);\n        }     // Skip 4 bytes for int\n\n\n        async function parseNext(start, nEntries) {\n\n            let range = {start: start, size: 500};\n            let chunkSize = 0;\n            let p0 = start;\n\n            let data = await file.read(range.start, range.size);\n            let binaryParser = new BinaryParser(new DataView(data));\n            const type = binaryParser.getString(); // type\n            const unit = binaryParser.getString(); // unit\n            const binSize = binaryParser.getInt(); // binSize\n            const nValues = version < 9 ? binaryParser.getInt() : binaryParser.getLong();\n\n            chunkSize += binaryParser.position + nValues * (version < 9 ? DOUBLE$1 : FLOAT);\n\n            range = {start: start + chunkSize, size: INT};\n            data = await file.read(range.start, range.size);\n            binaryParser = new BinaryParser(new DataView(data));\n            const nChrScaleFactors = binaryParser.getInt();\n            chunkSize += (INT + nChrScaleFactors * (INT + (version < 9 ? DOUBLE$1 : FLOAT)));\n\n\n            nEntries--;\n            if (nEntries === 0) {\n                return p0 + chunkSize;\n            } else {\n                return parseNext(p0 + chunkSize, nEntries);\n            }\n        }\n    }\n\n    getZoomIndexForBinSize(binSize, unit) {\n\n        unit = unit || \"BP\";\n\n        let resolutionArray;\n        if (unit === \"BP\") {\n            resolutionArray = this.bpResolutions;\n        } else if (unit === \"FRAG\") {\n            resolutionArray = this.fragResolutions;\n        } else {\n            throw new Error(\"Invalid unit: \" + unit);\n        }\n\n        for (let i = 0; i < resolutionArray.length; i++) {\n            if (resolutionArray[i] === binSize) return i;\n        }\n\n        return -1;\n    }\n\n    parseNormVectorEntry(binaryParser) {\n        const type = binaryParser.getString();      //15\n        const chrIdx = binaryParser.getInt();       //4\n        const unit = binaryParser.getString();      //3\n        const binSize = binaryParser.getInt();      //4\n        const filePosition = binaryParser.getLong();  //8\n        const sizeInBytes = this.version < 9 ? binaryParser.getInt() : binaryParser.getLong();     //4:8\n        const key = type + \"_\" + chrIdx + \"_\" + unit + \"_\" + binSize;\n        // TODO -- why does this not work?  NormalizationVector.getNormalizationVectorKey(type, chrIdx, unit, binSize);\n\n        if (!this.normalizationTypes.includes(type)) {\n            this.normalizationTypes.push(type);\n        }\n        this.normVectorIndex[key] = {filePosition: filePosition, size: sizeInBytes};\n    }\n\n    getFileChrName(chrAlias) {\n        if (this.chrAliasTable.hasOwnProperty(chrAlias)) {\n            return this.chrAliasTable[chrAlias]\n        } else {\n            return chrAlias\n        }\n    }\n\n\n    // NOTE sties are not currently used\n    // async getSites(chrName) {\n    //     let sites = this.fragmentSitesCache[chrName];\n    //     if (!sites) {\n    //         if (this.fragmentSitesIndex) {\n    //             const entry = self.fragmentSitesIndex[chrName];\n    //             if (entry && entry.nSites > 0) {\n    //                 sites = await this.readSites(entry.position, entry.nSites)\n    //                 this.fragmentSitesCache[chrName] = sites;\n    //             }\n    //         }\n    //     }\n    //     return sites;\n    // }\n    //\n\n}\n\n\nfunction getNormalizationVectorKey(type, chrIdx, unit, resolution) {\n    return type + \"_\" + chrIdx + \"_\" + unit + \"_\" + resolution;\n}\n\nfunction isGoogleDrive(url) {\n    return url.indexOf(\"drive.google.com\") >= 0 || url.indexOf(\"www.googleapis.com/drive\") > 0\n}\n\nclass Block {\n    constructor(blockNumber, zoomData, records, idx) {\n        this.blockNumber = blockNumber;\n        this.zoomData = zoomData;\n        this.records = records;\n        this.idx = idx;\n    }\n}\n\n\nclass BlockCache {\n\n    constructor() {\n        this.resolution = undefined;\n        this.map = new LRU(6);\n    }\n\n    set(resolution, key, value) {\n        if (this.resolution !== resolution) {\n            this.map.clear();\n        }\n        this.resolution = resolution;\n        this.map.set(key, value);\n    }\n\n    get(resolution, key) {\n        return this.resolution === resolution ? this.map.get(key) : undefined;\n    }\n\n    has(resolution, key) {\n        return this.resolution === resolution && this.map.has(key);\n    }\n}\n\nclass Straw {\n\n    constructor(config) {\n        this.config = config;\n        this.hicFile = new HicFile(config);\n    }\n\n    async getMetaData() {\n        return await this.hicFile.getMetaData()\n    }\n\n    //straw <NONE/VC/VC_SQRT/KR> <ile> <chr1>[:x1:x2] <chr2>[:y1:y2] <BP/FRAG> <binsize>\n    async getContactRecords(normalization, region1, region2, units, binsize) {\n        return this.hicFile.getContactRecords(normalization, region1, region2, units, binsize);\n    }\n\n    async getNormalizationOptions() {\n        return this.hicFile.getNormalizationOptions()\n    }\n\n    async getNVI() {\n        await this.hicFile.getNormVectorIndex();\n        return this.hicFile.config.nvi;\n    }\n\n    async printIndexStats() {\n        await this.hicFile.printIndexStats();\n    }\n\n    getFileChrName(chrAlias) {\n        if (this.hicFile.chrAliasTable.hasOwnProperty(chrAlias)) {\n            return this.hicFile.chrAliasTable[chrAlias]\n        } else {\n            return chrAlias\n        }\n    }\n}\n\nexport default Straw;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import {\n  BaseFeatureDataAdapter,\n  BaseOptions,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { Region, FileLocation } from '@jbrowse/core/util/types'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { Instance } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport type { GenericFilehandle } from 'generic-filehandle'\nimport HicStraw from 'hic-straw'\nimport MyConfigSchema from './configSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\ninterface ContactRecord {\n  bin1: number\n  bin2: number\n  counts: number\n}\n\ninterface HicMetadata {\n  chromosomes: {\n    name: string\n    length: number\n    id: number\n  }[]\n  resolutions: number[]\n}\ninterface Ref {\n  chr: string\n  start: number\n  end: number\n}\n\ninterface HicOptions extends BaseOptions {\n  resolution?: number\n  bpPerPx?: number\n}\n\n// wraps generic-filehandle so the read function only takes a position and length\n// in some ways, generic-filehandle wishes it was just this but it has\n// to adapt to the node.js fs promises API\nclass GenericFilehandleWrapper {\n  private filehandle: GenericFilehandle\n\n  constructor(filehandle: GenericFilehandle) {\n    this.filehandle = filehandle\n  }\n\n  async read(position: number, length: number) {\n    const { buffer: b, bytesRead } = await this.filehandle.read(\n      Buffer.allocUnsafe(length),\n      0,\n      length,\n      position,\n    )\n    // xref https://stackoverflow.com/a/31394257/2129219\n    return b.buffer.slice(b.byteOffset, b.byteOffset + bytesRead)\n  }\n}\nexport function openFilehandleWrapper(location: FileLocation) {\n  return new GenericFilehandleWrapper(openLocation(location))\n}\n\nexport default class HicAdapter extends BaseFeatureDataAdapter {\n  private hic: {\n    getContactRecords: (\n      normalize: string,\n      ref: Ref,\n      ref2: Ref,\n      units: string,\n      binsize: number,\n    ) => Promise<ContactRecord[]>\n    getMetaData: () => Promise<HicMetadata>\n  }\n\n  public constructor(\n    config: Instance<typeof MyConfigSchema>,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    const hicLocation = readConfObject(config, 'hicLocation')\n    this.hic = new HicStraw({\n      file: openFilehandleWrapper(hicLocation),\n    })\n  }\n\n  private async setup(opts?: BaseOptions) {\n    const { statusCallback = () => {} } = opts || {}\n    statusCallback('Downloading .hic header')\n    const result = await this.hic.getMetaData()\n    statusCallback('')\n    return result\n  }\n\n  public async getHeader(opts?: BaseOptions) {\n    const ret = await this.setup(opts)\n    const { chromosomes, ...rest } = ret\n    return rest\n  }\n\n  async getRefNames(opts?: BaseOptions) {\n    const metadata = await this.setup(opts)\n    return metadata.chromosomes.map(chr => chr.name)\n  }\n\n  async getResolution(bpPerPx: number, opts?: BaseOptions) {\n    const metadata = await this.setup(opts)\n    const { resolutions } = metadata\n    let chosenResolution = resolutions[resolutions.length - 1]\n\n    for (let i = resolutions.length - 1; i >= 0; i -= 1) {\n      const r = resolutions[i]\n      if (r <= 2 * bpPerPx) {\n        chosenResolution = r\n      }\n    }\n    return chosenResolution\n  }\n\n  getFeatures(region: Region, opts: HicOptions = {}) {\n    return ObservableCreate<ContactRecord>(async observer => {\n      const { refName: chr, start, end } = region\n      const { resolution, bpPerPx = 1, statusCallback = () => {} } = opts\n      const res = await this.getResolution(bpPerPx / (resolution || 1000), opts)\n      statusCallback('Downloading .hic data')\n\n      const records = await this.hic.getContactRecords(\n        'KR',\n        { start, chr, end },\n        { start, chr, end },\n        'BP',\n        res,\n      )\n      records.forEach(record => {\n        observer.next(record)\n      })\n      statusCallback('')\n      observer.complete()\n    }, opts.signal) as any // eslint-disable-line @typescript-eslint/no-explicit-any\n  }\n\n  freeResources(/* { region } */): void {}\n}\n"],"sourceRoot":""}