{"version":3,"sources":["../../../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../../../node_modules/@babel/runtime/helpers/isNativeFunction.js","../../../node_modules/@babel/runtime/helpers/construct.js","../../../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../../../node_modules/@gmod/ucsc-hub/dist/raFile.js","../../../node_modules/@gmod/ucsc-hub/dist/raStanza.js","../../../node_modules/@babel/runtime/helpers/get.js","../../../node_modules/@babel/runtime/helpers/superPropBase.js","../../../node_modules/@gmod/ucsc-hub/dist/trimStartEndPolyfills.js","../../../node_modules/@gmod/ucsc-hub/dist/trackDbFile.js","../../../node_modules/@gmod/ucsc-hub/dist/hubFile.js","../../../node_modules/@gmod/ucsc-hub/dist/genomesFile.js","../../../node_modules/@gmod/ucsc-hub/dist/index.js","../../../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../../node_modules/@babel/runtime/helpers/inherits.js","../../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../../node_modules/@babel/runtime/helpers/setPrototypeOf.js"],"names":["module","exports","self","ReferenceError","__esModule","getPrototypeOf","setPrototypeOf","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","Map","undefined","TypeError","has","get","set","Wrapper","arguments","this","constructor","prototype","Object","create","value","enumerable","writable","configurable","fn","Function","toString","call","indexOf","isNativeReflectConstruct","_construct","Parent","args","Reflect","a","push","apply","instance","bind","sham","Proxy","Boolean","valueOf","e","_interopRequireDefault","require","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_wrapNativeSuper2","_isNativeReflectConstruct","Date","RaStanza","RaFile","_Map","default","Derived","_super","result","Super","NewTarget","raFile","_this","options","length","checkIndent","stanzas","_checkIndent","trimEnd","split","_stanzaAndCommentOrder","forEach","stanza","add","key","Error","trim","startsWith","stanzaLines","map","line","every","join","raStanza","nameKey","concat","name","includes","filter","_this2","size","entry","_typeof2","_slicedToArray2","_keyAndCommentOrder","endsWith","_trimmedLine","slice","_continuedLine","trimStart","combinedLine","indent","match","_indent","trimmedLine","sep","lines","superPropBase","_get","target","property","receiver","base","desc","getOwnPropertyDescriptor","object","hasOwnProperty","String","trimLeft","replace","trimRight","TrackDbFile","_RaFile","trackDbFile","track","trackName","trackKeys","Array","from","keys","missingKeys","parentTrackKeys","some","settings","currentTrackName","_currentTrackName$spl","currentTrack","parentTracks","reverse","parentTrack","HubFile","_RaStanza","hubFile","hubTxtFields","extraFields","missingFields","field","GenomesFile","genomesFile","requiredFields","genome","genomeName","_getPrototypeOf","o","__proto__","subClass","superClass","_typeof","assertThisInitialized","_setPrototypeOf","p"],"mappings":"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","file":"0.d6f72bf7381751b3c8a4.worker.js","sourcesContent":["function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeFunction = require(\"./isNativeFunction.js\");\n\nvar construct = require(\"./construct.js\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaStanza = require('./raStanza');\n\n/**\nlass representing an ra file. Each file is composed of multiple stanzas, and\neach stanza is separated by one or more blank lines. Each stanza is stored in\na Map with the key being the value of the first key-value pair in the stanza.\nhe usual Map methods can be used on the file. An additional method `add()`\nis available to take a raw line of text and break it up into a key and value\nand add them to the class. This should be favored over `set()` when possible,\nas it performs more validity checks than using `set()`.\nextends Map\nproperty {undefined|string} nameKey - The key of the first line of all the\nstanzas (`undefined` if the stanza has no lines yet).\nthrows {Error} Throws if an empty stanza is added, if the key in the first\nkey-value pair of each stanze isn't the same, or if two stanzas have the same\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           * value for the key-value pair in their first lines.\nparam {(string|string[])} [raFile=[]] - An ra file, either as a single\nstring or an array of strings with one stanza per entry. Supports both LF\nand CRLF line terminators.\nparam {object} options\nparam {boolean} options.checkIndent [true] - Check if a the stanzas within\nthe file are indented consistently and keep track of the indentation\nvar\nRaFile = /*#__PURE__*/function (_Map) {(0, _inherits2.default)(RaFile, _Map);var _super = _createSuper(RaFile);\n  function RaFile(raFile) {var _this;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { checkIndent: true };(0, _classCallCheck2.default)(this, RaFile);\n    _this = _super.call(this);var\n    checkIndent = options.checkIndent;\n    _this._checkIndent = checkIndent;\n    var stanzas;\n    if (typeof raFile === 'string') {\n      stanzas = raFile.trimEnd().split(/(?:[\\t ]*\\r?\\n){2,}/);\n    } else if (!raFile) {\n      stanzas = [];\n    } else {\n      stanzas = raFile;\n    }\n    _this._stanzaAndCommentOrder = [];\n    stanzas.forEach(function (stanza) {\n      _this.add(stanza);\n    });return _this;\n  }\n\n  /**\n     * Add a single stanza to the file\n     * @param {string} stanza A single stanza\n     * @returns {RaFile} The RaFile object\n     */(0, _createClass2.default)(RaFile, [{ key: \"add\", value: function add(\n    stanza) {\n      if (stanza === '') throw new Error('Invalid stanza, was empty');\n      if (stanza.trim().startsWith('#')) {\n        var stanzaLines = stanza.\n        trimEnd().\n        split(/\\r?\\n/).\n        map(function (line) {return line.trim();});\n        if (stanzaLines.every(function (line) {return line.startsWith('#');})) {\n          this._stanzaAndCommentOrder.push(stanzaLines.join('\\n'));\n          return this;\n        }\n      }\n      var raStanza = new RaStanza(stanza, { checkIndent: this._checkIndent });\n      if (!this.nameKey) this.nameKey = raStanza.nameKey;else\n      if (raStanza.nameKey !== this.nameKey)\n      throw new Error(\n      'The first line in each stanza must have the same key. ' + \"Saw both \".concat(\n      this.nameKey, \" and \").concat(raStanza.nameKey));\n\n      if (this.has(raStanza.name))\n      throw new Error(\"Got duplicate stanza name: \".concat(raStanza.name));\n      this._stanzaAndCommentOrder.push(raStanza.name);\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"set\", this).call(this, raStanza.name, raStanza);\n    }\n\n    /**\n       * Use `add()` if possible instead of this method. If using this, be aware\n       * that no checks are made for comments, empty stanzas, duplicate keys, etc.\n       * @param {string} key The key of the RaFile stanza\n       * @param {RaStanza} value The RaFile stanza used to replace the prior one\n       */ }, { key: \"update\", value: function update(\n    key, value) {\n      if (!(value instanceof RaStanza))\n      throw new Error(\"Value of \".concat(key, \" is not an RaStanza\"));\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"set\", this).call(this, key, value);\n    }\n\n    /**\n       * Delete a stanza\n       * @param {string} stanza The name of the stanza to delete (the value in its\n       * first key-value pair)\n       * @returns {boolean} true if the deleted stanza existed, false if it did not\n       */ }, { key: \"delete\", value: function _delete(\n    stanza) {\n      if (this._stanzaAndCommentOrder.includes(stanza))\n      this._stanzaAndCommentOrder = this._stanzaAndCommentOrder.filter(\n      function (value) {return value !== stanza;});\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"delete\", this).call(this, stanza);\n    }\n\n    /**\n       * Clear all stanzas and comments\n       */ }, { key: \"clear\", value: function clear()\n    {\n      this._stanzaAndCommentOrder.length = 0;\n      this.nameKey = undefined;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RaFile.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n       * @returns {string} Returns the stanza as a string fit for writing to a ra\n       * file. Original leading indent is preserved. It may not be the same as the\n       * input stanza as lines that were joined with `\\` in the input will be output\n       *  as a single line and all comments will have the same indentations as the\n       * rest of the stanza. Comments between joined lines will move before that\n       * line.\n       */ }, { key: \"toString\", value: function toString()\n    {var _this2 = this;\n      if (this.size === 0) return '';\n      var stanzas = [];\n      this._stanzaAndCommentOrder.forEach(function (entry) {\n        if (entry.startsWith('#')) stanzas.push(\"\".concat(entry, \"\\n\"));else\n        stanzas.push(_this2.get(entry).toString());\n      });\n      return stanzas.join('\\n');\n    } }]);return RaFile;}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Map));\n\n\nmodule.exports = RaFile;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}require('./trimStartEndPolyfills');\n\n/**\nlass representing an ra file stanza. Each stanza line is split into its key\nand value and stored as a Map, so the usual Map methods can be used on the\nstanza. An additional method `add()` is available to take a raw line of text\nand break it up into a key and value and add them to the class. This should\nbe favored over `set()` when possible, as it performs more validity checks\nthan using `set()`.\nextends Map\nproperty {undefined|string} nameKey - The key of the first line of the\nstanza (`undefined` if the stanza has no lines yet).\nproperty {undefined|string} name - The value of the first line of the\nstanza, by which it is identified in an ra file  (`undefined` if the stanza\nhas no lines yet).\nproperty {undefined|string} indent - The leading indent of the stanza,\nwhich is the same for every line (`undefined` if the stanza has no lines\nyet, `''` if there is no indent).\nthrows {Error} Throws if the stanza has blank lines, if the first line\ndoesn't have both a key and a value, if a key in the stanza is\nduplicated, or if lines in the stanza have inconsistent indentation.\nparam {(string|string[])} [stanza=[]] - An ra file stanza, either as a\nstring or a array of strings with one line per entry. Supports both LF and\nline terminators.\nparam {object} options\nparam {boolean} options.checkIndent [true] - Check if a stanza is indented\nconsistently and keep track of the indentation\nvar\nRaStanza = /*#__PURE__*/function (_Map) {(0, _inherits2.default)(RaStanza, _Map);var _super = _createSuper(RaStanza);\n  function RaStanza(stanza) {var _this;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { checkIndent: true };(0, _classCallCheck2.default)(this, RaStanza);\n    _this = _super.call(this);var\n    checkIndent = options.checkIndent;\n    _this._checkIndent = checkIndent;\n    var stanzaLines;\n    if (typeof stanza === 'string') {\n      stanzaLines = stanza.trimEnd().split(/\\r?\\n/);\n    } else if (!stanza) {\n      stanzaLines = [];\n    } else {\n      stanzaLines = stanza;\n    }\n    _this._keyAndCommentOrder = [];\n    stanzaLines.forEach(function (line) {\n      _this.add(line);\n    });return _this;\n  }\n\n  /**\n     * Add a single line to the stanza. If the exact line already exists, does\n     * nothing.\n     * @param {string} line A stanza line\n     * @returns {RaStanza} The RaStanza object\n     */(0, _createClass2.default)(RaStanza, [{ key: \"add\", value: function add(\n    line) {\n      if (line === '') throw new Error('Invalid stanza, contained blank lines');\n      if (line.trim().startsWith('#')) {\n        this._keyAndCommentOrder.push(line.trim());\n        return this;\n      }\n      if (line.trimEnd().endsWith('\\\\')) {\n        var _trimmedLine = line.trimEnd().slice(0, -1);\n        if (this._continuedLine) this._continuedLine += _trimmedLine.trimStart();else\n        this._continuedLine = _trimmedLine;\n        return this;\n      }\n      var combinedLine = line;\n      if (this._continuedLine) {\n        combinedLine = this._continuedLine + combinedLine.trimStart();\n        this._continuedLine = undefined;\n      }\n      if (this.indent || this._checkIndent) {\n        var indent = combinedLine.match(/^([ \\t]+)/);\n        if (this.indent === undefined) {\n          if (indent) {var _indent = (0, _slicedToArray2.default)(indent, 2);this.indent = _indent[1];} else\n          this.indent = '';\n        } else if (\n        this.indent === '' && indent !== null ||\n        this.indent && this.indent !== indent[1])\n        {\n          throw new Error('Inconsistent indentation of stanza');\n        }\n      } else {\n        this.indent = '';\n      }\n      var trimmedLine = combinedLine.trim();\n      var sep = trimmedLine.indexOf(' ');\n      if (sep === -1) {\n        if (!this.nameKey)\n        throw new Error(\n        'First line in a stanza must have both a key and a value');\n\n        // Adding a key that already exists and has no value is a no-op\n        if (this.has(trimmedLine)) return this;\n        this._keyAndCommentOrder.push(trimmedLine);\n        return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"set\", this).call(this, trimmedLine, '');\n      }\n      var key = trimmedLine.slice(0, sep);\n      var value = trimmedLine.slice(sep + 1);\n      if (this.has(key) && value !== this.get(key))\n      throw new Error(\n      'Got duplicate key with a different value in stanza: ' + \"\\\"\".concat(\n      key, \"\\\" key has both \").concat(this.get(key), \" and \").concat(value));\n\n      this._keyAndCommentOrder.push(key);\n      if (!this.nameKey) {\n        this.nameKey = key;\n        this.name = trimmedLine.slice(sep + 1);\n      }\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"set\", this).call(this, key, value);\n    }\n\n    /**\n       * Use `add()` if possible instead of this method. If using this, be aware\n       * that no checks are made for comments, indentation, duplicate keys, etc.\n       * @param {string} key The key of the stanza line\n       * @param {string} value The value of the stanza line\n       * @returns {RaStanza} The RaStanza object\n       */ }, { key: \"set\", value: function set(\n    key, value) {\n      if (!(typeof value === 'string'))\n      throw new Error(\"Value of \".concat(key, \" must be a string, got \").concat((0, _typeof2.default)(value)));\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"set\", this).call(this, key, value);\n    }\n\n    /**\n       * Delete a line\n       * @param {string} key The key of the line to delete\n       * @returns {boolean} true if the deleted line existed, false if it did not\n       */ }, { key: \"delete\", value: function _delete(\n    key) {\n      if (key === this.nameKey)\n      throw new Error(\n      'Cannot delete the first line in a stanza (you can still overwrite it with set()).');\n\n      if (this._keyAndCommentOrder.includes(key))\n      this._keyAndCommentOrder = this._keyAndCommentOrder.filter(\n      function (value) {return value !== key;});\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"delete\", this).call(this, key);\n    }\n\n    /**\n       * Clear all lines and comments\n       */ }, { key: \"clear\", value: function clear()\n    {\n      this._keyAndCommentOrder.length = 0;\n      this._continuedLine = undefined;\n      this.indent = undefined;\n      this.name = undefined;\n      this.nameKey = undefined;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RaStanza.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n       * @returns {string} Returns the stanza as a string fit for writing to a ra\n       * file. Original leading indent is preserved. It may not be the same as the\n       * input stanza as lines that were joined with `\\` in the input will be output\n       * as a single line and all comments will have the same indentations as the\n       * rest of the stanza. Comments between joined lines will move before that\n       * line.\n       */ }, { key: \"toString\", value: function toString()\n    {var _this2 = this;\n      if (this.size === 0) return '';\n      var lines = [];\n      this._keyAndCommentOrder.forEach(function (entry) {\n        if (entry.startsWith('#')) lines.push(\"\".concat(_this2.indent).concat(entry));else\n        lines.push(\"\".concat(_this2.indent).concat(entry, \" \").concat(_this2.get(entry)).trimEnd());\n      });\n      return \"\".concat(lines.join('\\n'), \"\\n\");\n    } }]);return RaStanza;}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Map));\n\n\nmodule.exports = RaStanza;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","\"use strict\"; /* eslint-disable no-extend-native */\n/* eslint-disable func-names */\nif (!String.prototype.trimStart) {\n  if (String.prototype.trimLeft) {\n    String.prototype.trimStart = String.prototype.trimLeft;\n  } else {\n    String.prototype.trimStart = function () {\n      return this.replace(/^[\\s\\uFEFF\\xA0]+/g, '');\n    };\n  }\n}\n\nif (!String.prototype.trimEnd) {\n  if (String.prototype.trimRight) {\n    String.prototype.trimEnd = String.prototype.trimRight;\n  } else {\n    String.prototype.trimEnd = function () {\n      return this.replace(/[\\s\\uFEFF\\xA0]+$/g, '');\n    };\n  }\n}","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaFile = require('./raFile');\n\n/**\nlass representing a genomes.txt file.\nextends RaFile\nparam {(string|string[])} [trackDbFile=[]] - A trackDb.txt file as a string\nthrows {Error} Throws if \"track\" is not the first key in each track or if a\ntrack is missing required keys\nvar\nTrackDbFile = /*#__PURE__*/function (_RaFile) {(0, _inherits2.default)(TrackDbFile, _RaFile);var _super = _createSuper(TrackDbFile);\n  function TrackDbFile(trackDbFile) {var _this;(0, _classCallCheck2.default)(this, TrackDbFile);\n    _this = _super.call(this, trackDbFile, { checkIndent: false });\n    if (_this.nameKey !== 'track')\n    throw new Error(\"trackDb has \\\"\".concat(\n    _this.nameKey, \"\\\" instead of \\\"track\\\" as the first line in each track\"));\n\n    _this.forEach(function (track, trackName) {\n      var trackKeys = Array.from(track.keys());\n      var missingKeys = [];\n      var requiredKeys = ['track', 'shortLabel'];\n      requiredKeys.forEach(function (key) {\n        if (!trackKeys.includes(key)) missingKeys.push(key);\n      });\n      if (missingKeys.length > 0)\n      throw new Error(\"Track \".concat(\n      trackName, \" is missing required key(s): \").concat(missingKeys.join(\n      ', ')));\n\n\n      var parentTrackKeys = [\n      'superTrack',\n      'compositeTrack',\n      'container',\n      'view'];\n\n      if (!trackKeys.some(function (key) {return parentTrackKeys.includes(key);})) {\n        if (!trackKeys.includes('bigDataUrl'))\n        throw new Error(\"Track \".concat(\n        trackName, \" is missing required key \\\"bigDataUrl\\\"\"));\n\n        if (!trackKeys.includes('type')) {\n          var settings = _this.settings(trackName);\n          var settingsKeys = Array.from(settings.keys());\n          if (!settingsKeys.includes('type'))\n          throw new Error(\"Neither track \".concat(\n          trackName, \" nor any of its parent tracks have the required key \\\"type\\\"\"));\n\n        }\n      }\n      var indent = '';\n      var currentTrackName = trackName;\n      do {\n        currentTrackName = _this.get(currentTrackName).get('parent');\n        if (currentTrackName) {\n          ;var _currentTrackName$spl = currentTrackName.split(' ');var _currentTrackName$spl2 = (0, _slicedToArray2.default)(_currentTrackName$spl, 1);currentTrackName = _currentTrackName$spl2[0];\n          indent += '    ';\n        }\n      } while (currentTrackName);\n      var currentTrack = _this.get(trackName);\n      currentTrack.indent = indent;\n      _this.set(trackName, currentTrack);\n    });return _this;\n  }\n\n  /**\n     * Gets all track entries including those of parent tracks, with closer\n     * entries overriding more distant ones\n     * @param {string} trackName The name of a track\n     * @throws {Error} Throws if track name does not exist in the trackDb\n     */(0, _createClass2.default)(TrackDbFile, [{ key: \"settings\", value: function settings(\n    trackName) {var _this2 = this;\n      if (!this.has(trackName))\n      throw new Error(\"Track \".concat(trackName, \" does not exist\"));\n      var parentTracks = [trackName];\n      var currentTrackName = trackName;\n      do {\n        currentTrackName = this.get(currentTrackName).get('parent');\n        if (currentTrackName) parentTracks.push(currentTrackName);\n      } while (currentTrackName);\n      var settings = new Map();\n      parentTracks.reverse();\n      parentTracks.forEach(function (parentTrack) {\n        _this2.get(parentTrack).forEach(function (value, key) {\n          settings.set(key, value);\n        });\n      });\n      return settings;\n    } }]);return TrackDbFile;}(RaFile);\n\n\nmodule.exports = TrackDbFile;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaStanza = require('./raStanza');\n\n/**\nlass representing a hub.txt file.\nextends RaStanza\nparam {(string|string[])} [hubFile=[]] - A hub.txt file as a string\nthrows {Error} Throws if the first line of the hub.txt file doesn't start\nwith \"hub <hub_name>\", if it has invalid entries, or is missing required\nentries\nvar\nHubFile = /*#__PURE__*/function (_RaStanza) {(0, _inherits2.default)(HubFile, _RaStanza);var _super = _createSuper(HubFile);\n  function HubFile(hubFile) {var _this;(0, _classCallCheck2.default)(this, HubFile);\n    _this = _super.call(this, hubFile);\n    if (_this.nameKey !== 'hub')\n    throw new Error('Hub file must begin with a line like \"hub <hub_name>\"');\n    var hubTxtFields = [\n    'hub',\n    'shortLabel',\n    'longLabel',\n    'genomesFile',\n    'email',\n    'descriptionUrl'];\n\n    var extraFields = [];\n    _this.forEach(function (value, key) {\n      if (!hubTxtFields.includes(key)) extraFields.push(key);\n    });\n    if (extraFields.length > 0)\n    throw new Error(\"Hub file has invalid entr\".concat(\n\n    extraFields.length === 1 ? 'y' : 'ies', \": \").concat(\n    extraFields.join(', ')));\n\n    var missingFields = [];\n    hubTxtFields.forEach(function (field) {\n      if (field !== 'descriptionUrl' && !_this.get(field))\n      missingFields.push(field);\n    });\n    if (missingFields.length > 0)\n    throw new Error(\"Hub file is missing required entr\".concat(\n\n    missingFields.length === 1 ? 'y' : 'ies', \": \").concat(\n    missingFields.join(', ')));return _this;\n\n  }return HubFile;}(RaStanza);\n\n\nmodule.exports = HubFile;","\"use strict\";var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));function _createSuper(Derived) {return function () {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (_isNativeReflectConstruct()) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === \"function\") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var RaFile = require('./raFile');\n\n/**\nlass representing a genomes.txt file.\nextends RaFile\nparam {(string|string[])} [genomesFile=[]] - A genomes.txt file as a string\nthrows {Error} Throws if the first line of the hub.txt file doesn't start\nwith \"genome <genome_name>\" or if it has invalid entries\nvar\nGenomesFile = /*#__PURE__*/function (_RaFile) {(0, _inherits2.default)(GenomesFile, _RaFile);var _super = _createSuper(GenomesFile);\n  function GenomesFile(genomesFile) {var _this;(0, _classCallCheck2.default)(this, GenomesFile);\n    _this = _super.call(this, genomesFile);\n    if (_this.nameKey !== 'genome')\n    throw new Error(\n    'Genomes file must begin with a line like \"genome <genome_name>\"');\n\n\n    // TODO: check if genome is hosted by UCSC and if not, require twoBitPath and groups\n    var requiredFields = [\n    'genome',\n    'trackDb'\n    // 'twoBitPath',\n    // 'groups',\n    ];\n    _this.forEach(function (genome, genomeName) {\n      var missingFields = [];\n      requiredFields.forEach(function (field) {\n        if (!genome.get(field)) missingFields.push(field);\n      });\n      if (missingFields.length > 0)\n      throw new Error(\"Genomes file entry \".concat(\n      genomeName, \" is missing required entr\").concat(\n      missingFields.length === 1 ? 'y' : 'ies', \": \").concat(\n      missingFields.join(', ')));\n\n    });return _this;\n  }return GenomesFile;}(RaFile);\n\n\nmodule.exports = GenomesFile;","\"use strict\";var RaFile = require('./raFile');\nvar RaStanza = require('./raStanza');\nvar TrackDbFile = require('./trackDbFile');\nvar HubFile = require('./hubFile');\nvar GenomesFile = require('./genomesFile');\n\nmodule.exports = { RaFile: RaFile, RaStanza: RaStanza, TrackDbFile: TrackDbFile, HubFile: HubFile, GenomesFile: GenomesFile };","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;"],"sourceRoot":""}