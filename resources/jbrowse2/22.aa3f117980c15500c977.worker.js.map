{"version":3,"sources":["../../src/twoBitFile.ts","../../../plugins/sequence/src/TwoBitAdapter/TwoBitAdapter.ts","../../../node_modules/long/src/long.js","../../../node_modules/@gmod/binary-parser/dist/binary_parser.js","../../../node_modules/@gmod/binary-parser/vm-browser.js","../../../node_modules/@gmod/binary-parser/dist/context.js"],"names":["TWOBIT_MAGIC","tinyMemoize","_class","methodName","method","prototype","memoAttrName","call","twoBit","byteTo4Bases","i","push","maskedByteTo4Bases","map","bases","toLowerCase","TwoBitFile","filehandle","path","Error","LocalFile","isBigEndian","undefined","name","_getParsers","parser","read","Buffer","allocUnsafe","ret","buffer","readInt32LE","version","readInt32BE","_detectEndianness","endianess","lebe","indexEntryParser","Parser","uint8","string","length","uint32","header","int32","assert","m","v","index","array","type","record1","record2","record3","_getParser","headerParser","parse","result","getHeader","maxIndexLength","sequenceCount","indexParser","indexData","forEach","offsetBytes","long","Long","fromBytes","greaterThan","Number","MAX_SAFE_INTEGER","toNumber","offset","getIndex","Object","keys","seqNames","sizePromises","values","_getSequenceSize","Promise","all","sizes","returnObject","seqName","_parseItem","rec1","dnaSize","rec2DataLength","nBlockCount","rec2","rec3DataLength","maskBlockCount","rec3","rec","nBlocks","starts","nBlockStarts","nBlockSizes","maskBlocks","maskBlockStarts","maskBlockSizes","dnaPosition","parserName","regionStart","regionEnd","_getSequenceRecord","record","TypeError","_getOverlappingBlocks","baseBytes","Math","ceil","baseBytesOffset","floor","sequenceBases","genomicPosition","end","shift","baseIsMasked","start","currentNBlock","bytePosition","subPosition","byte","blockStarts","blockSizes","startIndex","endIndex","blockStart","blocks","Array","blockNum","size","TwoBitAdapter","config","getSubAdapter","pluginManager","twobit","chromSizesData","initChromSizes","openLocation","readConfObject","conf","this","uri","file","readFile","data","fromEntries","split","filter","line","trim","getSequenceNames","refName","getSequenceSizes","refSizes","ObservableCreate","observer","a","getSequenceSize","min","getSequence","seq","next","SimpleFeature","id","complete","BaseSequenceAdapter","module","exports","wasm","WebAssembly","Instance","Module","Uint8Array","e","low","high","unsigned","isLong","obj","__isLong__","defineProperty","value","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","pow","fromString","str","radix","RangeError","p","indexOf","substring","radixToPower","parseInt","power","mul","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toString","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","other","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","max","log2","log","LN2","delta","approxRes","approxRem","modulo","rem_u","rem_s","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","hi","lo","bytes","fromBytesLE","fromBytesBE","_typeof","Symbol","iterator","constructor","require","vm","Context","window","self","PRIMITIVE_TYPES","UInt8","UInt16LE","UInt16BE","UInt32LE","UInt32BE","Int8","Int16LE","Int16BE","Int32LE","Int32BE","FloatLE","FloatBE","DoubleLE","DoubleBE","UInt64","Int64","aliasRegistry","FUNCTION_PREFIX","BIT_RANGE","NAME_MAP","concat","String","Skip","Choice","Nest","Bit","Itf8","Ltf8","varName","options","head","compiled","endian","constructorFn","alias","setNextParser","typeWithoutEndian","replace","namely","skip","zeroTerminated","greedy","stripNull","encoding","readUntil","lengthInBytes","choice","arguments","tag","choices","key","nest","create","Function","getCode","ctx","pushCode","generateError","addAliasedCode","addRawCode","code","generate","resolveReferences","markResolved","references","getUnresolvedReferences","markRequested","compile","src","runInThisContext","sizeOf","NaN","elementSize","generateAssert","generateVariable","formatter","generateFormatter","generateNext","generateBit","JSON","stringify","bitFields","sum","generateTmpVariable","val1","val2","bitOffset","generateSkip","generateOption","generateString","generateBuffer","clone","generateArray","counter","lhs","item","isHash","tempVar","addReference","pushScope","popScope","generateChoiceCase","pushPath","popPath","generateChoice","t","defaultChoice","generateNest","nestVar","isInteger","match","itf8","generateItf8","countFlags","ltf8","generateLtf8","globalThis","scopes","isAsync","tmpVariableCount","arr","apply","test","pop","join","args","slice","err","interpolate","resolved","requested","aliasList","bind","s","re","matches","params","substr"],"mappings":"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AAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,G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","file":"22.aa3f117980c15500c977.worker.js","sourcesContent":[null,"import { BaseSequenceAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { NoAssemblyRegion } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs'\nimport SimpleFeature, { Feature } from '@jbrowse/core/util/simpleFeature'\nimport { TwoBitFile } from '@gmod/twobit'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { getSubAdapterType } from '@jbrowse/core/data_adapters/dataAdapterCache'\n\nexport default class TwoBitAdapter extends BaseSequenceAdapter {\n  private twobit: TwoBitFile\n\n  // the chromSizesData can be used to speed up loading since TwoBit has to do\n  // many range requests at startup to perform the getRegions request\n  protected chromSizesData: Promise<Record<string, number> | undefined>\n\n  private async initChromSizes() {\n    const conf = readConfObject(this.config, 'chromSizesLocation')\n    // check against default and empty in case someone makes the field blank in\n    // config editor, may want better way to check \"optional config slots\" in\n    // future\n    if (conf.uri !== '/path/to/default.chrom.sizes' && conf.uri !== '') {\n      const file = openLocation(conf, this.pluginManager)\n      const data = await file.readFile('utf8')\n      return Object.fromEntries(\n        data\n          ?.split('\\n')\n          .filter(line => !!line.trim())\n          .map(line => {\n            const [name, length] = line.split('\\t')\n            return [name, +length]\n          }),\n      )\n    }\n    return undefined\n  }\n\n  constructor(\n    config: AnyConfigurationModel,\n    getSubAdapter?: getSubAdapterType,\n    pluginManager?: PluginManager,\n  ) {\n    super(config, getSubAdapter, pluginManager)\n    this.chromSizesData = this.initChromSizes()\n    this.twobit = new TwoBitFile({\n      filehandle: openLocation(\n        readConfObject(config, 'twoBitLocation'),\n        this.pluginManager,\n      ),\n    })\n  }\n\n  public async getRefNames() {\n    const chromSizesData = await this.chromSizesData\n    if (chromSizesData) {\n      return Object.keys(chromSizesData)\n    }\n    return this.twobit.getSequenceNames()\n  }\n\n  public async getRegions(): Promise<NoAssemblyRegion[]> {\n    const chromSizesData = await this.chromSizesData\n    if (chromSizesData) {\n      return Object.keys(chromSizesData).map(refName => ({\n        refName,\n        start: 0,\n        end: chromSizesData[refName],\n      }))\n    }\n    const refSizes = await this.twobit.getSequenceSizes()\n    return Object.keys(refSizes).map(refName => ({\n      refName,\n      start: 0,\n      end: refSizes[refName],\n    }))\n  }\n\n  /**\n   * Fetch features for a certain region\n   * @param param -\n   * @returns Observable of Feature objects in the region\n   */\n  public getFeatures({ refName, start, end }: NoAssemblyRegion) {\n    return ObservableCreate<Feature>(async observer => {\n      const size = await this.twobit.getSequenceSize(refName)\n      const regionEnd = size !== undefined ? Math.min(size, end) : end\n      const seq = await this.twobit.getSequence(refName, start, regionEnd)\n      if (seq) {\n        observer.next(\n          new SimpleFeature({\n            id: `${refName} ${start}-${regionEnd}`,\n            data: { refName, start, end: regionEnd, seq },\n          }),\n        )\n      }\n      observer.complete()\n    })\n  }\n\n  /**\n   * called to provide a hint that data tied to a certain region\n   * will not be needed for the forseeable future and can be purged\n   * from caches, etc\n   */\n  public freeResources(/* { region } */): void {}\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","\"use strict\";function _typeof(obj) {if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};}return _typeof(obj);} //= =======================================================================================\n// Globals\n//= =======================================================================================\nvar _require = require(\"buffer\"),Buffer = _require.Buffer;\nvar vm = require(\"vm\");\n\nvar Context = require(\"./context\").Context;\nvar Long = require(\"long\");\n\nif (typeof window !== \"undefined\") window.Buffer = Buffer;\nif (typeof self !== \"undefined\") self.Buffer = Buffer; // this is for webworker, and also is not an elseif to avoid window polyfills in webworker\n\nvar PRIMITIVE_TYPES = {\n  UInt8: 1,\n  UInt16LE: 2,\n  UInt16BE: 2,\n  UInt32LE: 4,\n  UInt32BE: 4,\n  Int8: 1,\n  Int16LE: 2,\n  Int16BE: 2,\n  Int32LE: 4,\n  Int32BE: 4,\n  FloatLE: 4,\n  FloatBE: 4,\n  DoubleLE: 8,\n  DoubleBE: 8,\n  UInt64: 8,\n  Int64: 8 };\n\n\nvar SPECIAL_TYPES = {\n  String: null,\n  Buffer: null,\n  Array: null,\n  Skip: null,\n  Choice: null,\n  Nest: null,\n  Bit: null,\n  Itf8: null,\n  Ltf8: null };\n\n\nvar aliasRegistry = {};\nvar FUNCTION_PREFIX = \"___parser_\";\n\nvar BIT_RANGE = [];\n(function () {\n  var i;\n  for (i = 1; i <= 32; i++) {\n    BIT_RANGE.push(i);\n  }\n})();\n\n// Converts Parser's method names to internal type names\nvar NAME_MAP = {};\nObject.keys(PRIMITIVE_TYPES).\nconcat(Object.keys(SPECIAL_TYPES)).\nforEach(function (type) {\n  NAME_MAP[type.toLowerCase()] = type;\n});\n\n//= =======================================================================================\n// class Parser\n//= =======================================================================================\n\n//----------------------------------------------------------------------------------------\n// constructor\n//----------------------------------------------------------------------------------------\n\nvar Parser = function Parser() {\n  this.varName = \"\";\n  this.type = \"\";\n  this.options = {};\n  this.next = null;\n  this.head = null;\n  this.compiled = null;\n  this.endian = \"le\";\n  this.constructorFn = null;\n  this.alias = null;\n};\n\n//----------------------------------------------------------------------------------------\n// public methods\n//----------------------------------------------------------------------------------------\n\nParser.start = function () {\n  return new Parser();\n};\n\nObject.keys(PRIMITIVE_TYPES).forEach(function (type) {\n  Parser.prototype[type.toLowerCase()] = function (varName, options) {\n    return this.setNextParser(type.toLowerCase(), varName, options);\n  };\n\n  var typeWithoutEndian = type.replace(/BE|LE/, \"\").toLowerCase();\n  if (!(typeWithoutEndian in Parser.prototype)) {\n    Parser.prototype[typeWithoutEndian] = function (varName, options) {\n      return this[typeWithoutEndian + this.endian](varName, options);\n    };\n  }\n});\n\nBIT_RANGE.forEach(function (i) {\n  Parser.prototype[\"bit\".concat(i.toString())] = function (varName, options) {\n    if (!options) {\n      options = {};\n    }\n    options.length = i;\n    return this.setNextParser(\"bit\", varName, options);\n  };\n});\n\nParser.prototype.namely = function (alias) {\n  aliasRegistry[alias] = this;\n  this.alias = alias;\n  return this;\n};\n\nParser.prototype.skip = function (length, options) {\n  if (options && options.assert) {\n    throw new Error(\"assert option on skip is not allowed.\");\n  }\n\n  return this.setNextParser(\"skip\", \"\", { length: length });\n};\n\nParser.prototype.string = function (varName, options) {\n  if (!options.zeroTerminated && !options.length && !options.greedy) {\n    throw new Error(\n    \"Neither length, zeroTerminated, nor greedy is defined for string.\");\n\n  }\n  if ((options.zeroTerminated || options.length) && options.greedy) {\n    throw new Error(\n    \"greedy is mutually exclusive with length and zeroTerminated for string.\");\n\n  }\n  if (options.stripNull && !(options.length || options.greedy)) {\n    throw new Error(\n    \"Length or greedy must be defined if stripNull is defined.\");\n\n  }\n  options.encoding = options.encoding || \"utf8\";\n\n  return this.setNextParser(\"string\", varName, options);\n};\n\nParser.prototype.buffer = function (varName, options) {\n  if (!options.length && !options.readUntil) {\n    throw new Error(\"Length nor readUntil is defined in buffer parser\");\n  }\n\n  return this.setNextParser(\"buffer\", varName, options);\n};\n\nParser.prototype.array = function (varName, options) {\n  if (!options.readUntil && !options.length && !options.lengthInBytes) {\n    throw new Error(\"Length option of array is not defined.\");\n  }\n  if (!options.type) {\n    throw new Error(\"Type option of array is not defined.\");\n  }\n  if (\n  typeof options.type === \"string\" &&\n  !aliasRegistry[options.type] &&\n  Object.keys(PRIMITIVE_TYPES).indexOf(NAME_MAP[options.type]) < 0)\n  {\n    throw new Error(\"Specified primitive type \\\"\".concat(\n    options.type, \"\\\" is not supported.\"));\n\n  }\n\n  return this.setNextParser(\"array\", varName, options);\n};\n\nParser.prototype.choice = function (varName, options) {\n  if (arguments.length === 1 && _typeof(varName) === \"object\") {\n    options = varName;\n    varName = null;\n  }\n\n  if (!options.tag) {\n    throw new Error(\"Tag option of array is not defined.\");\n  }\n  if (!options.choices) {\n    throw new Error(\"Choices option of array is not defined.\");\n  }\n\n  Object.keys(options.choices).forEach(function (key) {\n    // if (isNaN(parseInt(key, 10))) {\n    //   throw new Error(\"Key of choices must be a number.\");\n    // }\n    if (!options.choices[key]) {\n      throw new Error(\"Choice Case \".concat(key, \" of \").concat(varName, \" is not valid.\"));\n    }\n\n    if (\n    typeof options.choices[key] === \"string\" &&\n    !aliasRegistry[options.choices[key]] &&\n    Object.keys(PRIMITIVE_TYPES).indexOf(NAME_MAP[options.choices[key]]) < 0)\n    {\n      throw new Error(\"Specified primitive type \\\"\".concat(\n      options.choices[key], \"\\\" is not supported.\"));\n\n    }\n  }, this);\n\n  return this.setNextParser(\"choice\", varName, options);\n};\n\nParser.prototype.nest = function (varName, options) {\n  if (arguments.length === 1 && _typeof(varName) === \"object\") {\n    options = varName;\n    varName = null;\n  }\n\n  if (!options.type) {\n    throw new Error(\"Type option of nest is not defined.\");\n  }\n  if (!(options.type instanceof Parser) && !aliasRegistry[options.type]) {\n    throw new Error(\"Type option of nest must be a Parser object.\");\n  }\n  if (!(options.type instanceof Parser) && !varName) {\n    throw new Error(\n    \"options.type must be a object if variable name is omitted.\");\n\n  }\n\n  return this.setNextParser(\"nest\", varName, options);\n};\n\nParser.prototype.endianess = function (endianess) {\n  switch (endianess.toLowerCase()) {\n    case \"little\":\n      this.endian = \"le\";\n      break;\n    case \"big\":\n      this.endian = \"be\";\n      break;\n    default:\n      throw new Error(\"Invalid endianess: \".concat(endianess));}\n\n\n  return this;\n};\n\nParser.prototype.create = function (constructorFn) {\n  if (!(constructorFn instanceof Function)) {\n    throw new Error(\"Constructor must be a Function object.\");\n  }\n\n  this.constructorFn = constructorFn;\n\n  return this;\n};\n\nParser.prototype.getCode = function () {\n  var ctx = new Context();\n\n  ctx.pushCode(\"if (!Buffer.isBuffer(buffer)) {\");\n  ctx.generateError('\"argument buffer is not a Buffer object\"');\n  ctx.pushCode(\"}\");\n\n  if (!this.alias) {\n    this.addRawCode(ctx);\n  } else {\n    this.addAliasedCode(ctx);\n  }\n\n  if (this.alias) {\n    ctx.pushCode(\"return {0}(0)\", FUNCTION_PREFIX + this.alias);\n  } else {\n    ctx.pushCode(\"return { offset: offset, result: vars };\");\n  }\n\n  return ctx.code;\n};\n\nParser.prototype.addRawCode = function (ctx) {\n  ctx.pushCode(\"var offset = 0;\");\n\n  if (this.constructorFn) {\n    ctx.pushCode(\"var vars = new constructorFn();\");\n  } else {\n    ctx.pushCode(\"var vars = {};\");\n  }\n\n  this.generate(ctx);\n\n  this.resolveReferences(ctx);\n\n  ctx.pushCode(\"return { offset: offset, result: vars };\");\n};\n\nParser.prototype.addAliasedCode = function (ctx) {\n  ctx.pushCode(\"function {0}(offset) {\", FUNCTION_PREFIX + this.alias);\n\n  if (this.constructorFn) {\n    ctx.pushCode(\"var vars = new constructorFn();\");\n  } else {\n    ctx.pushCode(\"var vars = {};\");\n  }\n\n  this.generate(ctx);\n\n  ctx.markResolved(this.alias);\n  this.resolveReferences(ctx);\n\n  ctx.pushCode(\"return { offset: offset, result: vars };\");\n  ctx.pushCode(\"}\");\n\n  return ctx;\n};\n\nParser.prototype.resolveReferences = function (ctx) {\n  var references = ctx.getUnresolvedReferences();\n  ctx.markRequested(references);\n  references.forEach(function (alias) {\n    var parser = aliasRegistry[alias];\n    parser.addAliasedCode(ctx);\n  });\n};\n\nParser.prototype.compile = function () {\n  var src = \"(function(buffer, constructorFn, Long) { \".concat(this.getCode(), \" })\");\n  this.compiled = vm.runInThisContext(src);\n};\n\nParser.prototype.sizeOf = function () {\n  var size = NaN;\n\n  if (Object.keys(PRIMITIVE_TYPES).indexOf(this.type) >= 0) {\n    size = PRIMITIVE_TYPES[this.type];\n\n    // if this is a fixed length string\n  } else if (\n  this.type === \"String\" &&\n  typeof this.options.length === \"number\")\n  {\n    size = this.options.length;\n\n    // if this is a fixed length buffer\n  } else if (\n  this.type === \"Buffer\" &&\n  typeof this.options.length === \"number\")\n  {\n    size = this.options.length;\n\n    // if this is a fixed length array\n  } else if (this.type === \"Array\" && typeof this.options.length === \"number\") {\n    var elementSize = NaN;\n    if (typeof this.options.type === \"string\") {\n      elementSize = PRIMITIVE_TYPES[NAME_MAP[this.options.type]];\n    } else if (this.options.type instanceof Parser) {\n      elementSize = this.options.type.sizeOf();\n    }\n    size = this.options.length * elementSize;\n\n    // if this a skip\n  } else if (this.type === \"Skip\") {\n    size = this.options.length;\n\n    // if this is a nested parser\n  } else if (this.type === \"Nest\") {\n    size = this.options.type.sizeOf();\n  } else if (!this.type) {\n    size = 0;\n  }\n\n  if (this.next) {\n    size += this.next.sizeOf();\n  }\n\n  return size;\n};\n\n// Follow the parser chain till the root and start parsing from there\nParser.prototype.parse = function (buffer) {\n  if (!this.compiled) {\n    this.compile();\n  }\n\n  return this.compiled(buffer, this.constructorFn, Long);\n};\n\n//----------------------------------------------------------------------------------------\n// private methods\n//----------------------------------------------------------------------------------------\n\nParser.prototype.setNextParser = function (type, varName, options) {\n  var parser = new Parser();\n\n  parser.type = NAME_MAP[type];\n  parser.varName = varName;\n  parser.options = options || parser.options;\n  parser.endian = this.endian;\n\n  if (this.head) {\n    this.head.next = parser;\n  } else {\n    this.next = parser;\n  }\n  this.head = parser;\n\n  return this;\n};\n\n// Call code generator for this parser\nParser.prototype.generate = function (ctx) {\n  if (this.type) {\n    this[\"generate\".concat(this.type)](ctx);\n    this.generateAssert(ctx);\n  }\n\n  var varName = ctx.generateVariable(this.varName);\n  if (this.options.formatter) {\n    this.generateFormatter(ctx, varName, this.options.formatter);\n  }\n\n  return this.generateNext(ctx);\n};\n\nParser.prototype.generateAssert = function (ctx) {\n  if (!this.options.assert) {\n    return;\n  }\n\n  var varName = ctx.generateVariable(this.varName);\n\n  switch (_typeof(this.options.assert)) {\n    case \"function\":\n      ctx.pushCode(\n      \"if (!({0}).call(vars, {1})) {\",\n      this.options.assert,\n      varName);\n\n      break;\n    case \"number\":\n      ctx.pushCode(\"if ({0} !== {1}) {\", this.options.assert, varName);\n      break;\n    case \"string\":\n      ctx.pushCode('if (\"{0}\" !== {1}) {', this.options.assert, varName);\n      break;\n    default:\n      throw new Error(\n      \"Assert option supports only strings, numbers and assert functions.\");}\n\n\n  ctx.generateError('\"Assert error: {0} is \" + {0}', varName);\n  ctx.pushCode(\"}\");\n};\n\n// Recursively call code generators and append results\nParser.prototype.generateNext = function (ctx) {\n  if (this.next) {\n    ctx = this.next.generate(ctx);\n  }\n\n  return ctx;\n};\n\nObject.keys(PRIMITIVE_TYPES).forEach(function (type) {\n  Parser.prototype[\"generate\".concat(type)] = function (ctx) {\n    if (type === \"UInt64\") {\n      ctx.pushCode(\n      \"{0} = Long.fromBytes(buffer.slice(offset,offset+8), true, this.endian === 'le').toNumber();\",\n      ctx.generateVariable(this.varName),\n      type);\n\n    } else if (type === \"Int64\") {\n      ctx.pushCode(\n      \"{0} = Long.fromBytes(buffer.slice(offset,offset+8), false, this.endian === 'le').toNumber();\",\n      ctx.generateVariable(this.varName),\n      type);\n\n    } else {\n      ctx.pushCode(\n      \"{0} = buffer.read{1}(offset);\",\n      ctx.generateVariable(this.varName),\n      type);\n\n    }\n    ctx.pushCode(\"offset += {0};\", PRIMITIVE_TYPES[type]);\n  };\n});\n\nParser.prototype.generateBit = function (ctx) {\n  // TODO find better method to handle nested bit fields\n  var parser = JSON.parse(JSON.stringify(this));\n  parser.varName = ctx.generateVariable(parser.varName);\n  ctx.bitFields.push(parser);\n\n  if (\n  !this.next ||\n  this.next && [\"Bit\", \"Nest\"].indexOf(this.next.type) < 0)\n  {\n    var sum = 0;\n    ctx.bitFields.forEach(function (p) {\n      sum += p.options.length;\n    });\n\n    var val = ctx.generateTmpVariable();\n\n    if (sum <= 8) {\n      ctx.pushCode(\"var {0} = buffer.readUInt8(offset);\", val);\n      sum = 8;\n    } else if (sum <= 16) {\n      ctx.pushCode(\"var {0} = buffer.readUInt16BE(offset);\", val);\n      sum = 16;\n    } else if (sum <= 24) {\n      var val1 = ctx.generateTmpVariable();\n      var val2 = ctx.generateTmpVariable();\n      ctx.pushCode(\"var {0} = buffer.readUInt16BE(offset);\", val1);\n      ctx.pushCode(\"var {0} = buffer.readUInt8(offset + 2);\", val2);\n      ctx.pushCode(\"var {2} = ({0} << 8) | {1};\", val1, val2, val);\n      sum = 24;\n    } else if (sum <= 32) {\n      ctx.pushCode(\"var {0} = buffer.readUInt32BE(offset);\", val);\n      sum = 32;\n    } else {\n      throw new Error(\n      \"Currently, bit field sequence longer than 4-bytes is not supported.\");\n\n    }\n    ctx.pushCode(\"offset += {0};\", sum / 8);\n\n    var bitOffset = 0;\n    var isBigEndian = this.endian === \"be\";\n    ctx.bitFields.forEach(function (p) {\n      ctx.pushCode(\n      \"{0} = {1} >> {2} & {3};\",\n      p.varName,\n      val,\n      isBigEndian ? sum - bitOffset - p.options.length : bitOffset,\n      (1 << p.options.length) - 1);\n\n      bitOffset += p.options.length;\n    });\n\n    ctx.bitFields = [];\n  }\n};\n\nParser.prototype.generateSkip = function (ctx) {\n  var length = ctx.generateOption(this.options.length);\n  ctx.pushCode(\"offset += {0};\", length);\n};\n\nParser.prototype.generateString = function (ctx) {\n  var name = ctx.generateVariable(this.varName);\n  var start = ctx.generateTmpVariable();\n\n  if (this.options.length && this.options.zeroTerminated) {\n    ctx.pushCode(\"var {0} = offset;\", start);\n    ctx.pushCode(\n    \"while(buffer.readUInt8(offset++) !== 0 && offset - {0}  < {1});\",\n    start,\n    this.options.length);\n\n    ctx.pushCode(\n    \"{0} = buffer.toString('{1}', {2}, offset - {2} < {3} ? offset - 1 : offset);\",\n    name,\n    this.options.encoding,\n    start,\n    this.options.length);\n\n  } else if (this.options.length) {\n    ctx.pushCode(\n    \"{0} = buffer.toString('{1}', offset, offset + {2});\",\n    name,\n    this.options.encoding,\n    ctx.generateOption(this.options.length));\n\n    ctx.pushCode(\"offset += {0};\", ctx.generateOption(this.options.length));\n  } else if (this.options.zeroTerminated) {\n    ctx.pushCode(\"var {0} = offset;\", start);\n    ctx.pushCode(\"while(buffer.readUInt8(offset++) !== 0);\");\n    ctx.pushCode(\n    \"{0} = buffer.toString('{1}', {2}, offset - 1);\",\n    name,\n    this.options.encoding,\n    start);\n\n  } else if (this.options.greedy) {\n    ctx.pushCode(\"var {0} = offset;\", start);\n    ctx.pushCode(\"while(buffer.length > offset++);\");\n    ctx.pushCode(\n    \"{0} = buffer.toString('{1}', {2}, offset);\",\n    name,\n    this.options.encoding,\n    start);\n\n  }\n  if (this.options.stripNull) {\n    ctx.pushCode(\"{0} = {0}.replace(/\\\\x00+$/g, '')\", name);\n  }\n};\n\nParser.prototype.generateBuffer = function (ctx) {\n  if (this.options.readUntil === \"eof\") {\n    ctx.pushCode(\n    \"{0} = buffer.slice(offset);\",\n    ctx.generateVariable(this.varName));\n\n  } else {\n    ctx.pushCode(\n    \"{0} = buffer.slice(offset, offset + {1});\",\n    ctx.generateVariable(this.varName),\n    ctx.generateOption(this.options.length));\n\n    ctx.pushCode(\"offset += {0};\", ctx.generateOption(this.options.length));\n  }\n\n  if (this.options.clone) {\n    ctx.pushCode(\"{0} = Buffer.from({0});\", ctx.generateVariable(this.varName));\n  }\n};\n\nParser.prototype.generateArray = function (ctx) {\n  var length = ctx.generateOption(this.options.length);\n  var lengthInBytes = ctx.generateOption(this.options.lengthInBytes);\n  var type = this.options.type;\n  var counter = ctx.generateTmpVariable();\n  var lhs = ctx.generateVariable(this.varName);\n  var item = ctx.generateTmpVariable();\n  var key = this.options.key;\n  var isHash = typeof key === \"string\";\n\n  if (isHash) {\n    ctx.pushCode(\"{0} = {};\", lhs);\n  } else {\n    ctx.pushCode(\"{0} = [];\", lhs);\n  }\n  if (typeof this.options.readUntil === \"function\") {\n    ctx.pushCode(\"do {\");\n  } else if (this.options.readUntil === \"eof\") {\n    ctx.pushCode(\"for (var {0} = 0; offset < buffer.length; {0}++) {\", counter);\n  } else if (lengthInBytes !== undefined) {\n    ctx.pushCode(\n    \"for (var {0} = offset; offset - {0} < {1}; ) {\",\n    counter,\n    lengthInBytes);\n\n  } else {\n    ctx.pushCode(\"for (var {0} = 0; {0} < {1}; {0}++) {\", counter, length);\n  }\n\n  if (typeof type === \"string\") {\n    if (!aliasRegistry[type]) {\n      ctx.pushCode(\"var {0} = buffer.read{1}(offset);\", item, NAME_MAP[type]);\n      ctx.pushCode(\"offset += {0};\", PRIMITIVE_TYPES[NAME_MAP[type]]);\n    } else {\n      var tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(\"var {0} = {1}(offset);\", tempVar, FUNCTION_PREFIX + type);\n      ctx.pushCode(\"var {0} = {1}.result; offset = {1}.offset;\", item, tempVar);\n      if (type !== this.alias) ctx.addReference(type);\n    }\n  } else if (type instanceof Parser) {\n    ctx.pushCode(\"var {0} = {};\", item);\n\n    ctx.pushScope(item);\n    type.generate(ctx);\n    ctx.popScope();\n  }\n\n  if (isHash) {\n    ctx.pushCode(\"{0}[{2}.{1}] = {2};\", lhs, key, item);\n  } else {\n    ctx.pushCode(\"{0}.push({1});\", lhs, item);\n  }\n\n  ctx.pushCode(\"}\");\n\n  if (typeof this.options.readUntil === \"function\") {\n    ctx.pushCode(\n    \" while (!({0}).call(this, {1}, buffer.slice(offset)));\",\n    this.options.readUntil,\n    item);\n\n  }\n};\n\nParser.prototype.generateChoiceCase = function (ctx, varName, type) {\n  if (typeof type === \"string\") {\n    if (!aliasRegistry[type]) {\n      ctx.pushCode(\n      \"{0} = buffer.read{1}(offset);\",\n      ctx.generateVariable(this.varName),\n      NAME_MAP[type]);\n\n      ctx.pushCode(\"offset += {0};\", PRIMITIVE_TYPES[NAME_MAP[type]]);\n    } else {\n      var tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(\"var {0} = {1}(offset);\", tempVar, FUNCTION_PREFIX + type);\n      ctx.pushCode(\n      \"{0} = {1}.result; offset = {1}.offset;\",\n      ctx.generateVariable(this.varName),\n      tempVar);\n\n      if (type !== this.alias) ctx.addReference(type);\n    }\n  } else if (type instanceof Parser) {\n    ctx.pushPath(varName);\n    type.generate(ctx);\n    ctx.popPath(varName);\n  }\n};\n\nParser.prototype.generateChoice = function (ctx) {\n  var tag = ctx.generateOption(this.options.tag);\n  if (this.varName) {\n    ctx.pushCode(\"{0} = {};\", ctx.generateVariable(this.varName));\n  }\n  ctx.pushCode(\"switch({0}) {\", tag);\n  Object.keys(this.options.choices).forEach(function (t) {\n    var type = this.options.choices[t];\n    if (Number.isNaN(parseInt(t, 10))) {\n      ctx.pushCode(\"case '{0}':\", t);\n    } else {\n      ctx.pushCode(\"case {0}:\", t);\n    }\n    this.generateChoiceCase(ctx, this.varName, type);\n    ctx.pushCode(\"break;\");\n  }, this);\n  ctx.pushCode(\"default:\");\n  if (this.options.defaultChoice) {\n    this.generateChoiceCase(ctx, this.varName, this.options.defaultChoice);\n  } else {\n    ctx.generateError('\"Met undefined tag value \" + {0} + \" at choice\"', tag);\n  }\n  ctx.pushCode(\"}\");\n};\n\nParser.prototype.generateNest = function (ctx) {\n  var nestVar = ctx.generateVariable(this.varName);\n\n  if (this.options.type instanceof Parser) {\n    if (this.varName) {\n      ctx.pushCode(\"{0} = {};\", nestVar);\n    }\n    ctx.pushPath(this.varName);\n    this.options.type.generate(ctx);\n    ctx.popPath(this.varName);\n  } else if (aliasRegistry[this.options.type]) {\n    var tempVar = ctx.generateTmpVariable();\n    ctx.pushCode(\n    \"var {0} = {1}(offset);\",\n    tempVar,\n    FUNCTION_PREFIX + this.options.type);\n\n    ctx.pushCode(\"{0} = {1}.result; offset = {1}.offset;\", nestVar, tempVar);\n    if (this.options.type !== this.alias) ctx.addReference(this.options.type);\n  }\n};\n\nParser.prototype.generateFormatter = function (ctx, varName, formatter) {\n  if (typeof formatter === \"function\") {\n    ctx.pushCode(\"{0} = ({1}).call(this, {0});\", varName, formatter);\n  }\n};\n\nParser.prototype.isInteger = function () {\n  return !!this.type.match(/U?Int[8|16|32][BE|LE]?|Bit\\d+/);\n};\n\n// /////////////////// CRAM-specific types //////////////////////////\n//\nParser.prototype.itf8 = function (varName, options) {\n  return this.setNextParser(\"itf8\", varName, options);\n};\nParser.prototype.itf8 = function (varName, options) {\n  return this.setNextParser(\"itf8\", varName, options);\n};\n\nParser.prototype.generateItf8 = function (ctx) {\n  var name = ctx.generateVariable(this.varName);\n  var countFlags = ctx.generateTmpVariable();\n  ctx.pushCode(\"\\n    var \".concat(\n  countFlags, \" = buffer[offset];\\n    if (\").concat(\n  countFlags, \" < 0x80) {\\n      \").concat(\n  name, \" = \").concat(countFlags, \";\\n      offset += 1;\\n    } else if (\").concat(\n\n  countFlags, \" < 0xc0) {\\n      \").concat(\n  name, \" = ((\").concat(countFlags, \"<<8) | buffer[offset+1]) & 0x3fff;\\n      offset += 2;\\n    } else if (\").concat(\n\n  countFlags, \" < 0xe0) {\\n      \").concat(\n  name, \" = ((\").concat(countFlags, \"<<16) | (buffer[offset+1]<< 8) |  buffer[offset+2]) & 0x1fffff;\\n      offset += 3;\\n    } else if (\").concat(\n\n  countFlags, \" < 0xf0) {\\n      \").concat(\n  name, \" = ((\").concat(countFlags, \"<<24) | (buffer[offset+1]<<16) | (buffer[offset+2]<<8) | buffer[offset+3]) & 0x0fffffff;\\n      offset += 4\\n    } else {\\n      \").concat(\n\n\n  name, \" = ((\").concat(countFlags, \" & 0x0f)<<28) | (buffer[offset+1]<<20) | (buffer[offset+2]<<12) | (buffer[offset+3]<<4) | (buffer[offset+4] & 0x0f);\\n      // x=((0xff & 0x0f)<<28) | (0xff<<20) | (0xff<<12) | (0xff<<4) | (0x0f & 0x0f);\\n      // TODO *val_p = uv < 0x80000000UL ? uv : -((int32_t) (0xffffffffUL - uv)) - 1;\\n      offset += 5\\n    }\\n  \"));\n\n\n\n\n\n};\n\nParser.prototype.ltf8 = function (varName, options) {\n  return this.setNextParser(\"ltf8\", varName, options);\n};\n\nParser.prototype.generateLtf8 = function (ctx) {\n  var name = ctx.generateVariable(this.varName);\n  var countFlags = ctx.generateTmpVariable();\n  ctx.pushCode(\"\\n  var \".concat(\n  countFlags, \" = buffer[offset];\\n  if (\").concat(\n  countFlags, \" < 0x80) {\\n    \").concat(\n  name, \" = \").concat(countFlags, \";\\n    offset += 1;\\n  } else if (\").concat(\n\n  countFlags, \" < 0xc0) {\\n    \").concat(\n  name, \" = ((buffer[offset]<<8) | buffer[offset+1]) & 0x3fff;\\n    offset += 2;\\n  } else if (\").concat(\n\n  countFlags, \" < 0xe0) {\\n    \").concat(\n  name, \" = ((buffer[offset]<<16) | (buffer[offset+1]<<8) | buffer[offset+2]) & 0x1fffff;\\n    \").concat(\n  name, \" = (((\").concat(countFlags, \" & 63) << 16) | buffer.readUInt16LE(offset + 1));\\n    offset += 3;\\n  } else if (\").concat(\n\n  countFlags, \" < 0xf0) {\\n    \").concat(\n  name, \" = ((buffer[offset]<<24) | (buffer[offset+1]<<16) | (buffer[offset+2]<<8) | buffer[offset+3]) & 0x0fffffff;\\n    offset += 4;\\n  } else if (\").concat(\n\n  countFlags, \" < 0xf8) {\\n    \").concat(\n  name, \" = (((buffer[offset] & 15) * Math.pow(2,32))) +\\n      (buffer[offset+1]<<24) | (buffer[offset+2]<<16 | buffer[offset+3]<<8 | buffer[offset+4])\\n    // TODO *val_p = uv < 0x80000000UL ? uv : -((int32_t) (0xffffffffUL - uv)) - 1;\\n    offset += 5;\\n  } else if (\").concat(\n\n\n\n  countFlags, \" < 0xfc) {\\n    \").concat(\n  name, \" = ((((buffer[offset] & 7) << 8) | buffer[offset+1] )) * Math.pow(2,32) +\\n      (buffer[offset+2]<<24) | (buffer[offset+3]<<16 | buffer[offset+4]<<8 | buffer[offset+5])\\n    offset += 6;\\n  } else if (\").concat(\n\n\n  countFlags, \" < 0xfe) {\\n    \").concat(\n  name, \" = ((((buffer[offset] & 3) << 16) | buffer[offset+1]<<8 | buffer[offset+2])) * Math.pow(2,32) +\\n      (buffer[offset+3]<<24) | (buffer[offset+4]<<16 | buffer[offset+5]<<8 | buffer[offset+6])\\n    offset += 7;\\n  } else if (\").concat(\n\n\n  countFlags, \" < 0xff) {\\n    \").concat(\n  name, \" = Long.fromBytesBE(buffer.slice(offset+1,offset+8));\\n    if (\").concat(\n  name, \".greaterThan(Number.MAX_SAFE_INTEGER) || \").concat(name, \".lessThan(Number.MIN_SAFE_INTEGER))\\n      throw new Error('integer overflow')\\n    \").concat(\n\n  name, \" = \").concat(name, \".toNumber()\\n    offset += 8;\\n  } else {\\n    \").concat(\n\n\n  name, \" = Long.fromBytesBE(buffer.slice(offset+1,offset+9));\\n    if (\").concat(\n  name, \".greaterThan(Number.MAX_SAFE_INTEGER) || \").concat(name, \".lessThan(Number.MIN_SAFE_INTEGER))\\n      throw new Error('integer overflow')\\n    \").concat(\n\n  name, \" = \").concat(name, \".toNumber()\\n    offset += 9;\\n  }\\n  \"));\n\n\n\n};\n\n//= =======================================================================================\n// Exports\n//= =======================================================================================\n\nexports.Parser = Parser;","// https://github.com/ionic-team/rollup-plugin-node-polyfills/blob/9b5fe1a9cafffd4871e6d65613ed224f807ea251/polyfills/vm.js#L129-L132\nfunction runInThisContext(code) {\n  const fn = new Function('code', 'return eval(code);');\n  return fn.call(globalThis, code);\n}\n\nmodule.exports.runInThisContext = runInThisContext;\n","\"use strict\";function _typeof(obj) {if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};}return _typeof(obj);} //= =======================================================================================\n// class Context\n//= =======================================================================================\n\n//----------------------------------------------------------------------------------------\n// constructor\n//----------------------------------------------------------------------------------------\n\nvar Context = function Context() {\n  this.code = \"\";\n  this.scopes = [[\"vars\"]];\n  this.isAsync = false;\n  this.bitFields = [];\n  this.tmpVariableCount = 0;\n  this.references = {};\n};\n\n//----------------------------------------------------------------------------------------\n// public methods\n//----------------------------------------------------------------------------------------\n\nContext.prototype.generateVariable = function (name) {\n  var arr = [];\n\n  Array.prototype.push.apply(arr, this.scopes[this.scopes.length - 1]);\n\n  // $parent. prefixes allow sub-parsers to access values of their parent parsers\n  while (/^\\$parent\\./.test(name)) {\n    arr.pop();\n    name = name.replace(/^\\$parent\\./, \"\");\n  }\n\n  if (name) {\n    arr.push(name);\n  }\n\n  return arr.join(\".\");\n};\n\nContext.prototype.generateOption = function (val) {\n  switch (_typeof(val)) {\n    case \"number\":\n      return val.toString();\n    case \"string\":\n      return this.generateVariable(val);\n    case \"function\":\n      return \"(\".concat(val, \").call(\").concat(this.generateVariable(), \", vars)\");\n    default:\n      return undefined;}\n\n};\n\nContext.prototype.generateError = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var err = Context.interpolate.apply(this, args);\n\n  if (this.isAsync) {\n    this.pushCode(\"return process.nextTick(function() { callback(new Error(\".concat(\n    err, \"), vars); });\"));\n\n  } else {\n    this.pushCode(\"throw new Error(\".concat(err, \");\"));\n  }\n};\n\nContext.prototype.generateTmpVariable = function () {\n  return \"$tmp\".concat(this.tmpVariableCount++);\n};\n\nContext.prototype.pushCode = function () {\n  var args = Array.prototype.slice.call(arguments);\n\n  this.code += \"\".concat(Context.interpolate.apply(this, args), \"\\n\");\n};\n\nContext.prototype.pushPath = function (name) {\n  if (name) {\n    this.scopes[this.scopes.length - 1].push(name);\n  }\n};\n\nContext.prototype.popPath = function (name) {\n  if (name) {\n    this.scopes[this.scopes.length - 1].pop();\n  }\n};\n\nContext.prototype.pushScope = function (name) {\n  this.scopes.push([name]);\n};\n\nContext.prototype.popScope = function () {\n  this.scopes.pop();\n};\n\nContext.prototype.addReference = function (alias) {\n  if (this.references[alias]) return;\n  this.references[alias] = { resolved: false, requested: false };\n};\n\nContext.prototype.markResolved = function (alias) {\n  this.references[alias].resolved = true;\n};\n\nContext.prototype.markRequested = function (aliasList) {\n  aliasList.forEach(\n  function (alias) {\n    this.references[alias].requested = true;\n  }.bind(this));\n\n};\n\nContext.prototype.getUnresolvedReferences = function () {\n  var references = this.references;\n  return Object.keys(this.references).filter(function (alias) {\n    return !references[alias].resolved && !references[alias].requested;\n  });\n};\n\n//----------------------------------------------------------------------------------------\n// private methods\n//----------------------------------------------------------------------------------------\n\nContext.interpolate = function (s) {\n  var re = /{\\d+}/g;\n  var matches = s.match(re);\n  var params = Array.prototype.slice.call(arguments, 1);\n\n  if (matches) {\n    matches.forEach(function (match) {\n      var index = parseInt(match.substr(1, match.length - 2), 10);\n      s = s.replace(match, params[index].toString());\n    });\n  }\n\n  return s;\n};\n\nexports.Context = Context;"],"sourceRoot":""}